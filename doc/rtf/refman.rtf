{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
{\info 
{\title {\comment My Project }My Project}
{\comment Generated byDoxgyen. }
{\creatim \yr2015\mo10\dy9\hr9\min0\sec47}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TITLE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt CREATEDATE}}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
README{\tc \v README}\par \pard\plain 
{\bkmkstart AAAAAAAFLR}
{\bkmkend AAAAAAAFLR}
\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CLAIMS}  is a parallel in-memory database prototype, which runs on clusters of commodity servers and provides fast data analysis on relational dataset.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Highlights\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}1. ***Massively parallel execution engine***.\par}
CLAIMS relies on highly parallel query processing engine to dramatically accelerate data analysis speed. Query evaluations are distributed across the cluster and executed in parallel. Even if on each node which constructs a mini-network (e.g., multi-processor, multi-core, NUMA), queries are evaluated in a multi-thread fashion to leverage the computation power of multi-core hardware.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}2. ***Smart intra-node parallelism***.\par}
Pipelining the query execution among the clusters could effectively improve the query respond time, but the benefits will be discounted if the workloads among execution fragments are imbalanced due to the improper intra-node parallelism. To tackle this problem, a novel elastic pipelining is proposed in CLAIMS to automatically adjust the intra-node parallelism of each query according to the runtime workload. Thanks to elastic pipelining, execution fragments which are detected to the performance bottleneck of the whole query will be given more parallelism to accelerate the data processing, while the parallelism of execution fragments that are detected to be over-producing will be decreased to avoid unnecessary computation allocation.\par
Pipelining the query execution among nodes in the cluster effectively reduces the response latency and dramatically saves storage space for intermediate query results. However, its benefits degrade tremendously when the workloads are imbalanced among execution partitions due to the improperly generated query execution plan. To tackle this problem, a novel elastic pipelining query processing model is proposed in CLAIMS, which adapts the intra-node parallelism to the runtime workload. Beneficial from elastic pipelining query processing, the parallelism of different execution fragments in a pipelined is self-adaptive with each other and results in an optimal intra-node parallelism assignment.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}3. ***Efficient in-memory data processing***.\par}
Loong employs a large set of optimization techniques to achieve efficient in-memory data processing, including batch-at-a-time processing, cache-sensitive operators, SIMD-based optimization, code generation, lock-free and concurrent processing structures. These optimizations collaborate together and enable Loong to process up to gigabytes data per second within a single thread. {\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}4. ***Network communication optimization***.\par}
Parallel query processing imposes high burdens on network communication, which becomes the performance bottleneck for in-memory parallel databases due to the relatively slow network bandwidth comparing to the efficient in-memory data processing throughput. When compiling a user query into an execution plan, CLAIMS\'92s query optimizer leverages a sophisticated selectivity propagation system and cost model to generate physical query plans with minimized network communication cost. Furthermore, Loong deploys a new data exchange implementation, which offers efficient, scalable and skew-resilient network data communication among Loong instances. These optimizations greatly reduce the response time of the queries that require network data communication.\par
#Performance Beneficial from the smart and massively parallelism and the in-memory data processing optimizations, CLAIMS is up to 5X faster than Shark and Impala, two state-of-the-art systems in the open source community, in the queries over TPCH dataset and Shanghai Stock Exchange dataset.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Team members\par}
{\f2 Aoying Zhou}, a professor in East China Normal University, is the person in charge of this project.\par
{\f2 Minqi Zhou}, an associate professor in East China Normal University, is the person in charge of this project.\par
{\f2 Li Wang}, a Ph.D. student in East China Normal University, manages the master students in this team and is responsible for designing and implementing the key components of Loong, including query optimizer, catalog, physical operators, distributed communication infrastructure, storage layout, etc.\par
{\f2 Lei Zhang} is responsible for designing and implementing the key components of Loong, including query optimizer, physical operators, persistent data exchange, storage management, etc.\par
{\f2 Shaochan Dong} is responsible for designing and implementing in-memory index and index management, data types, as well as data loading and importing.\par
[Xinzhou Zhang]() is mainly responsible for web UI design and implementing data importing model.\par
{\f2 Zhuhe Fang} is mainly responsible for designing and implementing SQL DML parser and physical operators.\par
{\f2 Yu Kai} is mainly responsible for designing and implementing SQL DDL parser, catalog persistence.\par
{\f2 Yongfeng Li} was a formal member of CLAIMS, who participated in designing and implementing catalog model.\par
[Lin Gu]() is responsible for designing the demo cases of CLAIMS.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Publications\par}
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Li Wang, Minqi Zhou, Zhenjie Zhang, Yin Yang, Ming-chien Shan, Aoying Zhou. Elastic Pipelining in In-Memory Database Cluster. Submitted to SIGMOD 2015.\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Li Wang, Minqi Zhou, Zhenjie Zhang, Ming-chien Shan, Aoying Zhou. NUMA-aware Scalable and Efficient Aggregation on Large Domains. Accepted by TKDE.\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
3.\tab Li Wang, Lei Zhang, Chengcheng Yu, Aoying Zhou. Optimizing Pipelined Execution for Distributed In-memory OLAY System. In: DaMen 2014. Springer. 2014. pp. 35-56.\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
4.\tab Lan Huang, Ke Xun, Xiaozhou Chen, Minqi Zhou, In-memory Cluster Computing: Interactive Data Analysis, Journal of East China Normal University, 2014\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
5.\tab Shaochan Dong, Minqi Zhou, Rong Zhang\'EF\'BC\'8CAoying Zhou, In-Memory Index\'EF\'BC\'9APerformance Enhancement Leveraging on Processors, Journal of East China Normal University,2014\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
6.\tab Xinzhou Zhang, Minqi Zhou,A Survey of Fault Tolerance and Fault Recovery Technique in Large Distributed Parallel Computing System, Journal of East China Normal University,2014\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
7.\tab Lei Zhang, Minqi Zhou, Li Wang, LCDJ: Locality Conscious {\b Join} Alogrithm for In-memory Cluster Computing, Journal of East China Normal University, 2014\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
8.\tab Lei Zhang, Zhuhe Fang, Minqi Zhou\'EF\'BC\'8CLan Huang, {\b Join} Algorithms Towards In-memory Computing, Journal of East China Normal University, 2014\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
9.\tab Yongfeng Li, Minqi Zhou, Hualiang Hu, Survey of resource uniform management and scheduling in cluster, Journal of East China Normal University, 2014\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Quick Start\par}
Try our CLAIMS, following {\f2 Quick Start}. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Deprecated List{\tc \v Deprecated List}\par \pard\plain 
{\bkmkstart AAAAAAAFLS}
{\bkmkend AAAAAAAFLS}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
Member {\b Json::Reader::getFormatedErrorMessages}  () const \par
}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Use getFormattedErrorMessages() instead (typo fix). \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Namespace List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented namespaces with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b claims} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
JSON (JavaScript Object Notation) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ttmath} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Namespace for the TTMath library })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Actor
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
BlockManager::BlockManagerWorkerActor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockManagerMaster::BlockManagerMasterActor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Coordinator::CoordinateActor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
IteratorExecutorSlave::ExecuteIteratorActor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ResourceManagerMaster::ResourceManagerMasterActor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
AllBlockInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamHdfsScan::allocated_block\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamSingleColumnScan::allocated_block\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamProjectionScan::allocated_block\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Alter_def\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Alterdatabase_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Altertable_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Analyzer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
boost::serialization::stl::archive_input_unordered_map< Archive, Container >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
boost::serialization::stl::archive_input_unordered_multimap< Archive, Container >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Arg\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ASTParserLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
attr_index_list\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Attribute\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADF \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Column\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
AttributeID\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
AttributeStatistics\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Barrier\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BasicHashTable\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Json::BatchAllocator< AllocatedType, objectPerAllocation >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
bit128\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlanceMatcher\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Block\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGD \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
BlockContainer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKI \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
BlockStreamFix\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamVar\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
ChunkReaderIterator::block_accessor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ChunkReaderIterator::InDiskBlockAccessor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ChunkReaderIterator::InHDFSBlockAccessor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ChunkReaderIterator::InMemeryBlockAccessor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
BlockInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockManager::BlockInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockManagerMaster::BlockInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockManagerId\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockManagerMaster\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStatusMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStatusRespond\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamIteratorBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAND \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
BlockStreamCombinedIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamExchangeLowerBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMN \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ExpandableBlockStreamExchangeLowerEfficient\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamExchangeLowerMaterialized\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
BlockStreamExpander\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamInIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamLimit\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamPerformanceMonitorTop\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamPrint\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamResultCollector\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamSortIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamBuffer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamHdfsScan\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamRandomDiskAccess\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamRandomMemAccess\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamSingleColumnScan\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamSingleColumnScanDisk\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PhysicalOperator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
BlockStreamAggregationIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamJoinIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamNestLoopJoinIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamProjectIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
bottomLayerCollecting\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
bottomLayerSorting\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamExchangeEpoll\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamFilter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamProjectionScan\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
IndexScanIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
BlockStreamJoinLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamBase::BlockStreamTraverseIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
InsertOptimizedHashTable::bucket\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
InsertOptimizedHashTable::BucketIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACON \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BufferManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Catalog\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CCSBNode< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCB \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CCSBInternalNode< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CCSBLeafNode< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
CCSBNodeGroup< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CCSBInternalNodeGroup< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CCSBLeafNodeGroup< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ChunkID\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ChunkInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ChunkReaderIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
DiskChunkReaderIteraror\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HDFSChunkReaderIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
InMemoryChunkReaderItetaor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ChunkStorage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ChunkStore\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Client\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ClientListener\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ClientListenerLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ClientLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ClientResponse\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CodeGenerator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Column_atts\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
column_metadata\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
column_type\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ColumnDistribution\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
UniformInt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ColumnHeader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ColumnID\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Columns\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Commit_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Comparator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJV \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
AttributeComparator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
bottomLayerSorting::compare_node\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Condition\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Config\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Connector\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLJ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
HdfsConnector\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
LocalDiskConnector\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ttmath::Conv\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Coordinator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CPUResourceManager::core\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABME \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
COUNTER\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CPUResourceManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Create_col_list\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Create_database_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Create_def\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABND \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Create_projection_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Create_select_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Create_table_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Createindex_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CreateTableMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CreateTableRespond\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CSBPlusTree< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamHdfsScan::current_block\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Daemon\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data__\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_offset< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Datatype\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Describe_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
disk_info\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
DiskStore\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Do_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Dropdatabase_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Dropindex_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Droptable_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
DynamicBlockBuffer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRX \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ResultSet\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
EndPoint
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
AdaptiveEndPoint\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
PerformanceInfo::entry\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
InsertOptimizedHashTable::entry\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
enum_list\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Environment\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Estimation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ttmath::ExceptionInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ttmath::ReferenceError\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ttmath::RuntimeError\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ExchangeID\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExchangeTracker\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExectorFunction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
executed_result\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Executing\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Exp_op\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandabilityShrinkability\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVJ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
BlockStreamExpander\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ExpandedThreadTracker\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpanderContext\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpanderTracker\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
decimal::ExportSerializeOutput\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Expr\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Expr_cal\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Expr_func\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Expr_list\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Expr_list_header\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
express_operator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpressionCalculator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpressionItem\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Json::Features\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
From_expr\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
From_list\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FuncCallInfoData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Groupby_expr\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Groupby_list\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Having_list\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HdfsBlock\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HdfsLoader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HeartBeatMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HeartBeatRespond\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Histogram\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
StatisticOnTable\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
IDsGenerator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Index_col_list\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
IndexManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
input_dataset\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
input_struct\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Insert_assign_list\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Insert_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Insert_val_list\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Insert_vals\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
InsertOptimizedHashTable\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
InstanceResourceInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
InstanceResourceManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BasicHashTable::Iterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
DynamicBlockBuffer::Iterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
IteratorExecutorMaster\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
IteratorExecutorSlave\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Join\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::LogicalEqualJoin::JoinPair\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Length\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Limit_expr\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::LimitConstraint\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Loadtable_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
local_stage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
LocalStageEndPoint\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Lock\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Logging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRT \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
AdaptiveEndPointLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamExpanderLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BufferManagerLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CatalogLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CoordinatorLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
EnvironmentLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExchangeIteratorEagerLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExchangeIteratorEagerLowerLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExchangeIteratorSenderMaterialized\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExchangeTrackerLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpanderTrackerLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
IteratorExecutorMasterLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
IteratorExecutorSlaveLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PerformanceTopLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ResourceManagerMasterLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ResourceManagerSlaveLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
StorageManagerLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
StorageManagerMasterLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
claims::common::Logging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
logic_error
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ttmath::ReferenceError\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
claims::logical_operator::LogicalOperator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELD \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
claims::logical_operator::LogicalAggregation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::LogicalCrossJoin\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::LogicalEqualJoin\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::LogicalFilter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::LogicalProject\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::LogicalQueryPlanRoot\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEML \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::LogicalScan\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::LogicalSort\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
LogicalCSBIndexBuilding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
LogicalIndexScan\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Mapping\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MatcherMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MatcherRespond\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
memory_info\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MemoryChunkStore\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Message256\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Message4K\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
InsertOptimizedHashTable::meta_data\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ttmath::Misc\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFDP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MonitorableBuffer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUI \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
BlockStreamBuffer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Node\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUN \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QColcumns\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QExpr\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QExpr_binary\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QExpr_case_when\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QExpr_date_add_sub\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QExpr_in\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QExpr_ternary\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QExpr_unary\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
NodeAddress\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
NodeConnectionMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
NodeRegisterMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
NodeTracker\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
decimal::NValue\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Operate\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWP \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
OperateBool\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
OperateDate\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
OperateDatetime\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
OperateDecimal\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
OperateDouble\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
OperateFloat\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
OperateInt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
OperateSmallInt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
OperateString\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
OperateTime\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
OperateULong\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
OperateUSmallInt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Opt_csc\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Orderby_expr\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Orderby_list\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::LogicalSort::OrderByAttr\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Comparator::Pair\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
parallel_insert_args\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ParseResult\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
partition_schema\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PartitionBindingMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PartitionedBlockBuffer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PartitionedBlockContainer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Partitioner\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PartitionFunction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKX \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
BoostHashFunctin\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
GeneralModuloFunction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ModuloHashFunction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RoundRobinPartitionFunction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
UniformRangePartitionFunction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
PartitionFunctionFactory\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PartitionID\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PartitionInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMD \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
OneToManyPartitionInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
OneToOnePartitionInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
PartitionStorage::PartitionReaderItetaor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
PartitionStorage::AtomicPartitionReaderIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
PartitionStorage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PartitionUnbindingMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Json::Path\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEXB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Json::PathArgument\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEWW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PerformanceInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::PhysicalPlanDescriptor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PhysicalQueryPlan\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::PlanContext\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::PlanPartitioner\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEOF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::PlanPartitionInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PortManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ProjectionBinding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ProjectionDescriptor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ProjectionID\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
IndexScanIterator::query_range\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
query_result\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Query_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QueryOptimizationLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RandomRow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Json::Reader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Receiver
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TimeOutReceiver\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
RegisterSlaveMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RegisterStorageRespond\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamFilter::remaining_block\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamInIterator::remaining_block\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamNestLoopJoinIterator::remaining_block\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamCombinedIterator::remaining_block\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamRandomDiskAccess::remaining_block\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
bottomLayerCollecting::remaining_block\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamRandomMemAccess::remaining_block\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
IndexScanIterator::remaining_block\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
remote_command\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Rename_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
claims::logical_operator::Requirement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ResourceManagerMaster\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Rollback_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Rollbacktosavep_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
runtime_error
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ttmath::RuntimeError\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Savepoint_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Schema\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SchemaFix\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SchemaVar\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Select_expr\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Select_list\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
semaphore\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Setauto_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Show_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamSortIterator::SNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CPUResourceManager::socket\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SpineLock\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Starttrans_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamExchangeLowerMaterialized::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamAggregationIterator::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamNestLoopJoinIterator::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamPrint::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamCombinedIterator::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamHdfsScan::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamSingleColumnScanDisk::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamResultCollector::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamRandomMemAccess::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamInIterator::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamProjectIterator::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
IndexScanIterator::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamProjectionScan::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamBuffer::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamSingleColumnScan::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
bottomLayerSorting::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamExchangeEpoll::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamExpander::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamJoinIterator::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamExchangeLowerEfficient::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
bottomLayerCollecting::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamRandomDiskAccess::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamFilter::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamSortIterator::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamLimit::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamPerformanceMonitorTop::State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Json::StaticString\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
StatManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ttmath::StopCalculating\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
StorageBudgetMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
StreamBuffer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Json::Reader::StructuredError\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Json::StyledStreamWriter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Subquery\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SubTuple\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Table\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TableDescriptor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAECH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TableIDAllocator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tablelist\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TableStatistic\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Test
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CodeGenerationTest\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
DMLTestPOC1Partition\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ElasticIteratorModelTest\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ErrorNoTest\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ThreadContext\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEH \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
BlockStreamJoinIterator::join_thread_context\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamNestLoopJoinIterator::join_thread_context\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAART \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BlockStreamProjectIterator::project_thread_context\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamFilter::filter_thread_context\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExpandableBlockStreamProjectionScan::scan_thread_context\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ThreadManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ThreadPool\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ThreadPoolLogging\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ThreadSafe\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Truncate_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Tuple\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TupleConvertor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TypeCast\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TypePromotion\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ttmath::UInt< value_size >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEX \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ttmath::Int< value_size >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ttmath::UInt< 0 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Use_stmt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Json::Value\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Json::ValueIteratorBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEXG \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Json::ValueConstIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEXY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Json::ValueIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEYN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
variable\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Where_list\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Json::Writer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZT \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Json::FastWriter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Json::StyledWriter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
yy_buffer_state\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
yy_trans_info\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
yyGLRStack\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
yyGLRStackItem\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
yyGLRState\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
yyGLRStateSet\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEID \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
yyguts_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
yySemanticOption\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
YYSTYPE\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b AdaptiveEndPoint} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AdaptiveEndPointLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AllBlockInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamHdfsScan::allocated_block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamSingleColumnScan::allocated_block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamProjectionScan::allocated_block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Alter_def} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Alterdatabase_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Altertable_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Analyzer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b boost::serialization::stl::archive_input_unordered_map< Archive, Container >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b boost::serialization::stl::archive_input_unordered_multimap< Archive, Container >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Arg} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ASTParserLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PartitionStorage::AtomicPartitionReaderIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b attr_index_list} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Attribute} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AttributeComparator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AttributeID} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AttributeStatistics} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Barrier} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BasicHashTable} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::BatchAllocator< AllocatedType, objectPerAllocation >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b bit128} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlanceMatcher} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ChunkReaderIterator::block_accessor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockContainer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockManager::BlockInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockManagerMaster::BlockInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockManagerId} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockManagerMaster} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockManagerMaster::BlockManagerMasterActor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockManager::BlockManagerWorkerActor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockMessage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStatusMessage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStatusRespond} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamAggregationIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamBase} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamBuffer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamCombinedIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamExchangeLowerBase} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamExpander} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamExpanderLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamFix} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamInIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamIteratorBase} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAND \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamJoinIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamJoinLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamLimit} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamNestLoopJoinIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamPerformanceMonitorTop} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamPrint} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamProjectIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamResultCollector} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamSortIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamBase::BlockStreamTraverseIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamVar} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BoostHashFunctin} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b bottomLayerCollecting} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b bottomLayerSorting} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InsertOptimizedHashTable::bucket} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InsertOptimizedHashTable::BucketIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACON \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BufferManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BufferManagerLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Catalog} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CatalogLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CCSBInternalNode< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CCSBInternalNodeGroup< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CCSBLeafNode< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CCSBLeafNodeGroup< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CCSBNode< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CCSBNodeGroup< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ChunkID} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ChunkInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ChunkReaderIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ChunkStorage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ChunkStore} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Client} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ClientListener} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ClientListenerLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ClientLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ClientResponse} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CodeGenerationTest} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CodeGenerator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Column} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Column_atts} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b column_metadata} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b column_type} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ColumnDistribution} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ColumnHeader} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ColumnID} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Columns} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Commit_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Comparator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b bottomLayerSorting::compare_node} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Condition} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Config} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Connector} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ttmath::Conv} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Coordinator::CoordinateActor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Coordinator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoordinatorLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CPUResourceManager::core} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABME \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b COUNTER} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CPUResourceManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Create_col_list} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Create_database_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Create_def} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABND \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Create_projection_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Create_select_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Create_table_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Createindex_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CreateTableMessage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CreateTableRespond} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSBPlusTree< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamHdfsScan::current_block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Daemon} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b data__} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b data_offset< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Datatype} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Describe_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b disk_info} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DiskChunkReaderIteraror} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DiskStore} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DMLTestPOC1Partition} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Do_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Dropdatabase_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Dropindex_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Droptable_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DynamicBlockBuffer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ElasticIteratorModelTest} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PerformanceInfo::entry} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InsertOptimizedHashTable::entry} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b enum_list} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Environment} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EnvironmentLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ErrorNoTest} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Estimation} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ttmath::ExceptionInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExchangeID} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExchangeIteratorEagerLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExchangeIteratorEagerLowerLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExchangeIteratorSenderMaterialized} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExchangeTracker} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExchangeTrackerLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExectorFunction} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b executed_result} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IteratorExecutorSlave::ExecuteIteratorActor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Executing} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Exp_op} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandabilityShrinkability} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamBuffer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamExchangeEpoll} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamExchangeLowerEfficient} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamExchangeLowerMaterialized} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamFilter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamHdfsScan} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamProjectionScan} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamRandomDiskAccess} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamRandomMemAccess} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamSingleColumnScan} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamSingleColumnScanDisk} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandedThreadTracker} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpanderContext} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpanderTracker} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpanderTrackerLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b decimal::ExportSerializeOutput} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Expr} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Expr_cal} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Expr_func} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Expr_list} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Expr_list_header} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b express_operator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpressionCalculator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpressionItem} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::FastWriter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Outputs a {\b Value} in {\f2 JSON} format without formatting (not human friendly) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::Features} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration passed to reader and writer. This configuration object can be used to force the {\b Reader} or {\b Writer} to behave in a standard conforming way })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamFilter::filter_thread_context} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b From_expr} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b From_list} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FuncCallInfoData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GeneralModuloFunction} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Groupby_expr} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Groupby_list} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Having_list} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HdfsBlock} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HDFSChunkReaderIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HdfsConnector} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HdfsLoader} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HeartBeatMessage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HeartBeatRespond} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Histogram} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IDsGenerator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Index_col_list} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IndexManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IndexScanIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ChunkReaderIterator::InDiskBlockAccessor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ChunkReaderIterator::InHDFSBlockAccessor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ChunkReaderIterator::InMemeryBlockAccessor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InMemoryChunkReaderItetaor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b input_dataset} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b input_struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Insert_assign_list} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Insert_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Insert_val_list} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Insert_vals} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InsertOptimizedHashTable} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InstanceResourceInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InstanceResourceManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ttmath::Int< value_size >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Int} implements a big integer value with a sign })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BasicHashTable::Iterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DynamicBlockBuffer::Iterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IteratorExecutorMaster} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IteratorExecutorMasterLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IteratorExecutorSlave} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IteratorExecutorSlaveLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Join} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamJoinIterator::join_thread_context} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamNestLoopJoinIterator::join_thread_context} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAART \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::LogicalEqualJoin::JoinPair} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JoinPair} contains two attributes to be joined })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Length} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Limit_expr} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::LimitConstraint} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description:limit operator is a simple operator. start_position_:the fault value is 0,it means the position where we should acquire data. return_tuples_:the fault value is -1, it means that all rows are needed })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Loadtable_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b local_stage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LocalDiskConnector} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LocalStageEndPoint} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Lock} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Logging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::common::Logging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::LogicalAggregation} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class description: maintain operator property that results from executing aggregation operator, and generate corresponding physical operator })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::LogicalCrossJoin} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LogicalCSBIndexBuilding} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::LogicalEqualJoin} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate equal join logical plan })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::LogicalFilter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Logical Operator "filter", is used to screen out the info we don't need, so as to lessen time cost })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LogicalIndexScan} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::LogicalOperator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::LogicalProject} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::LogicalQueryPlanRoot} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEML \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::LogicalScan} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description:This is the implementation of Scan operator in logical layer. Currently, we only choose the third of constructor functions. Through the method of {\b LogicalScan}, we can get data context and a physical operator })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::LogicalSort} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b LogicalSort} contains the information of attributes to be sorted. And it describe how to generate Sort Operator })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Mapping} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MatcherMessage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MatcherRespond} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b memory_info} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MemoryChunkStore} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Message256} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Message4K} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InsertOptimizedHashTable::meta_data} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ttmath::Misc} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFDP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ModuloHashFunction} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MonitorableBuffer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Node} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NodeAddress} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NodeConnectionMessage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NodeRegisterMessage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NodeTracker} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b decimal::NValue} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OneToManyPartitionInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OneToOnePartitionInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Operate} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OperateBool} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OperateDate} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OperateDatetime} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OperateDecimal} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OperateDouble} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OperateFloat} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OperateInt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OperateSmallInt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OperateString} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OperateTime} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OperateULong} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OperateUSmallInt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Opt_csc} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Orderby_expr} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Orderby_list} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::LogicalSort::OrderByAttr} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description: {\b OrderByAttr} contains the table information and its sort direction.We use ASC as default })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Comparator::Pair} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b parallel_insert_args} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ParseResult} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b partition_schema} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PartitionBindingMessage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PartitionedBlockBuffer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PartitionedBlockContainer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Partitioner} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PartitionFunction} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PartitionFunctionFactory} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PartitionID} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PartitionInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PartitionStorage::PartitionReaderItetaor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PartitionStorage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PartitionUnbindingMessage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::Path} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Experimental and untested: represents a "path" to access a node })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEXB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::PathArgument} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Experimental and untested: represents an element of the "path" to access a node })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEWW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PerformanceInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PerformanceTopLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PhysicalOperator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::PhysicalPlanDescriptor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PhysicalQueryPlan} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::PlanContext} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::PlanPartitioner} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEOF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::PlanPartitionInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PortManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamProjectIterator::project_thread_context} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ProjectionBinding} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ProjectionDescriptor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ProjectionID} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QColcumns} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QExpr} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QExpr_binary} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADRU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QExpr_case_when} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QExpr_date_add_sub} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QExpr_in} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QExpr_ternary} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QExpr_unary} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IndexScanIterator::query_range} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b query_result} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Query_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QueryOptimizationLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RandomRow} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::Reader} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unserialize a {\f2 JSON} document into a {\b Value} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ttmath::ReferenceError} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RegisterSlaveMessage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RegisterStorageRespond} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamFilter::remaining_block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamInIterator::remaining_block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamNestLoopJoinIterator::remaining_block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamCombinedIterator::remaining_block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamRandomDiskAccess::remaining_block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b bottomLayerCollecting::remaining_block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamRandomMemAccess::remaining_block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IndexScanIterator::remaining_block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b remote_command} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Rename_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b claims::logical_operator::Requirement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ResourceManagerMaster} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ResourceManagerMaster::ResourceManagerMasterActor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ResourceManagerMasterLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ResourceManagerSlaveLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ResultSet} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Rollback_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Rollbacktosavep_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RoundRobinPartitionFunction} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ttmath::RuntimeError} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Savepoint_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamProjectionScan::scan_thread_context} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Schema} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SchemaFix} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SchemaVar} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Select_expr} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Select_list} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b semaphore} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Setauto_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Show_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADZV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamSortIterator::SNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CPUResourceManager::socket} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SpineLock} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Starttrans_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamExchangeLowerMaterialized::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamAggregationIterator::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamNestLoopJoinIterator::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamPrint::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamCombinedIterator::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamHdfsScan::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamSingleColumnScanDisk::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamResultCollector::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamRandomMemAccess::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamInIterator::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamProjectIterator::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IndexScanIterator::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamProjectionScan::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamBuffer::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamSingleColumnScan::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b bottomLayerSorting::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamExchangeEpoll::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamExpander::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamJoinIterator::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamExchangeLowerEfficient::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b bottomLayerCollecting::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamRandomDiskAccess::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExpandableBlockStreamFilter::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamSortIterator::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamLimit::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockStreamPerformanceMonitorTop::State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::StaticString} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lightweight wrapper to tag static string })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StatisticOnTable} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StatManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ttmath::StopCalculating} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StorageBudgetMessage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StorageManagerLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StorageManagerMasterLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StreamBuffer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::Reader::StructuredError} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An error tagged with where in the JSON text it was encountered })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::StyledStreamWriter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a {\b Value} in {\f2 JSON} format in a human friendly way, to a stream rather than to a string })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::StyledWriter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a {\b Value} in {\f2 JSON} format in a human friendly way })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Subquery} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SubTuple} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Table} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEBY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TableDescriptor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAECH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TableIDAllocator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tablelist} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TableStatistic} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ThreadContext} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ThreadManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ThreadPool} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ThreadPoolLogging} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ThreadSafe} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TimeOutReceiver} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Truncate_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Tuple} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TupleConvertor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TypeCast} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TypePromotion} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ttmath::UInt< value_size >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b UInt} implements a big integer value without a sign })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ttmath::UInt< 0 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UniformInt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UniformRangePartitionFunction} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Use_stmt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::Value} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a {\f2 JSON} value })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::ValueConstIterator} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Const iterator for object and array value })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEXY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::ValueIterator} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iterator for object and array value })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEYN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::ValueIteratorBase} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base class for {\b Value} iterators })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEXG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b variable} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Where_list} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json::Writer} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract class for writers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b yy_buffer_state} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b yy_trans_info} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b yyGLRStack} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b yyGLRStackItem} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b yyGLRState} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b yyGLRStateSet} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEID \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b yyguts_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b yySemanticOption} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b YYSTYPE} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Config.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFLT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b configure.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFLU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Debug.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFLV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Environment.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFLW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IDsGenerator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFLX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b startup.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFLY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Catalog/{\b Attribute.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFLZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Catalog/{\b Catalog.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Catalog/{\b Column.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Catalog/{\b Partitioner.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Catalog/{\b ProjectionBinding.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Catalog/{\b table.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFME \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Catalog/{\b unordered_map.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Catalog/stat/{\b Analyzer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Catalog/stat/{\b AttributeStatistics.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Catalog/stat/{\b Estimation.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Catalog/stat/{\b Statistic.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Catalog/stat/{\b StatManager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Catalog/stat/{\b TableStatistic.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFML \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Client/{\b ClaimsServer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Client/{\b Client.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Client/{\b ClientResponse.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Client/json/{\b json-forwards.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Client/json/{\b json.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b codegen/{\b codegen_test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b codegen/{\b CodeGenerator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b codegen/{\b CompareFunctonGenerator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b codegen/{\b ExpressionGenerator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b AttributeComparator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b Comparator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b data_type.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b error_define.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b error_no.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFMZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b ExpandedThreadTracker.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b ExpressionCalculator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b ExpressionItem.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b functions.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFND \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b hash.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b hashtable.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b ids.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b InsertOptimizedHashTable.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b Logging.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b Mapping.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b Message.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b partition_functions.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b rename.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b TimeOutReceiver.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b TypeCast.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b TypePromotionMap.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Block/{\b Block.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Block/{\b BlockContainer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Block/{\b BlockStream.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Block/{\b BlockStreamBuffer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Block/{\b DynamicBlockBuffer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Block/{\b MonitorableBuffer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Block/{\b PartitionedBlockBuffer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Block/{\b PartitionedBlockContainer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Block/{\b ResultSet.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Expression/{\b execfunc.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFNZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Expression/{\b expression_test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Expression/{\b initquery.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Expression/{\b qnode.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Expression/{\b queryfunc.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/log/{\b logging.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Schema/{\b Schema.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Schema/{\b SchemaFix.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Schema/{\b SchemaVar.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/Schema/{\b TupleConvertor.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/serialization/{\b RegisterDerivedClass.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/types/{\b ExportSerializeIo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/types/{\b NValue.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/types/{\b value_defs.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/types/Test/{\b data_type_test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFON \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/types/ttmath/{\b ttmathint.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Template class Int<uint> })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/types/ttmath/{\b ttmathmisc.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Some helpful functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/types/ttmath/{\b ttmathtypes.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constants used in the library })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/types/ttmath/{\b ttmathuint.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Template class UInt<uint> })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/types/ttmath/{\b ttmathuint_noasm.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/types/ttmath/{\b ttmathuint_x86.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/types/ttmath/{\b ttmathuint_x86_64.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Daemon/{\b Daemon.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Daemon/{\b Executing.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Daemon/Test/{\b daemon_test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Executor/{\b AdaptiveEndPoint.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Executor/{\b Coordinator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Executor/{\b ExchangeTracker.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Executor/{\b ExpanderTracker.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Executor/{\b IteratorExecutorMaster.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Executor/{\b IteratorExecutorSlave.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Executor/{\b PortManager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b IndexManager/{\b CSBIndexBuilding.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b IndexManager/{\b CSBPlusTree.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b IndexManager/{\b IndexManager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b IndexManager/{\b IndexScanIterator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b IndexManager/{\b LogicalCSBIndexBuilding.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b IndexManager/{\b LogicalIndexFilter.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b IndexManager/{\b LogicalIndexScan.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b install/{\b config.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b install/include/{\b Config.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b install/include/{\b configure.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b install/include/{\b Debug.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b install/include/{\b Environment.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b install/include/{\b IDsGenerator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Loader/{\b Connector.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Loader/{\b Hdfsconnector.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Loader/{\b Hdfsloader.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Loader/{\b LocalDiskConnector.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logical_operator/{\b logical_aggregation.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logical_operator/{\b logical_cross_join.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logical_operator/{\b logical_equal_join.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logical_operator/{\b logical_filter.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logical_operator/{\b logical_limit.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logical_operator/{\b logical_operator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logical_operator/{\b logical_project.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logical_operator/{\b logical_query_plan_root.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFPZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logical_operator/{\b logical_scan.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logical_operator/{\b logical_sort.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logical_operator/{\b plan_context.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logical_operator/{\b plan_partition_info.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logical_operator/{\b plan_partitioner.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logical_operator/{\b Requirement.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Parsetree/{\b ExecuteLogicalQueryPlan.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Parsetree/{\b runparsetree.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Parsetree/{\b sql.lex.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Parsetree/{\b sql.tab.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Parsetree/{\b sql_node_struct.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Parsetree/{\b StreamBuffer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b BlockStreamAggregationIterator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b BlockStreamCombinedIterator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b BlockStreamExchangeLowerBase.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b BlockStreamExpander.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b BlockStreamInIterator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b BlockStreamIteratorBase.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b BlockStreamJoinIterator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b BlockStreamLimit.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b BlockStreamNestLoopJoinIterator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b BlockStreamPerformanceMonitorTop.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b result_printer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b BlockStreamProjectIterator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b result_collector.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b BlockStreamSortIterator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b ExpandableBlockStreamBuffer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b ExpandableBlockStreamExchangeEpoll.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b ExpandableBlockStreamExchangeLowerEfficient.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b ExpandableBlockStreamExchangeLowerMaterialized.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b ExpandableBlockStreamFilter.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b ExpandableBlockStreamHdfsScan.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b ExpandableBlockStreamProjectionScan.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b ExpandableBlockStreamRandomDiskAccess.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b ExpandableBlockStreamRandomMemAccess.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b ExpandableBlockStreamSingleColumnScan.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b ExpandableBlockStreamSingleColumnScanDisk.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b physical_operator/{\b physical_operator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Resource/{\b BufferManager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Resource/{\b CPUResource.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Resource/{\b NodeTracker.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Resource/{\b ResourceInfo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Resource/{\b ResourceManagerMaster.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Resource/{\b ResourceManagerSlave.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Resource/{\b ThreadManager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b storage/{\b AllBlockInfo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b storage/{\b BlanceMatcher.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b storage/{\b BlockManager.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b storage/{\b BlockManagerId.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b storage/{\b BlockManagerMaster.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b storage/{\b BlockMessage.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b storage/{\b BlockStore.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFRZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b storage/{\b ChunkStorage.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b storage/{\b DiskStore.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b storage/{\b MemoryStore.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b storage/{\b PartitionReaderIterator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b storage/{\b PartitionStorage.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b storage/{\b StorageLevel.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Test/{\b gtest.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Test/{\b memory_leak_test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Test/{\b set_up_environment.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Test/common/{\b errno_test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Test/common/{\b insert_optimized_hash_table_test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Test/iterator/{\b elastic_iterator_model_test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Test/Parsetree/{\b sql_parser_test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Test/Resource/{\b CPUResourceManagerTest.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Test/TestSuit/{\b ExpanderFrameTest.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Test/TestSuit/{\b filter_test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Test/TestSuit/{\b hash_table_test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Test/TestSuit/{\b sql_query_test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Test/utility/{\b generator_test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b atomics.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFST \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b command_line.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b CpuScheduler.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b data_distribution_generator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b ExpandabilityShrinkability.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b generator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b lock.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFSZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b maths.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFTA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b print_tool.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFTB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b rdtsc.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFTC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b string_process.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFTD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b test_tool.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFTE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b ThreadPool.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFTF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b ThreadSafe.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFTG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b Timer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFTH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b utility/{\b warmup.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFTI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims Namespace Reference\par \pard\plain 
{\tc\tcl2 \v claims}
{\xe \v claims}
{\bkmkstart AAAAAAAEJY}
{\bkmkend AAAAAAAEJY}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class describes what properties are required to the child data flow. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json Namespace Reference\par \pard\plain 
{\tc\tcl2 \v Json}
{\xe \v Json}
{\bkmkstart AAAAAAAEQZ}
{\bkmkend AAAAAAAEQZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
JSON (JavaScript Object Notation). }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Features}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration passed to reader and writer. This configuration object can be used to force the {\b Reader} or {\b Writer} to behave in a standard conforming way. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StaticString}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lightweight wrapper to tag static string. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Value}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a {\f2 JSON} value. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PathArgument}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Experimental and untested: represents an element of the "path" to access a node. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Path}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Experimental and untested: represents a "path" to access a node. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueIteratorBase}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
base class for {\b Value} iterators. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueConstIterator}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
const iterator for object and array value. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueIterator}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iterator for object and array value. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Reader}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unserialize a {\f2 JSON} document into a {\b Value}. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Writer}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract class for writers. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FastWriter}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Outputs a {\b Value} in {\f2 JSON} format without formatting (not human friendly). }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StyledWriter}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a {\b Value} in {\f2 JSON} format in a human friendly way. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StyledStreamWriter}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a {\b Value} in {\f2 JSON} format in a human friendly way, to a stream rather than to a string. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BatchAllocator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef int {\b Int}{\bkmkstart AAAAAAAERA}
{\bkmkend AAAAAAAERA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned int {\b UInt}{\bkmkstart AAAAAAAERB}
{\bkmkend AAAAAAAERB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef long long int {\b Int64}{\bkmkstart AAAAAAAERC}
{\bkmkend AAAAAAAERC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned long long int {\b UInt64}{\bkmkstart AAAAAAAERD}
{\bkmkend AAAAAAAERD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef Int64 {\b LargestInt}{\bkmkstart AAAAAAAERE}
{\bkmkend AAAAAAAERE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef UInt64 {\b LargestUInt}{\bkmkstart AAAAAAAERF}
{\bkmkend AAAAAAAERF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned int {\b ArrayIndex}{\bkmkstart AAAAAAAERG}
{\bkmkend AAAAAAAERG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef char {\b UIntToStringBuffer} [{\b uintToStringBufferSize}]{\bkmkstart AAAAAAAERH}
{\bkmkend AAAAAAAERH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ValueType} \{ {\b nullValue} = 0, 
{\b intValue}, 
{\b uintValue}, 
{\b realValue}, 
{\b stringValue}, 
{\b booleanValue}, 
{\b arrayValue}, 
{\b objectValue}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type of the value held by a Value object. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CommentPlacement} \{ {\b commentBefore} = 0, 
{\b commentAfterOnSameLine}, 
{\b commentAfter}, 
{\b numberOfCommentPlacement}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum \{ {\b uintToStringBufferSize} = 3 * sizeof(LargestUInt) + 1
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
JSON_API std::istream & {\b operator>>} (std::istream &, {\b Value} &)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read from 'sin' into 'root'. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string JSON_API {\b valueToString} (Int value){\bkmkstart AAAAAAAERI}
{\bkmkend AAAAAAAERI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string JSON_API {\b valueToString} (UInt value){\bkmkstart AAAAAAAERJ}
{\bkmkend AAAAAAAERJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string JSON_API {\b valueToString} (LargestInt value){\bkmkstart AAAAAAAERK}
{\bkmkend AAAAAAAERK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string JSON_API {\b valueToString} (LargestUInt value){\bkmkstart AAAAAAAERL}
{\bkmkend AAAAAAAERL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string JSON_API {\b valueToString} (double value){\bkmkstart AAAAAAAERM}
{\bkmkend AAAAAAAERM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string JSON_API {\b valueToString} (bool value){\bkmkstart AAAAAAAERN}
{\bkmkend AAAAAAAERN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string JSON_API {\b valueToQuotedString} (const char *value){\bkmkstart AAAAAAAERO}
{\bkmkend AAAAAAAERO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
JSON_API std::ostream & {\b operator<<} (std::ostream &, const {\b Value} &root)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output using the {\b StyledStreamWriter}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned char & {\b kNullRef} = kNull[0]{\bkmkstart AAAAAAAERP}
{\bkmkend AAAAAAAERP}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
JSON (JavaScript Object Notation). \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
anonymous enum}}
\par
{\bkmkstart AAAAAAAERQ}
{\bkmkend AAAAAAAERQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v uintToStringBufferSize\:Json}
{\xe \v Json\:uintToStringBufferSize}
{\b {\i uintToStringBufferSize{\bkmkstart AAAAAAAERR}
{\bkmkend AAAAAAAERR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant that specify the size of the buffer that must be passed to uintToString. \par
}}}
{\xe \v CommentPlacement\:Json}
{\xe \v Json\:CommentPlacement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Json::CommentPlacement}}}
\par
{\bkmkstart AAAAAAAERS}
{\bkmkend AAAAAAAERS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v commentBefore\:Json}
{\xe \v Json\:commentBefore}
{\b {\i commentBefore{\bkmkstart AAAAAAAERT}
{\bkmkend AAAAAAAERT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a comment placed on the line before a value \par
}{\xe \v commentAfterOnSameLine\:Json}
{\xe \v Json\:commentAfterOnSameLine}
{\b {\i commentAfterOnSameLine{\bkmkstart AAAAAAAERU}
{\bkmkend AAAAAAAERU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a comment just after a value on the same line \par
}{\xe \v commentAfter\:Json}
{\xe \v Json\:commentAfter}
{\b {\i commentAfter{\bkmkstart AAAAAAAERV}
{\bkmkend AAAAAAAERV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a comment on the line after a value (only make sense for \par
}{\xe \v numberOfCommentPlacement\:Json}
{\xe \v Json\:numberOfCommentPlacement}
{\b {\i numberOfCommentPlacement{\bkmkstart AAAAAAAERW}
{\bkmkend AAAAAAAERW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
root value) \par
}}}
{\xe \v ValueType\:Json}
{\xe \v Json\:ValueType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Json::ValueType}}}
\par
{\bkmkstart AAAAAAAERX}
{\bkmkend AAAAAAAERX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type of the value held by a {\b Value} object. }}\par
{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v nullValue\:Json}
{\xe \v Json\:nullValue}
{\b {\i nullValue{\bkmkstart AAAAAAAERY}
{\bkmkend AAAAAAAERY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
'null' value \par
}{\xe \v intValue\:Json}
{\xe \v Json\:intValue}
{\b {\i intValue{\bkmkstart AAAAAAAERZ}
{\bkmkend AAAAAAAERZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
signed integer value \par
}{\xe \v uintValue\:Json}
{\xe \v Json\:uintValue}
{\b {\i uintValue{\bkmkstart AAAAAAAESA}
{\bkmkend AAAAAAAESA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
unsigned integer value \par
}{\xe \v realValue\:Json}
{\xe \v Json\:realValue}
{\b {\i realValue{\bkmkstart AAAAAAAESB}
{\bkmkend AAAAAAAESB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
double value \par
}{\xe \v stringValue\:Json}
{\xe \v Json\:stringValue}
{\b {\i stringValue{\bkmkstart AAAAAAAESC}
{\bkmkend AAAAAAAESC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UTF-8 string value. \par
}{\xe \v booleanValue\:Json}
{\xe \v Json\:booleanValue}
{\b {\i booleanValue{\bkmkstart AAAAAAAESD}
{\bkmkend AAAAAAAESD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
bool value \par
}{\xe \v arrayValue\:Json}
{\xe \v Json\:arrayValue}
{\b {\i arrayValue{\bkmkstart AAAAAAAESE}
{\bkmkend AAAAAAAESE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
array value (ordered list) \par
}{\xe \v objectValue\:Json}
{\xe \v Json\:objectValue}
{\b {\i objectValue{\bkmkstart AAAAAAAESF}
{\bkmkend AAAAAAAESF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
object value (collection of name/value pairs). \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v operator<<\:Json}
{\xe \v Json\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::ostream & Json::operator<< (std::ostream & {\i sout}, const Value & {\i root})}}
\par
{\bkmkstart AAAAAAAESG}
{\bkmkend AAAAAAAESG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output using the {\b StyledStreamWriter}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See Also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Json::operator>>()} \par
}}{
References Json::StyledStreamWriter::write().}\par
}
{\xe \v operator>>\:Json}
{\xe \v Json\:operator>>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::istream & Json::operator>> (std::istream & {\i sin}, Value & {\i root})}}
\par
{\bkmkstart AAAAAAAESH}
{\bkmkend AAAAAAAESH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read from 'sin' into 'root'. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Always keep comments from the input JSON.\par
This can be used to read a file into a particular sub-object. For example: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Json::Value root;\par
cin >> root["dir"]["file"];\par
cout << root;\par
}
 Result: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
"dir": \{\par
    "file": \{\par
    // The input stream JSON would be nested here.\par
    \}\par
\}\par
\}\par
}
 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::exception} \cell }{on parse error. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See Also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Json::operator<<()} \par
}}{
References Json::Reader::getFormattedErrorMessages(), and Json::Reader::parse().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ttmath Namespace Reference\par \pard\plain 
{\tc\tcl2 \v ttmath}
{\xe \v ttmath}
{\bkmkstart AAAAAAAFAJ}
{\bkmkend AAAAAAAFAJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a namespace for the TTMath library }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Int}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Int} implements a big integer value with a sign. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Misc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Conv}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StopCalculating}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExceptionInfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ReferenceError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RuntimeError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UInt}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b UInt} implements a big integer value without a sign. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UInt< 0 >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned int {\b uint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef signed int {\b sint}{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned long long int {\b ulint}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LibTypeCode} \{ {\b asm_vc_32} = 0, 
{\b asm_gcc_32}, 
{\b asm_vc_64}, 
{\b asm_gcc_64}, 
{\b no_asm_32}, 
{\b no_asm_64}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ErrorCode} \{ {\b err_ok} = 0, 
{\b err_nothing_has_read}, 
{\b err_unknown_character}, 
{\b err_unexpected_final_bracket}, 
{\b err_stack_not_clear}, 
{\b err_unknown_variable}, 
{\b err_division_by_zero}, 
{\b err_interrupt}, 
{\b err_overflow}, 
{\b err_unknown_function}, 
{\b err_unknown_operator}, 
{\b err_unexpected_semicolon_operator}, 
{\b err_improper_amount_of_arguments}, 
{\b err_improper_argument}, 
{\b err_unexpected_end}, 
{\b err_internal_error}, 
{\b err_incorrect_name}, 
{\b err_incorrect_value}, 
{\b err_variable_exists}, 
{\b err_variable_loop}, 
{\b err_functions_loop}, 
{\b err_must_be_only_one_value}, 
{\b err_object_exists}, 
{\b err_unknown_object}, 
{\b err_still_calculating}, 
{\b err_in_short_form_used_function}, 
{\b err_percent_from}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a namespace for the TTMath library \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v uint\:ttmath}
{\xe \v ttmath\:uint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned int {\b ttmath::uint}}}
\par
{\bkmkstart AAAAAAAFAK}
{\bkmkend AAAAAAAFAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
on 32bit platforms one word (uint, sint) will be equal 32bits \par
}}
{\xe \v ulint\:ttmath}
{\xe \v ttmath\:ulint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned long long int {\b ttmath::ulint}}}
\par
{\bkmkstart AAAAAAAFAL}
{\bkmkend AAAAAAAFAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this type is twice bigger than uint (64bit on a 32bit platforms)\par
although C++ Standard - ANSI ISO IEC 14882:2003 doesn't define such a type (long long) but it is defined in C99 and in upcoming C++0x /3.9.1 (2)/ and many compilers support it\par
this type is used in UInt::MulTwoWords and UInt::DivTwoWords when macro TTMATH_NOASM is defined but only on a 32bit platform \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v ErrorCode\:ttmath}
{\xe \v ttmath\:ErrorCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b ttmath::ErrorCode}}}
\par
{\bkmkstart AAAAAAAFAM}
{\bkmkend AAAAAAAFAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
error codes \par
}}
{\xe \v LibTypeCode\:ttmath}
{\xe \v ttmath\:LibTypeCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b ttmath::LibTypeCode}}}
\par
{\bkmkstart AAAAAAAFAN}
{\bkmkend AAAAAAAFAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
lib type codes: asm_vc_32 - with asm code designed for Microsoft Visual C++ (32 bits) asm_gcc_32 - with asm code designed for GCC (32 bits) asm_vc_64 - with asm for VC (64 bit) asm_gcc_64 - with asm for GCC (64 bit) no_asm_32 - pure C++ version (32 bit) - without any asm code no_asm_64 - pure C++ version (64 bit) - without any asm code \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AdaptiveEndPoint Class Reference\par \pard\plain 
{\tc\tcl2 \v AdaptiveEndPoint}
{\xe \v AdaptiveEndPoint}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
Inheritance diagram for AdaptiveEndPoint:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAdaptiveEndPoint.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b AdaptiveEndPoint} (const char *name, std::string ip, std::string port){\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Theron::Framework * {\b framework}{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Logging} * {\b logging_}{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ConnectionActor}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v ConnectionActor\:AdaptiveEndPoint}
{\xe \v AdaptiveEndPoint\:ConnectionActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class ConnectionActor{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Actor which receive the node states from the coordinator \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/AdaptiveEndPoint.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/AdaptiveEndPoint.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AdaptiveEndPointLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v AdaptiveEndPointLogging}
{\xe \v AdaptiveEndPointLogging}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
Inheritance diagram for AdaptiveEndPointLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAdaptiveEndPointLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b log} (const char *format,...){\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b elog} (const char *format,...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v elog\:AdaptiveEndPointLogging}
{\xe \v AdaptiveEndPointLogging\:elog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AdaptiveEndPointLogging::elog (const char * {\i format},  {\i ...}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
print the error information to stderr. \par
}{
Implements {\b Logging} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AllBlockInfo Class Reference\par \pard\plain 
{\tc\tcl2 \v AllBlockInfo}
{\xe \v AllBlockInfo}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b put} (string blockmanagerId, string blockId){\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b AllBlockInfo} * {\b getInstance} (){\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/AllBlockInfo.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/AllBlockInfo.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamHdfsScan::allocated_block Struct Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamHdfsScan::allocated_block}
{\xe \v ExpandableBlockStreamHdfsScan::allocated_block}
{\bkmkstart AAAAAAABZO}
{\bkmkend AAAAAAABZO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b start}{\bkmkstart AAAAAAABZP}
{\bkmkend AAAAAAABZP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b length}{\bkmkstart AAAAAAABZQ}
{\bkmkend AAAAAAABZQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamHdfsScan.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamSingleColumnScan::allocated_block Struct Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamSingleColumnScan::allocated_block}
{\xe \v ExpandableBlockStreamSingleColumnScan::allocated_block}
{\bkmkstart AAAAAAACCD}
{\bkmkend AAAAAAACCD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b start}{\bkmkstart AAAAAAACCE}
{\bkmkend AAAAAAACCE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b length}{\bkmkstart AAAAAAACCF}
{\bkmkend AAAAAAACCF}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamSingleColumnScan.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamProjectionScan::allocated_block Struct Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamProjectionScan::allocated_block}
{\xe \v ExpandableBlockStreamProjectionScan::allocated_block}
{\bkmkstart AAAAAAACAH}
{\bkmkend AAAAAAACAH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b start}{\bkmkstart AAAAAAACAI}
{\bkmkend AAAAAAACAI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b length}{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamProjectionScan.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Alter_def Struct Reference\par \pard\plain 
{\tc\tcl2 \v Alter_def}
{\xe \v Alter_def}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b altertype}{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name1}{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name2}{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b datatype}{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b coltype}{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b parameter}{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Alterdatabase_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Alterdatabase_stmt}
{\xe \v Alterdatabase_stmt}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b createtype}{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name}{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b opt}{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Altertable_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Altertable_stmt}
{\xe \v Altertable_stmt}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b isignore}{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name}{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b parameter}{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Analyzer Class Reference\par \pard\plain 
{\tc\tcl2 \v Analyzer}
{\xe \v Analyzer}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b analysis_level} \{ {\b a_l_table}, 
{\b a_l_attribute}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b analyse} (const {\b AttributeID} &attrID){\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b analyse} (TableID tableID, analysis_level level=a_l_table){\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b analyse_on_project} ({\b ProjectionID} projection_id)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b compute_histogram} (const {\b AttributeID} &attr_id){\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b compute_attribute_stat} (const {\b AttributeID} &attr_id)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b compute_table_stat} (const TableID &tab_id){\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v analyse_on_project\:Analyzer}
{\xe \v Analyzer\:analyse_on_project}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Analyzer::analyse_on_project ({\b ProjectionID} {\i projection_id}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
First make sure that the table statistic is available, and then make attribute-level-analyze on each attribute within this projection.\par
}}
{\xe \v compute_attribute_stat\:Analyzer}
{\xe \v Analyzer\:compute_attribute_stat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Analyzer::compute_attribute_stat (const {\b AttributeID} & {\i attr_id}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
for attribute that has UNIQUE property, gathering the number of distinct values is unnecessary.\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/stat/Analyzer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/stat/Analyzer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
boost::serialization::stl::archive_input_unordered_map< Archive, Container > Struct Template Reference\par \pard\plain 
{\tc\tcl2 \v boost::serialization::stl::archive_input_unordered_map< Archive, Container >}
{\xe \v boost::serialization::stl::archive_input_unordered_map< Archive, Container >}
{\bkmkstart AAAAAAAEJU}
{\bkmkend AAAAAAAEJU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b operator()} (Archive &ar, Container &s, const unsigned int v){\bkmkstart AAAAAAAEJV}
{\bkmkend AAAAAAAEJV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/unordered_map.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
boost::serialization::stl::archive_input_unordered_multimap< Archive, Container > Struct Template Reference\par \pard\plain 
{\tc\tcl2 \v boost::serialization::stl::archive_input_unordered_multimap< Archive, Container >}
{\xe \v boost::serialization::stl::archive_input_unordered_multimap< Archive, Container >}
{\bkmkstart AAAAAAAEJW}
{\bkmkend AAAAAAAEJW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b operator()} (Archive &ar, Container &s, const unsigned int v){\bkmkstart AAAAAAAEJX}
{\bkmkend AAAAAAAEJX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/unordered_map.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Arg Struct Reference\par \pard\plain 
{\tc\tcl2 \v Arg}
{\xe \v Arg}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBuffer} * {\b buffer}{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BasicHashTable} ** {\b hash_table}{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema}{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionFunction} * {\b hash}{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b iterator}{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionStorage::PartitionReaderItetaor} * {\b partition_reader}{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Barrier} * {\b barrier}{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b tid}{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Test/TestSuit/hash_table_test.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ASTParserLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v ASTParserLogging}
{\xe \v ASTParserLogging}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b log} (const char *format,...){\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b elog} (const char *format,...){\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PartitionStorage::AtomicPartitionReaderIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v PartitionStorage::AtomicPartitionReaderIterator}
{\xe \v PartitionStorage::AtomicPartitionReaderIterator}
{\bkmkstart AAAAAAADNK}
{\bkmkend AAAAAAADNK}
Inheritance diagram for PartitionStorage::AtomicPartitionReaderIterator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPartitionStorage_1_1AtomicPartitionReaderIterator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b AtomicPartitionReaderIterator} ({\b PartitionStorage} *partition_storage){\bkmkstart AAAAAAADNL}
{\bkmkend AAAAAAADNL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ChunkReaderIterator} * {\b nextChunk} (){\bkmkstart AAAAAAADNM}
{\bkmkend AAAAAAADNM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b nextBlock} ({\b BlockStreamBase} *&block){\bkmkstart AAAAAAADNN}
{\bkmkend AAAAAAADNN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/PartitionStorage.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/PartitionStorage.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
attr_index_list Struct Reference\par \pard\plain 
{\tc\tcl2 \v attr_index_list}
{\xe \v attr_index_list}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b attr_index_list} ({\b Attribute} attr){\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b attr_index_list} ({\b Attribute} attr, std::string index_name){\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} {\b attribute}{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b attr_index_name}{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::map< {\b ChunkID}, void * > {\b csb_tree_list}{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/IndexManager.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Attribute Struct Reference\par \pard\plain 
{\tc\tcl2 \v Attribute}
{\xe \v Attribute}
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
Inheritance diagram for Attribute:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structAttribute.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} (TableID tableid, unsigned pos, const std::string &name, data_type type, unsigned size=0, bool unqiue=false, bool can_be_null=true){\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} (const {\b Attribute} &att){\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} & {\b operator=} (const {\b Attribute} &att){\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator<} (const {\b Attribute} &att) const {\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} (unsigned symbol=ATTRIBUTE_NULL){\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} (const {\b Attribute} &r) const {\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator!=} (const {\b Attribute} &r) const {\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNULL} () const {\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isANY} () const {\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isUnique} () const {\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b getName} () const {\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b AttributeID} {\b getID} () const {\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b attrName}{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b column_type} * {\b attrType}{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b index}{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

TableID {\b table_id_}{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b unique}{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/Attribute.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AttributeComparator Class Reference\par \pard\plain 
{\tc\tcl2 \v AttributeComparator}
{\xe \v AttributeComparator}
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
Inheritance diagram for AttributeComparator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classAttributeComparator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b AttributeComparator} ({\b column_type} x, {\b column_type} y, Comparator::comparison c, unsigned index, void *value){\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b AttributeComparator} ({\b column_type} x, Comparator::comparison c, unsigned index, void *value){\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b AttributeComparator} (const {\b AttributeComparator} &c_a){\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b filter} (void *x) const __attribute__((always_inline)){\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b get_index} () const {\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b get_value} () const {\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b value_}{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b index}{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b FilterIterator}{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/AttributeComparator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/AttributeComparator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AttributeID Struct Reference\par \pard\plain 
{\tc\tcl2 \v AttributeID}
{\xe \v AttributeID}
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\par
{
{\f2 #include <ids.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b AttributeID} (TableID tid, AttributeOffset off){\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} (const {\b AttributeID} &r) const {\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

TableID {\b table_id}{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

AttributeOffset {\b offset}{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b AttributeID}: an attribute in a table has an unique {\b AttributeID} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ids.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AttributeStatistics Class Reference\par \pard\plain 
{\tc\tcl2 \v AttributeStatistics}
{\xe \v AttributeStatistics}
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setDistinctCardinality} (unsigned long int value){\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setHistogram} ({\b Histogram} *his){\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Histogram} * {\b getHistogram} () const {\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print} () const {\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b getDistinctCardinality} () const {\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/stat/AttributeStatistics.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/stat/AttributeStatistics.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Barrier Class Reference\par \pard\plain 
{\tc\tcl2 \v Barrier}
{\xe \v Barrier}
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Barrier} (int nThreads=0){\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b RegisterOneThread} (){\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b UnregisterOneThread} (){\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setEmpty} (){\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b reset} (){\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Arrive} (){\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/lock.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BasicHashTable Class Reference\par \pard\plain 
{\tc\tcl2 \v BasicHashTable}
{\xe \v BasicHashTable}
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Iterator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BasicHashTable} (unsigned nbuckets, unsigned bucksize, unsigned tuplesize, unsigned expected_number_of_visiting_thread=1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b allocate} (const unsigned &offset, unsigned thread_id=0){\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b atomicAllocate} (const unsigned &offset, unsigned thread_id=0){\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b UpdateTuple} (unsigned int offset, void *loc, void *newvalue, fun func){\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b atomicUpdateTuple} (unsigned int offset, void *loc, void *newvalue, fun func){\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b lockBlock} (unsigned &bn){\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b unlockBlock} (unsigned &bn){\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b report_status} (){\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BasicHashTable::Iterator} {\b CreateIterator} () const {\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b placeIterator} ({\b Iterator} &it, const unsigned &offset){\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getHashTableTupleSize} (){\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static unsigned {\b getNumberOfInstances} (){\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v BasicHashTable\:BasicHashTable}
{\xe \v BasicHashTable\:BasicHashTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
BasicHashTable::BasicHashTable (unsigned {\i nbuckets}, unsigned {\i bucksize}, unsigned {\i tuplesize}, unsigned {\i expected_number_of_visiting_thread} = {\f2 1})}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
create spinlocks, each of which corresponds to a single bucket \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hashtable.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hashtable.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::BatchAllocator< AllocatedType, objectPerAllocation > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v Json::BatchAllocator< AllocatedType, objectPerAllocation >}
{\xe \v Json::BatchAllocator< AllocatedType, objectPerAllocation >}
{\bkmkstart AAAAAAAFAF}
{\bkmkend AAAAAAAFAF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BatchAllocator} (unsigned int objectsPerPage=255){\bkmkstart AAAAAAAFAG}
{\bkmkend AAAAAAAFAG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AllocatedType * {\b allocate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b release} (AllocatedType *object)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v allocate\:Json::BatchAllocator}
{\xe \v Json::BatchAllocator\:allocate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename AllocatedType , const unsigned int objectPerAllocation> AllocatedType* {\b Json::BatchAllocator}< AllocatedType, objectPerAllocation >::allocate (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFAH}
{\bkmkend AAAAAAAFAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
allocate space for an array of objectPerAllocation object. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid it is the responsability of the caller to call objects constructors. \par
}}}
{\xe \v release\:Json::BatchAllocator}
{\xe \v Json::BatchAllocator\:release}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename AllocatedType , const unsigned int objectPerAllocation> void {\b Json::BatchAllocator}< AllocatedType, objectPerAllocation >::release (AllocatedType * {\i object}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFAI}
{\bkmkend AAAAAAAFAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Release the object. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Warning:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid it is the responsability of the caller to actually destruct the object. \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/jsoncpp.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bit128 Struct Reference\par \pard\plain 
{\tc\tcl2 \v bit128}
{\xe \v bit128}
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int64_t {\b a}{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int64_t {\b b}{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
codegen/main.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlanceMatcher Class Reference\par \pard\plain 
{\tc\tcl2 \v BlanceMatcher}
{\xe \v BlanceMatcher}
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b projectsInput} (string filename, list< string > project){\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b matcher} (string filename, {\b BlockManagerId} bmi){\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b BlanceMatcher} * {\b getInstance} (){\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlanceMatcher.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlanceMatcher.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Block Class Reference\par \pard\plain 
{\tc\tcl2 \v Block}
{\xe \v Block}
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
Inheritance diagram for Block:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlock.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Block} (unsigned BlockSize){\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Block} (const {\b Block} &block){\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Block} (const unsigned &size, const void *start){\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b getBlock} () const {\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setBlock} (void *){\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getsize} () const {\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b setsize} (const unsigned &size){\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isIsReference} () const {\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setIsReference} (bool isReference){\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b BlockSize}{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b start}{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/Block.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/Block.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ChunkReaderIterator::block_accessor Class Reference\par \pard\plain 
{\tc\tcl2 \v ChunkReaderIterator::block_accessor}
{\xe \v ChunkReaderIterator::block_accessor}
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
\par
{
{\f2 #include <ChunkStorage.h>}}\par
Inheritance diagram for ChunkReaderIterator::block_accessor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classChunkReaderIterator_1_1block__accessor.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b getBlock} ({\b BlockStreamBase} *&block) const {\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getBlockSize} () const {\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setBlockSize} (unsigned blockSize){\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size}{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This structure maintains all the information needed to access a block in in-memory chunk, in-disk chunk, or in-hdfs chunk.\par
The underlying reason for using this structure is to. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockContainer Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockContainer}
{\xe \v BlockContainer}
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
Inheritance diagram for BlockContainer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockContainer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockContainer} (unsigned size){\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b GetMaxSize} () const {\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b GetCurSize} () const {\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b GetRestSize} () const {\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b reset} (){\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b IncreaseActualSize} (unsigned size){\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b copy} ({\b BlockContainer} &block)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v copy\:BlockContainer}
{\xe \v BlockContainer\:copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BlockContainer::copy ({\b BlockContainer} & {\i block})}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy the block content and the acutal_size_ \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/BlockContainer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/BlockContainer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v BlockInfo}
{\xe \v BlockInfo}
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

BlockID {\b block_id}{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b tuple_count}{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/Partitioner.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockManager::BlockInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v BlockManager::BlockInfo}
{\xe \v BlockManager::BlockInfo}
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockInfo} (storageLevel level){\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

storageLevel {\b level_}{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockManager.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockManagerMaster::BlockInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v BlockManagerMaster::BlockInfo}
{\xe \v BlockManagerMaster::BlockInfo}
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b blockId_}{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

storageLevel {\b level_}{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockManagerMaster.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockManager Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockManager}
{\xe \v BlockManager}
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BlockInfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BlockManagerWorkerActor}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b storageLevel} \{ {\b memory}, 
{\b disk}, 
{\b offline}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b MemoryChunkStore} * {\b getMemoryChunkStore} () const {\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialize} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b registerToMaster} ({\b BlockManagerId} *blockManagerId){\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b heartBeat} (){\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b asyncReregister} (){\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b reregister} (){\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b reportAllBlocks} (){\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b reportBlockStatus} (string blockId){\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b tryToReportBlockStatus} (string blockId){\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b get} (string blockId){\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b getLocal} (string blockId){\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ChunkInfo} {\b loadFromHdfs} (string file_name){\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b loadFromHdfs} (const {\b ChunkID} &, void *const &desc, const unsigned &){\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b loadFromDisk} (const {\b ChunkID} &, void *const &desc, const unsigned &) const {\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b put} (string blockId, storageLevel level, void *value){\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockManagerId} * {\b getId} (){\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b askForMatch} (string filename, {\b BlockManagerId} bmi){\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b containsPartition} (const {\b PartitionID} &part) const {\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b addPartition} (const {\b PartitionID} &, const unsigned &number_of_chunks, const StorageLevel &desirable_storage_level){\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b removePartition} (const {\b PartitionID} &){\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionStorage} * {\b getPartitionHandle} (const {\b PartitionID} &partition_id) const {\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b BlockManager} * {\b getInstance} (){\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockManagerWorkerActor}{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v initialize\:BlockManager}
{\xe \v BlockManager\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BlockManager::initialize ()}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the version written by zhanglei///////////////////////////////// \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockManager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockManager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockManagerId Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockManagerId}
{\xe \v BlockManagerId}
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockManagerId} (string bmi){\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b blockManagerId}{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockManagerId.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockManagerId.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockManagerMaster Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockManagerMaster}
{\xe \v BlockManagerMaster}
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BlockInfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BlockManagerMasterActor}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b storageLevel} \{ {\b memory}, 
{\b disk}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b initialize} (){\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b testForPoc} (){\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b SendBindingMessage} (const {\b PartitionID} &, const unsigned &number_of_chunks, const StorageLevel &, const NodeID &) const {\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b SendUnbindingMessage} (const {\b PartitionID} &partition_id, NodeID &target) const {\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b BlockManagerMaster} * {\b getInstance} (){\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockManagerMaster.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockManagerMaster.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockManagerMaster::BlockManagerMasterActor Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockManagerMaster::BlockManagerMasterActor}
{\xe \v BlockManagerMaster::BlockManagerMasterActor}
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
Inheritance diagram for BlockManagerMaster::BlockManagerMasterActor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockManagerMaster_1_1BlockManagerMasterActor.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockManagerMasterActor} (Theron::Framework *framework, const char *name){\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b workerRegister} (const {\b StorageBudgetMessage} &message, const Theron::Address from){\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b heartbeatReceiver} (const {\b HeartBeatMessage} &message, const Theron::Address from){\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b blockStatusReceiver} (const {\b BlockStatusMessage} &message, const Theron::Address from){\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b matcherReceiver} (const {\b MatcherMessage} &message, const Theron::Address from){\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockManagerMaster}{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockManagerMaster.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockManagerMaster.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockManager::BlockManagerWorkerActor Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockManager::BlockManagerWorkerActor}
{\xe \v BlockManager::BlockManagerWorkerActor}
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
Inheritance diagram for BlockManager::BlockManagerWorkerActor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockManager_1_1BlockManagerWorkerActor.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockManagerWorkerActor} (Theron::Framework *framework, const char *name, {\b BlockManager} *bm){\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b _reigisterToMaster} ({\b BlockManagerId} *bMId){\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b _sendHeartBeat} (){\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b _reportBlockStatus} (string blockId){\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b _askformatch} (string filename, {\b BlockManagerId} bmi){\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockManager}{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockManager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockManager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockMessage Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockMessage}
{\xe \v BlockMessage}
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockMessage.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockMessage.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStatusMessage Struct Reference\par \pard\plain 
{\tc\tcl2 \v BlockStatusMessage}
{\xe \v BlockStatusMessage}
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStatusMessage} (const char *const text){\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\b mText} [BLOCK_STATUS_MESSAGE_LEN]{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStatusRespond Struct Reference\par \pard\plain 
{\tc\tcl2 \v BlockStatusRespond}
{\xe \v BlockStatusRespond}
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStatusRespond} (const char *const text){\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\b mText} [BLOCK_STATUS_MESSAGE_LEN]{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamAggregationIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamAggregationIterator}
{\xe \v BlockStreamAggregationIterator}
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
Inheritance diagram for BlockStreamAggregationIterator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamAggregationIterator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamAggregationIterator} ({\b State} state){\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Open} (const PartitionOffset &partition_offset)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} {\b state_}{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Open\:BlockStreamAggregationIterator}
{\xe \v BlockStreamAggregationIterator\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool BlockStreamAggregationIterator::Open (const PartitionOffset & {\i part_off}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Because that boost::serialization will allocate an instance of this class when deserializing, and hence the following three virtual method cannot be pure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
use if-else here is a kind of ugly. TODO: use a function which is initialized according to the aggregation function.\par
}{
Reimplemented from {\b PhysicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamAggregationIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamAggregationIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamBase Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamBase}
{\xe \v BlockStreamBase}
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
Inheritance diagram for BlockStreamBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamBase.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BlockStreamTraverseIterator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} (unsigned block_size){\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} (unsigned block_size, void *start_addr){\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\b BlockStreamBase} * {\b createBlockAndDeepCopy} ()=0{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void * {\b allocateTuple} (unsigned bytes)=0{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b setEmpty} ()=0{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Empty} () const =0{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Full} () const =0{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void * {\b getBlockDataAddress} ()=0{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned {\b getTuplesInBlock} () const =0{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned {\b getBlockCapacityInTuples} () const =0{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b copyBlock} (void *addr, unsigned length)=0{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b insert} (void *dest, void *src, unsigned bytes)=0{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deepCopy} (const {\b Block} *block)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b constructFromBlock} (const {\b Block} &block)=0{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b switchBlock} ({\b BlockStreamBase} &block)=0{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b serialize} ({\b Block} &block) const =0{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b deserialize} ({\b Block} *block)=0{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned {\b getSerializedBlockSize} () const =0{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamTraverseIterator} * {\b createIterator} (){\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b BlockStreamBase} * {\b createBlock} (const {\b Schema} *const &schema, unsigned block_size){\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b BlockStreamBase} * {\b createBlockWithDesirableSerilaizedSize} ({\b Schema} *schema, unsigned block_size)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void * {\b getTuple} (unsigned offset) const =0{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockStreamTraverseIterator}{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v createBlockWithDesirableSerilaizedSize\:BlockStreamBase}
{\xe \v BlockStreamBase\:createBlockWithDesirableSerilaizedSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BlockStreamBase} * BlockStreamBase::createBlockWithDesirableSerilaizedSize ({\b Schema} * {\i schema}, unsigned {\i block_size}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
:I add this function in order to end the chaos of setting the block size when initializing the BlockStream. -_- \par
}
}{
Referenced by bottomLayerCollecting::Open(), and IndexScanIterator::Open().}\par
}
{\xe \v deepCopy\:BlockStreamBase}
{\xe \v BlockStreamBase\:deepCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void BlockStreamBase::deepCopy (const {\b Block} * {\i block}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
deep copy from block, including block content and member variables that maintain the block status. the user should guarantee that rest block and desc block are of equal derived class type(e.g., both are {\b BlockStreamFix}), otherwise the copy may be incomplete. \par
}{
Implemented in {\b BlockStreamVar} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALG \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b BlockStreamFix} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/BlockStream.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/BlockStream.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamBuffer Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamBuffer}
{\xe \v BlockStreamBuffer}
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
Inheritance diagram for BlockStreamBuffer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamBuffer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBuffer} (unsigned block_size, unsigned block_count, {\b Schema} *schema){\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b insertBlock} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b getBlock} ({\b BlockStreamBase} &block){\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getBlockInBuffer} (){\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Empty} (){\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b getBufferUsage} (){\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

long {\b getReceivedDataSizeInKbytes} (){\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/BlockStreamBuffer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/BlockStreamBuffer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamCombinedIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamCombinedIterator}
{\xe \v BlockStreamCombinedIterator}
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
Inheritance diagram for BlockStreamCombinedIterator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamCombinedIterator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b remaining_block}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamCombinedIterator} ({\b State} state){\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Open} (const PartitionOffset &partition_offset=0){\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamCombinedIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamCombinedIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamExchangeLowerBase Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamExchangeLowerBase}
{\xe \v BlockStreamExchangeLowerBase}
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
Inheritance diagram for BlockStreamExchangeLowerBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamExchangeLowerBase.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Open} (const PartitionOffset &part_off=0)=0{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Next} ({\b BlockStreamBase} *)=0{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Close} ()=0{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b ConnectToUpper} (const {\b ExchangeID} &exchange_id, const NodeID &id, int &sock_fd, {\b Logging} *log) const {\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WaitingForNotification} (const int &target_socket_fd) const {\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b WaitingForCloseNotification} (const int &target_socket_fd) const {\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b hash} (void *input_tuple, {\b Schema} *schema, unsigned partition_key_index, unsigned nuppers){\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamExchangeLowerBase.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamExchangeLowerBase.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamExpander Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamExpander}
{\xe \v BlockStreamExpander}
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
Inheritance diagram for BlockStreamExpander:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamExpander.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamExpander} ({\b State} state){\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Open} (const PartitionOffset &partitoin_offset=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Open\:BlockStreamExpander}
{\xe \v BlockStreamExpander\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool BlockStreamExpander::Open (const PartitionOffset & {\i partitoin_offset} = {\f2 0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The following three lines test set callback status to expanded threads.\par
}{
Implements {\b BlockStreamIteratorBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAND \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamExpander.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamExpander.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamExpanderLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamExpanderLogging}
{\xe \v BlockStreamExpanderLogging}
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
Inheritance diagram for BlockStreamExpanderLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamExpanderLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamFix Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamFix}
{\xe \v BlockStreamFix}
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
Inheritance diagram for BlockStreamFix:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamFix.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamFix} (unsigned block_size, unsigned tuple_size){\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamFix} (unsigned block_size, unsigned tuple_size, void *start_addr, unsigned ntuples){\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b allocateTuple} (unsigned bytes){\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setTuplesInBlock} (unsigned n){\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setEmpty} (){\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b getTuple} (unsigned offset) const {\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Empty} () const {\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Full} () const {\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b getBlockDataAddress} (){\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b switchBlock} ({\b BlockStreamBase} &block){\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b copyBlock} (void *addr, unsigned length){\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b insert} (void *dest, void *src, unsigned bytes){\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b deepCopy} (const {\b Block} *block)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b serialize} ({\b Block} &block) const {\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b deserialize} ({\b Block} *block){\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getSerializedBlockSize} () const {\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getBlockCapacityInTuples} () const {\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getTuplesInBlock} () const {\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b constructFromBlock} (const {\b Block} &block)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b createBlockAndDeepCopy} (){\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b tuple_size_}{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b free_}{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockStreamBase}{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v constructFromBlock\:BlockStreamFix}
{\xe \v BlockStreamFix\:constructFromBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BlockStreamFix::constructFromBlock (const {\b Block} & {\i block}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a remedy for the data loading bug...\par
}{
Implements {\b BlockStreamBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v deepCopy\:BlockStreamFix}
{\xe \v BlockStreamFix\:deepCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BlockStreamFix::deepCopy (const {\b Block} * {\i block}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
deep copy from block, including block content and member variables that maintain the block status. the user should guarantee that rest block and desc block are of equal derived class type(e.g., both are {\b BlockStreamFix}), otherwise the copy may be incomplete. \par
}{
Implements {\b BlockStreamBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/BlockStream.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/BlockStream.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamInIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamInIterator}
{\xe \v BlockStreamInIterator}
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
Inheritance diagram for BlockStreamInIterator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamInIterator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b remaining_block}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamInIterator} ({\b State} state){\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Open} (const PartitionOffset &partition_offset=0){\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamInIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamInIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamIteratorBase Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamIteratorBase}
{\xe \v BlockStreamIteratorBase}
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
\par
{
{\f2 #include <BlockStreamIteratorBase.h>}}\par
Inheritance diagram for BlockStreamIteratorBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamIteratorBase.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Open} (const PartitionOffset &part_off=0)=0{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Next} ({\b BlockStreamBase} *)=0{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Close} ()=0{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b Print} (){\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\b ResultSet} * {\b getResultSet} (){\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b BlockStreamIteratorBase} * {\b createIterator} (const string &IteratorName){\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the base class for the block stream iterators. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/physical_operator_base.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamIteratorBase.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamJoinIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamJoinIterator}
{\xe \v BlockStreamJoinIterator}
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
Inheritance diagram for BlockStreamJoinIterator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamJoinIterator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b join_thread_context}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamJoinIterator} ({\b State} state){\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Open} (const PartitionOffset &partition_offset=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Open\:BlockStreamJoinIterator}
{\xe \v BlockStreamJoinIterator\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool BlockStreamJoinIterator::Open (const PartitionOffset & {\i part_off} = {\f2 0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Because that boost::serialization will allocate an instance of this class when deserializing, and hence the following three virtual method cannot be pure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For performance concern, the following line should place just after "RegisterNewThreadToAllBarriers();" in order to accelerate the open response time.\par
}{
Reimplemented from {\b PhysicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamJoinIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamJoinIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamJoinLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamJoinLogging}
{\xe \v BlockStreamJoinLogging}
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b log} (const char *format,...){\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b elog} (const char *format,...){\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamLimit Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamLimit}
{\xe \v BlockStreamLimit}
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
Inheritance diagram for BlockStreamLimit:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamLimit.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamLimit} ({\b State} state){\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Open} (const PartitionOffset &){\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Next} ({\b BlockStreamBase} *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Next\:BlockStreamLimit}
{\xe \v BlockStreamLimit\:Next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool BlockStreamLimit::Next ({\b BlockStreamBase} * {\i block}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
if the limit has already been exhausted, the current loop breaks to fetch the next block from child iterator. TODO: ideally, fetching blocks from child iterator in cases that the limit is exhausted is not necessary. However, in the current implementation, the child iterator sub-tree leaded by exchange lower iterator cannot be closed if not all the blocks are called.\par
}{
Implements {\b BlockStreamIteratorBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAND \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamLimit.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamLimit.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamNestLoopJoinIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamNestLoopJoinIterator}
{\xe \v BlockStreamNestLoopJoinIterator}
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
Inheritance diagram for BlockStreamNestLoopJoinIterator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamNestLoopJoinIterator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b join_thread_context}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b remaining_block}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamNestLoopJoinIterator} ({\b State} state){\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Open} (const PartitionOffset &partition_offset=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Open\:BlockStreamNestLoopJoinIterator}
{\xe \v BlockStreamNestLoopJoinIterator\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool BlockStreamNestLoopJoinIterator::Open (const PartitionOffset & {\i part_off} = {\f2 0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Because that boost::serialization will allocate an instance of this class when deserializing, and hence the following three virtual method cannot be pure. \par
}{
Reimplemented from {\b PhysicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamNestLoopJoinIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamNestLoopJoinIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamPerformanceMonitorTop Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamPerformanceMonitorTop}
{\xe \v BlockStreamPerformanceMonitorTop}
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
Inheritance diagram for BlockStreamPerformanceMonitorTop:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamPerformanceMonitorTop.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamPerformanceMonitorTop} ({\b State} state_){\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Open} (const PartitionOffset &partition_offset=0){\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long int {\b getNumberOfTuples} () const {\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamPerformanceMonitorTop.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamPerformanceMonitorTop.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamPrint Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamPrint}
{\xe \v BlockStreamPrint}
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
Inheritance diagram for BlockStreamPrint:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamPrint.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamPrint} ({\b State} state){\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Open} (const PartitionOffset &offset){\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/result_printer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/result_printer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamProjectIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamProjectIterator}
{\xe \v BlockStreamProjectIterator}
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
Inheritance diagram for BlockStreamProjectIterator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamProjectIterator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b project_thread_context}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamProjectIterator} ({\b State} state){\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Open} (const PartitionOffset &partition_offset=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Open\:BlockStreamProjectIterator}
{\xe \v BlockStreamProjectIterator\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool BlockStreamProjectIterator::Open (const PartitionOffset & {\i part_off} = {\f2 0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Because that boost::serialization will allocate an instance of this class when deserializing, and hence the following three virtual method cannot be pure. \par
}{
Reimplemented from {\b PhysicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamProjectIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamProjectIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamResultCollector Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamResultCollector}
{\xe \v BlockStreamResultCollector}
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
Inheritance diagram for BlockStreamResultCollector:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamResultCollector.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamResultCollector} ({\b State}){\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Open} (const PartitionOffset &part_off=0){\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ResultSet} * {\b getResultSet} (){\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b getNumberOftuples} () const {\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/result_collector.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/result_collector.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamSortIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamSortIterator}
{\xe \v BlockStreamSortIterator}
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
Inheritance diagram for BlockStreamSortIterator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamSortIterator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef struct \par
{\b BlockStreamSortIterator::SNode} {\b SNode}{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamSortIterator} ({\b State} state){\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Open} (const PartitionOffset &part_off=0){\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b cssort} (){\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamSortIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamSortIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamBase::BlockStreamTraverseIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamBase::BlockStreamTraverseIterator}
{\xe \v BlockStreamBase::BlockStreamTraverseIterator}
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamTraverseIterator} ({\b BlockStreamBase} *block_stream_base){\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b nextTuple} (){\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b currentTuple} () const {\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b getTuple} (unsigned tuple_off) const {\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b increase_cur_} (){\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b reset} (){\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b get_cur} () const {\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_cur} (unsigned c){\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/BlockStream.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamVar Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamVar}
{\xe \v BlockStreamVar}
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
Inheritance diagram for BlockStreamVar:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamVar.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamVar} (unsigned block_size, const {\b Schema} *const &schema){\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b getTuple} (unsigned offset) const {\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b allocateTuple} (unsigned bytes){\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b insert} (void *dest, void *src, unsigned bytes){\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b serialize} ({\b Block} &block) const {\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b constructFromBlock} (const {\b Block} &block){\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b insert} (void *dest, void *src){\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setEmpty} (){\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b deserialize} ({\b Block} *block){\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b toDisk} ({\b BlockStreamBase} *bsb, string path){\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b printSchema} (){\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Empty} () const {\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Full} () const {\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b getBlockDataAddress} (){\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b switchBlock} ({\b BlockStreamBase} &block){\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b copyBlock} (void *addr, unsigned length){\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b deepCopy} (const {\b Block} *block)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getSerializedBlockSize} () const {\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getBlockCapacityInTuples} () const {\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getTuplesInBlock} () const {\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b createBlockAndDeepCopy} (){\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v deepCopy\:BlockStreamVar}
{\xe \v BlockStreamVar\:deepCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BlockStreamVar::deepCopy (const {\b Block} * {\i block}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
deep copy from block, including block content and member variables that maintain the block status. the user should guarantee that rest block and desc block are of equal derived class type(e.g., both are {\b BlockStreamFix}), otherwise the copy may be incomplete. \par
}{
Implements {\b BlockStreamBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/BlockStream.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/BlockStream.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BoostHashFunctin Class Reference\par \pard\plain 
{\tc\tcl2 \v BoostHashFunctin}
{\xe \v BoostHashFunctin}
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
Inheritance diagram for BoostHashFunctin:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBoostHashFunctin.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BoostHashFunctin} (const int &range){\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b get_partition_value} (const int &value) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned int {\b get_partition_value} (const unsigned long &value) const {\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned int {\b get_partition_value} (const double &value) const {\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned int {\b get_partition_value} (const long &value) const {\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

PartitionStyle {\b getPartitionFashion} () const {\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getNumberOfPartitions} () const {\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_partition_value\:BoostHashFunctin}
{\xe \v BoostHashFunctin\:get_partition_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int BoostHashFunctin::get_partition_value (const int & {\i value}) const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the bucket number $n\in[0,k)$ for this {\i value} . {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{Value to hash. Must be within bounds. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Bucket number. \par
}}{
Implements {\b PartitionFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hash.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bottomLayerCollecting Class Reference\par \pard\plain 
{\tc\tcl2 \v bottomLayerCollecting}
{\xe \v bottomLayerCollecting}
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
Inheritance diagram for bottomLayerCollecting:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbottomLayerCollecting.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b remaining_block}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b bottomLayerCollecting} ({\b State} state){\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Open} (const PartitionOffset &partition_offset=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Open\:bottomLayerCollecting}
{\xe \v bottomLayerCollecting\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool bottomLayerCollecting::Open (const PartitionOffset & {\i part_off} = {\f2 0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Because that boost::serialization will allocate an instance of this class when deserializing, and hence the following three virtual method cannot be pure. \par
}{
Reimplemented from {\b PhysicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References BlockStreamBase::createBlockWithDesirableSerilaizedSize().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBIndexBuilding.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBIndexBuilding.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bottomLayerSorting Class Reference\par \pard\plain 
{\tc\tcl2 \v bottomLayerSorting}
{\xe \v bottomLayerSorting}
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
Inheritance diagram for bottomLayerSorting:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbottomLayerSorting.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b compare_node}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef struct \par
{\b bottomLayerSorting::compare_node} {\b compare_node}{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b bottomLayerSorting} ({\b State} state){\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Open} (const PartitionOffset &partition_offset=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Open\:bottomLayerSorting}
{\xe \v bottomLayerSorting\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool bottomLayerSorting::Open (const PartitionOffset & {\i part_off} = {\f2 0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Because that boost::serialization will allocate an instance of this class when deserializing, and hence the following three virtual method cannot be pure. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\i for testing} / cout << "chunk id: " << *(unsigned short*)iter->first << endl; \par
}{
Reimplemented from {\b PhysicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBIndexBuilding.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBIndexBuilding.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InsertOptimizedHashTable::bucket Struct Reference\par \pard\plain 
{\tc\tcl2 \v InsertOptimizedHashTable::bucket}
{\xe \v InsertOptimizedHashTable::bucket}
{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b has_space_for_new_entry} (){\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b allocate_new_entry} (unsigned &new_entry_index){\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b meta_data} {\b head}{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b entry} {\b entrys} [(Bucket_Size-sizeof(head))/sizeof({\b entry})]{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/InsertOptimizedHashTable.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InsertOptimizedHashTable::BucketIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v InsertOptimizedHashTable::BucketIterator}
{\xe \v InsertOptimizedHashTable::BucketIterator}
{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BucketIterator} ({\b bucket} *buck){\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b nextTuple} (){\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/InsertOptimizedHashTable.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BufferManager Class Reference\par \pard\plain 
{\tc\tcl2 \v BufferManager}
{\xe \v BufferManager}
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b applyStorageDedget} (unsigned long size){\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getStorageMemoryBudegeInMilibyte} () const {\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b returnStorageBudget} (unsigned long size){\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b BufferManager} * {\b getInstance} (){\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/BufferManager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/BufferManager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BufferManagerLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v BufferManagerLogging}
{\xe \v BufferManagerLogging}
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
Inheritance diagram for BufferManagerLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBufferManagerLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Catalog Class Reference\par \pard\plain 
{\tc\tcl2 \v Catalog}
{\xe \v Catalog}
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b allocate_unique_table_id} (){\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b add_table} ({\b TableDescriptor} *const &table){\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b TableDescriptor} * {\b getTable} (const TableID &) const {\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b TableDescriptor} * {\b getTable} (const std::string &table_name) const {\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionDescriptor} * {\b getProjection} (const {\b ProjectionID} &) const {\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionBinding} * {\b getBindingModele} () const {\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getTableCount} () const {\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b saveCatalog} (){\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b restoreCatalog} (){\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b outPut} (){\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isAttributeExist} (const std::string &table_name, const std::string &attribute_name) const {\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b PartitionID} > {\b getPartitionIDList} (const std::string &table_name, const std::string &attribute_name){\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b Catalog} * {\b getInstance} (){\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/Catalog.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/Catalog.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CatalogLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v CatalogLogging}
{\xe \v CatalogLogging}
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
Inheritance diagram for CatalogLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCatalogLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CCSBInternalNode< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v CCSBInternalNode< T >}
{\xe \v CCSBInternalNode< T >}
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
Inheritance diagram for CCSBInternalNode< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCCSBInternalNode.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setUsedKeys} (int count){\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b data_offset}< T > {\b getElement} (unsigned i){\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setElement} (unsigned i, T key){\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNodeGroup}< T > * {\b getPointer} (){\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setPointer} ({\b CCSBNodeGroup}< T > *pointer){\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Insert} (T key){\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Delete} (T value){\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

T {\b SplitInsert} ({\b CCSBNode}< T > *pNode, T key){\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Combine} ({\b CCSBNode}< T > *pNode){\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DeleteChildren} (){\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b serialize} (FILE *filename){\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b deserialize} (FILE *filename){\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

T * {\b node_keys}{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNodeGroup}< T > * {\b p_child_node_group}{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBPlusTree.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBPlusTree.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CCSBInternalNodeGroup< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v CCSBInternalNodeGroup< T >}
{\xe \v CCSBInternalNodeGroup< T >}
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
Inheritance diagram for CCSBInternalNodeGroup< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCCSBInternalNodeGroup.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBInternalNodeGroup} (unsigned n){\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setUsedNodes} (unsigned n){\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNode}< T > * {\b getNode} (unsigned i){\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setNode} (unsigned i, {\b CCSBNode}< T > *node){\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Insert} (unsigned node_off, T key){\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DeleteChildren} (){\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b serialize} (FILE *filename){\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b deserialize} (FILE *filename){\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNode}< T > ** {\b internal_nodes}{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBPlusTree.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBPlusTree.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CCSBLeafNode< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v CCSBLeafNode< T >}
{\xe \v CCSBLeafNode< T >}
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
Inheritance diagram for CCSBLeafNode< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCCSBLeafNode.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setUsedKeys} (int count){\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b data_offset}< T > {\b getElement} (unsigned i){\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setElement} (unsigned i, {\b data_offset}< T > data){\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNodeGroup}< T > * {\b getPointer} (){\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Insert} ({\b data_offset}< T > value){\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Delete} (T value){\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

T {\b SplitInsert} ({\b CCSBNode}< T > *pNode, {\b data_offset}< T > data){\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Combine} ({\b CCSBNode}< T > *pNode){\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DeleteChildren} (){\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b serialize} (FILE *filename){\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b deserialize} (FILE *filename){\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b data_offset}< T > * {\b node_datas}{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBPlusTree.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBPlusTree.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CCSBLeafNodeGroup< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v CCSBLeafNodeGroup< T >}
{\xe \v CCSBLeafNodeGroup< T >}
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
Inheritance diagram for CCSBLeafNodeGroup< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCCSBLeafNodeGroup.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBLeafNodeGroup} (unsigned n){\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNodeGroup}< T > * {\b getHeaderNG} (){\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setHeaderNG} ({\b CCSBNodeGroup}< T > *header){\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNodeGroup}< T > * {\b getTailerNG} (){\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setTailerNG} ({\b CCSBNodeGroup}< T > *tailer){\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setUsedNodes} (unsigned n){\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNode}< T > * {\b getNode} (unsigned i){\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setNode} (unsigned i, {\b CCSBNode}< T > *node){\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DeleteChildren} (){\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b serialize} (FILE *filename){\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b deserialize} (FILE *filename){\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNode}< T > ** {\b leaf_nodes}{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNodeGroup}< T > * {\b p_header}{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNodeGroup}< T > * {\b p_tailer}{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBPlusTree.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBPlusTree.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CCSBNode< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v CCSBNode< T >}
{\xe \v CCSBNode< T >}
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
Inheritance diagram for CCSBNode< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCCSBNode.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b getUsedKeys} (){\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b setUsedKeys} (int count){\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNode}< T > * {\b getFather} (){\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setFather} ({\b CCSBNode}< T > *father){\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\b data_offset}< T > {\b getElement} (unsigned i){\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b setElement} (unsigned i, {\b data_offset}< T > value){\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b setElement} (unsigned i, T value){\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\b CCSBNodeGroup}< T > * {\b getPointer} (){\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b setPointer} ({\b CCSBNodeGroup}< T > *pointer){\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b DeleteChildren} (){\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Insert} (T key){\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Insert} ({\b data_offset}< T > value){\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Delete} (T value){\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual T {\b SplitInsert} ({\b CCSBNode}< T > *pNode, T key){\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual T {\b SplitInsert} ({\b CCSBNode}< T > *pNode, {\b data_offset}< T > data){\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Combine} ({\b CCSBNode}< T > *pNode){\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b serialize} (FILE *filename){\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b deserialize} (FILE *filename){\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static unsigned {\b getMaxKeys} (){\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static unsigned {\b getMaxDatas} (){\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b used_keys}{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNode}< T > * {\b p_father}{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBPlusTree.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBPlusTree.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CCSBNodeGroup< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v CCSBNodeGroup< T >}
{\xe \v CCSBNodeGroup< T >}
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
Inheritance diagram for CCSBNodeGroup< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCCSBNodeGroup.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNodeGroup} (unsigned n){\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getUsedNodes} (){\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b nodeCountIncrement} (){\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\b CCSBNodeGroup}< T > * {\b getHeaderNG} (){\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b setHeaderNG} ({\b CCSBNodeGroup}< T > *header){\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\b CCSBNodeGroup}< T > * {\b getTailerNG} (){\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b setTailerNG} ({\b CCSBNodeGroup}< T > *tailer){\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b setUsedNodes} (unsigned n){\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\b CCSBNode}< T > * {\b getNode} (unsigned i){\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b setNode} (unsigned i, {\b CCSBNode}< T > *node){\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Insert} (unsigned node_off, T key){\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b DeleteChildren} (){\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b serialize} (FILE *filename){\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b deserialize} (FILE *filename){\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b used_nodes}{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBPlusTree.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ChunkID Struct Reference\par \pard\plain 
{\tc\tcl2 \v ChunkID}
{\xe \v ChunkID}
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ChunkID} ({\b PartitionID} partition_id, ChunkOffset chunk_offset){\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ChunkID} (const {\b ChunkID} &r){\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} (const {\b ChunkID} &r) const {\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator<} (const {\b ChunkID} &r) const {\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionID} {\b partition_id}{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ChunkOffset {\b chunk_off}{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ids.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ChunkInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v ChunkInfo}
{\xe \v ChunkInfo}
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ChunkID} {\b chunkId}{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b hook}{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockManager.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ChunkReaderIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v ChunkReaderIterator}
{\xe \v ChunkReaderIterator}
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
Inheritance diagram for ChunkReaderIterator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classChunkReaderIterator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b block_accessor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InDiskBlockAccessor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InHDFSBlockAccessor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InMemeryBlockAccessor}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ChunkReaderIterator} (const {\b ChunkID} &chunk_id, unsigned block_size, unsigned chunk_size, const unsigned &number_of_blocks=0){\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b nextBlock} ({\b BlockStreamBase} *&block)=0{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b getNextBlockAccessor} ({\b block_accessor} *&ba)=0{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b nextBlock} (){\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ChunkID} {\b chunk_id_}{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b number_of_blocks_}{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b cur_block_}{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Lock} {\b lock_}{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b chunk_size_}{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ChunkStorage Class Reference\par \pard\plain 
{\tc\tcl2 \v ChunkStorage}
{\xe \v ChunkStorage}
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ChunkStorage} (const {\b ChunkID} &chunk_id, const unsigned &block_size, const StorageLevel &desirable_level){\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ChunkReaderIterator} * {\b createChunkReaderIterator} (){\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b printCurrentStorageLevel} () const {\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ChunkID} {\b getChunkID} (){\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setCurrentStorageLevel} (const StorageLevel &current_level){\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ChunkStore Class Reference\par \pard\plain 
{\tc\tcl2 \v ChunkStore}
{\xe \v ChunkStore}
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b storeChunk} ({\b ChunkID} chunk_id, void *value, unsigned length=CHUNK_SIZE)=0{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void * {\b getChunk} ({\b ChunkID} chunk_id)=0{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b remove} ({\b ChunkID} chunk_id)=0{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b contains} ({\b ChunkID} chunk_id)=0{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned {\b getSize} ({\b ChunkID} chunk_id)=0{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockStore.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/BlockStore.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Client Class Reference\par \pard\plain 
{\tc\tcl2 \v Client}
{\xe \v Client}
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b query_result} \{ {\b result}, 
{\b error}, 
{\b message}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b connection} (std::string host, int port){\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ClientResponse} * {\b submitQuery} (std::string args){\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b query_result} {\b submit} (std::string command, std::string &message, {\b ResultSet} &rt){\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ClientResponse} * {\b receive} (){\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b shutdown} (){\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b connected} () const {\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/Client.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/Client.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClientListener Class Reference\par \pard\plain 
{\tc\tcl2 \v ClientListener}
{\xe \v ClientListener}
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ClientListener} (int port){\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configure} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b shutdown} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b checkFdValid} (int fd){\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v configure\:ClientListener}
{\xe \v ClientListener\:configure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ClientListener::configure ()}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
configure the socket parameter, bind to the specific ip/port startup the send/receive threads \par
}}
{\xe \v shutdown\:ClientListener}
{\xe \v ClientListener\:shutdown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ClientListener::shutdown ()}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Thread shut down the server when it receives "shut down" command from a client. shut down the server \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/ClaimsServer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/ClaimsServer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClientListenerLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v ClientListenerLogging}
{\xe \v ClientListenerLogging}
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b log} (const char *format,...){\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b elog} (const char *format,...){\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClientLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v ClientLogging}
{\xe \v ClientLogging}
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b log} (const char *format,...){\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b elog} (const char *format,...){\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClientResponse Struct Reference\par \pard\plain 
{\tc\tcl2 \v ClientResponse}
{\xe \v ClientResponse}
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b get_length} (){\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b getMessage} (){\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setError} (std::string reason){\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b getError} () const {\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setEnd} (double query_time){\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b getEndInfo} () const {\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setOk} (std::string info){\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b getOK} () const {\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setSchema} ({\b Schema} *schema){\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b getSchema} () const {\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setAttributeName} ({\b ColumnHeader} &header){\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ColumnHeader} {\b getAttributeName} () const {\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setDataBlock} ({\b Block} &block){\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b getDataBlock} ({\b Schema} *schema) const {\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setData} (string s){\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b serialize} (char *&buffer) const {\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b deserialize} (const char *received_buffer, int recieved_bytes_length){\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setChange} (std::string info){\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b getChange} () const {\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b status}{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b length}{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b content}{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/ClientResponse.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CodeGenerationTest Class Reference\par \pard\plain 
{\tc\tcl2 \v CodeGenerationTest}
{\xe \v CodeGenerationTest}
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
Inheritance diagram for CodeGenerationTest:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCodeGenerationTest.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b SetUpTestCase} (){\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b TearDownTestCase} (){\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
codegen/codegen_test.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CodeGenerator Class Reference\par \pard\plain 
{\tc\tcl2 \v CodeGenerator}
{\xe \v CodeGenerator}
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const Module * {\b getModule} () const {\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

llvm::IRBuilder * {\b getBuilder} () const {\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

FunctionPassManager * {\b getFunctionPassManager} () const {\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ExecutionEngine * {\b getExecutionEngine} () const {\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b lock} (){\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b release} (){\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b CodeGenerator} * {\b getInstance} (){\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
codegen/CodeGenerator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
codegen/CodeGenerator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Column Class Reference\par \pard\plain 
{\tc\tcl2 \v Column}
{\xe \v Column}
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
Inheritance diagram for Column:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classColumn.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Column} ({\b Attribute} &, {\b ColumnID}){\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Column} (const {\b Column} &c){\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ColumnID} {\b column_id_}{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/Column.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/Column.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Column_atts Struct Reference\par \pard\plain 
{\tc\tcl2 \v Column_atts}
{\xe \v Column_atts}
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b datatype}{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b num1}{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b num2}{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b s}{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b col_list}{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
column_metadata Struct Reference\par \pard\plain 
{\tc\tcl2 \v column_metadata}
{\xe \v column_metadata}
{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b column_metadata} ({\b column_type} type, {\b ColumnDistribution} *dis=0){\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b column_metadata} (const {\b column_metadata} &r){\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b column_type} {\b type}{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ColumnDistribution} * {\b dis}{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/generator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
column_type Class Reference\par \pard\plain 
{\tc\tcl2 \v column_type}
{\xe \v column_type}
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b column_type} (data_type type, unsigned _size=0, bool _nullable=true){\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b column_type} (const {\b column_type} &r){\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b column_type} & {\b operator=} (const {\b column_type} &r){\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b get_length} () const {\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} (const class {\b column_type} &c) const {\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator<} (const class {\b column_type} &c) const {\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b operate}{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

data_type {\b type}{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b nullable}{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b size}{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/data_type.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ColumnDistribution Class Reference\par \pard\plain 
{\tc\tcl2 \v ColumnDistribution}
{\xe \v ColumnDistribution}
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
Inheritance diagram for ColumnDistribution:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classColumnDistribution.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b giveRandomValue} (void *column_addr){\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/data_distribution_generator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/data_distribution_generator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ColumnHeader Struct Reference\par \pard\plain 
{\tc\tcl2 \v ColumnHeader}
{\xe \v ColumnHeader}
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add_header} (std::string name){\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< std::string > {\b header_list}{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/ClientResponse.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ColumnID Struct Reference\par \pard\plain 
{\tc\tcl2 \v ColumnID}
{\xe \v ColumnID}
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
\par
{
{\f2 #include <ids.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ColumnID} ({\b ProjectionID} pid, ColumnOffset off){\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} (const {\b ColumnID} &r) const {\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionID} {\b projection_id}{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ColumnOffset {\b column_off}{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ColumnID}: a {\b Column} corresponds to an attribute and is physically stored in one projection. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ids.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Columns Struct Reference\par \pard\plain 
{\tc\tcl2 \v Columns}
{\xe \v Columns}
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b parameter1}{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b parameter2}{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Commit_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Commit_stmt}
{\xe \v Commit_stmt}
{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b chain}{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b release}{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Comparator Class Reference\par \pard\plain 
{\tc\tcl2 \v Comparator}
{\xe \v Comparator}
{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
Inheritance diagram for Comparator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classComparator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Pair}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b comparison} \{ {\b L}, 
{\b LEQ}, 
{\b EQ}, 
{\b NEQ}, 
{\b G}, 
{\b GEQ}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Comparator} ({\b column_type} x, {\b column_type} b, Comparator::comparison c){\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Comparator} (const {\b Comparator} &r){\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

comparison {\b getCompareType} () const {\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool(* {\b compare} )(const void *, const void *){\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Pair} {\b pair}{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

comparison {\b compareType}{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Comparator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Comparator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bottomLayerSorting::compare_node Struct Reference\par \pard\plain 
{\tc\tcl2 \v bottomLayerSorting::compare_node}
{\xe \v bottomLayerSorting::compare_node}
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b vector_schema_}{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b tuple_}{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b op_}{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBIndexBuilding.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Condition Struct Reference\par \pard\plain 
{\tc\tcl2 \v Condition}
{\xe \v Condition}
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b conditiontype}{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b args}{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Config Class Reference\par \pard\plain 
{\tc\tcl2 \v Config}
{\xe \v Config}
{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
\par
{
{\f2 #include <Config.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print_configure} () const {\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print_configure} () const {\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b Config} * {\b getInstance} (){\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b Config} * {\b getInstance} (){\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static std::string {\b config_file}{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b data_dir}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b max_degree_of_parallelism}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b initial_degree_of_parallelism}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static bool {\b enable_expander_adaptivity}{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static int {\b expander_adaptivity_check_frequency}{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static int {\b scan_batch}{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static std::string {\b hdfs_master_ip}{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static int {\b hdfs_master_port}{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static std::string {\b logfile}{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static bool {\b master}{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static bool {\b local_disk_mode}{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b pipelined_exchange}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static int {\b client_listener_port}{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static bool {\b enable_codegen}{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static std::string {\b catalog_file}{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class maintains all the parameter values, which are specified in "config" file. In the debug version, in the initialization phase, default values are usded in case that the value is not given in "config" file. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v data_dir\:Config}
{\xe \v Config\:data_dir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::string Config::data_dir{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
parameter values. Note: these values are static, so that they can be accessed directly, like {\b Config::data_dir}. Static value must be defined in *.cpp file, otherwise compiler will complain. \par
}}
{\xe \v initial_degree_of_parallelism\:Config}
{\xe \v Config\:initial_degree_of_parallelism}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Config::initial_degree_of_parallelism{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This parameter sets the initial degree of parallelism for each segment. \par
}{
Referenced by claims::logical_operator::LogicalQueryPlanRoot::GetPhysicalPlan(), claims::logical_operator::LogicalAggregation::GetPhysicalPlan(), claims::logical_operator::LogicalSort::GetPhysicalPlan(), and claims::logical_operator::LogicalEqualJoin::GetPhysicalPlan().}\par
}
{\xe \v max_degree_of_parallelism\:Config}
{\xe \v Config\:max_degree_of_parallelism}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int Config::max_degree_of_parallelism{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This parameter specifies the maximum degrees of parallelism for each expander. \par
}}
{\xe \v pipelined_exchange\:Config}
{\xe \v Config\:pipelined_exchange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Config::pipelined_exchange{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
THis parameter determines whether the data transmission in data exchanges is pipelined. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Config.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
install/include/Config.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Config.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Connector Class Reference\par \pard\plain 
{\tc\tcl2 \v Connector}
{\xe \v Connector}
{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
Inheritance diagram for Connector:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classConnector.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Connector} (vector< vector< string > > writepath){\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b openFiles} (open_flag open_flag_)=0{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b closeFiles} ()=0{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual int {\b flush} (unsigned projection_offset, unsigned partition_offset, void *source, unsigned length)=0{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< vector< string > > {\b writepath}{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Loader/Connector.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ttmath::Conv Struct Reference\par \pard\plain 
{\tc\tcl2 \v ttmath::Conv}
{\xe \v ttmath::Conv}
{\bkmkstart AAAAAAAFEB}
{\bkmkend AAAAAAAFEB}
\par
{
{\f2 #include <ttmathtypes.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b base}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b scient}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sint {\b scient_from}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b base_round}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sint {\b round}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b trim_zeroes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b comma}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b comma2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b group}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b uint} {\b group_exp}{\bkmkstart AAAAAAAFEC}
{\bkmkend AAAAAAAFEC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this struct is used when converting to/from a string /temporarily only in Big::ToString() and Big::FromString()/ \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v base\:ttmath::Conv}
{\xe \v ttmath::Conv\:base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint} ttmath::Conv::base}}
\par
{\bkmkstart AAAAAAAFED}
{\bkmkend AAAAAAAFED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
base (radix) on which the value will be shown (or read) default: 10 \par
}}
{\xe \v base_round\:ttmath::Conv}
{\xe \v ttmath::Conv\:base_round}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ttmath::Conv::base_round}}
\par
{\bkmkstart AAAAAAAFEE}
{\bkmkend AAAAAAAFEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
if 'base_round' is true and 'base' is different from 2, 4, 8, or 16 and the result value is not an integer then we make an additional rounding (after converting the last digit from the result is skipped) default: true\par
e.g. {\b Conv} c; c.base_round = false; Big<1, 1> a = "0.1"; // decimal input std::cout << a.ToString(c) << std::endl; // the result is: 0.099999999 \par
}}
{\xe \v comma\:ttmath::Conv}
{\xe \v ttmath::Conv\:comma}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint} ttmath::Conv::comma}}
\par
{\bkmkstart AAAAAAAFEF}
{\bkmkend AAAAAAAFEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the main comma operator (used when reading and writing) default is a dot '.' \par
}}
{\xe \v comma2\:ttmath::Conv}
{\xe \v ttmath::Conv\:comma2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint} ttmath::Conv::comma2}}
\par
{\bkmkstart AAAAAAAFEG}
{\bkmkend AAAAAAAFEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
additional comma operator (used only when reading) if you don't want it just set it to zero default is a comma ','\par
this allowes you to convert from a value: 123.45 as well as from 123,45 \par
}}
{\xe \v group\:ttmath::Conv}
{\xe \v ttmath::Conv\:group}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b uint} ttmath::Conv::group}}
\par
{\bkmkstart AAAAAAAFEH}
{\bkmkend AAAAAAAFEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
it sets the character which is used for grouping if group=' ' then: 1234,56789 will be printed as: 1 234,567 89\par
if you don't want grouping just set it to zero (which is default) \par
}}
{\xe \v round\:ttmath::Conv}
{\xe \v ttmath::Conv\:round}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sint ttmath::Conv::round}}
\par
{\bkmkstart AAAAAAAFEI}
{\bkmkend AAAAAAAFEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
used only in Big::ToString() tells how many digits after comma are possible default: -1 which means all digits are printed\par
set it to zero if you want integer value only\par
for example when the value is: 12.345678 and 'round' is 4 then the result will be 12.3457 (the last digit was rounded) \par
}}
{\xe \v scient\:ttmath::Conv}
{\xe \v ttmath::Conv\:scient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ttmath::Conv::scient}}
\par
{\bkmkstart AAAAAAAFEJ}
{\bkmkend AAAAAAAFEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
used only in Big::ToString() if true the value will be always shown in the scientific mode, e.g: 123e+30 default: false \par
}}
{\xe \v scient_from\:ttmath::Conv}
{\xe \v ttmath::Conv\:scient_from}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sint ttmath::Conv::scient_from}}
\par
{\bkmkstart AAAAAAAFEK}
{\bkmkend AAAAAAAFEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
used only in Big::ToString() if scient is false then the value will be print in the scientific mode only if the exponent is greater than scien_from default: 15 \par
}}
{\xe \v trim_zeroes\:ttmath::Conv}
{\xe \v ttmath::Conv\:trim_zeroes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ttmath::Conv::trim_zeroes}}
\par
{\bkmkstart AAAAAAAFEL}
{\bkmkend AAAAAAAFEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
if true that not mattered digits in the mantissa will be cut off (zero characters at the end - after the comma operator) e.g. 1234,78000 will be: 1234,78 default: true \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/types/ttmath/{\b ttmathtypes.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Coordinator::CoordinateActor Class Reference\par \pard\plain 
{\tc\tcl2 \v Coordinator::CoordinateActor}
{\xe \v Coordinator::CoordinateActor}
{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
\par
{
{\f2 #include <Coordinator.h>}}\par
Inheritance diagram for Coordinator::CoordinateActor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCoordinator_1_1CoordinateActor.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CoordinateActor} (Theron::Framework *framework, const char *Name){\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Actor \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/Coordinator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/Coordinator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Coordinator Class Reference\par \pard\plain 
{\tc\tcl2 \v Coordinator}
{\xe \v Coordinator}
{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CoordinateActor}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Coordinator} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Coordinator\:Coordinator}
{\xe \v Coordinator\:Coordinator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Coordinator::Coordinator ()}}
\par
{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
swap the order of SetupTheTheron and PreparetheSocket to provide more time to Theron::EndPoint initialization before other EndPoints connect to it.\par
}{
References Logging::elog().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/Coordinator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/Coordinator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoordinatorLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v CoordinatorLogging}
{\xe \v CoordinatorLogging}
{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
Inheritance diagram for CoordinatorLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classCoordinatorLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b log} (const char *format,...){\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b elog} (const char *format,...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v elog\:CoordinatorLogging}
{\xe \v CoordinatorLogging\:elog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoordinatorLogging::elog (const char * {\i format},  {\i ...}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
print the error information to stderr. \par
}{
Implements {\b Logging} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CPUResourceManager::core Struct Reference\par \pard\plain 
{\tc\tcl2 \v CPUResourceManager::core}
{\xe \v CPUResourceManager::core}
{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b offset}{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b available}{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b id}{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/CPUResource.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
COUNTER Class Reference\par \pard\plain 
{\tc\tcl2 \v COUNTER}
{\xe \v COUNTER}
{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static int {\b count}{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/types/NValue.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CPUResourceManager Class Reference\par \pard\plain 
{\tc\tcl2 \v CPUResourceManager}
{\xe \v CPUResourceManager}
{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b core}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b socket}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tryApplyCore} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b applyCore} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b freeCore} (int core_id=-1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b CPUResourceManager} * {\b getInstance} (){\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v applyCore\:CPUResourceManager}
{\xe \v CPUResourceManager\:applyCore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CPUResourceManager::applyCore ()}}
\par
{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
apply for a core, return id of allocated core, blocked if no cores are available. \par
}}
{\xe \v freeCore\:CPUResourceManager}
{\xe \v CPUResourceManager\:freeCore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPUResourceManager::freeCore (int {\i core_id} = {\f2 -1})}}
\par
{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return the core to the Cpu resource core_id should be given if the caller is not running of the thread bound to the core. \par
}}
{\xe \v print\:CPUResourceManager}
{\xe \v CPUResourceManager\:print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPUResourceManager::print ()}}
\par
{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
print the status of the cores in an array form. \par
}}
{\xe \v tryApplyCore\:CPUResourceManager}
{\xe \v CPUResourceManager\:tryApplyCore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CPUResourceManager::tryApplyCore ()}}
\par
{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
apply for a core available on any socket, this function returns the id of the core, or return -1 when there is not any core available. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/CPUResource.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/CPUResource.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Create_col_list Struct Reference\par \pard\plain 
{\tc\tcl2 \v Create_col_list}
{\xe \v Create_col_list}
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b data}{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Create_database_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Create_database_stmt}
{\xe \v Create_database_stmt}
{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b create_type}{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b check}{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name}{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Create_def Struct Reference\par \pard\plain 
{\tc\tcl2 \v Create_def}
{\xe \v Create_def}
{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b deftype}{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name}{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b datatype}{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b col_atts}{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b col_list}{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Create_projection_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Create_projection_stmt}
{\xe \v Create_projection_stmt}
{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b tablename}{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b column_list}{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b partition_num}{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b partition_attribute_name}{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Create_select_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Create_select_stmt}
{\xe \v Create_select_stmt}
{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b ignore_replace}{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b temporary}{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b select_stmt}{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Create_table_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Create_table_stmt}
{\xe \v Create_table_stmt}
{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b create_type}{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b check}{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name1}{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name2}{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b list}{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b select_stmt}{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Createindex_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Createindex_stmt}
{\xe \v Createindex_stmt}
{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b index_att}{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b index_name}{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b index_type}{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b table_name}{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b index_col_name}{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CreateTableMessage Class Reference\par \pard\plain 
{\tc\tcl2 \v CreateTableMessage}
{\xe \v CreateTableMessage}
{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CreateTableMessage} (unsigned table_id, std::vector< data_type > type_list){\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b CreateTableMessage} {\b deserializae} ({\b Message256} message){\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b Message256} {\b serializae} ({\b CreateTableMessage} input){\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b table_id}{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< data_type > {\b type_list}{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CreateTableRespond Class Reference\par \pard\plain 
{\tc\tcl2 \v CreateTableRespond}
{\xe \v CreateTableRespond}
{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CreateTableRespond} (bool result){\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b CreateTableRespond} {\b deserialize} ({\b Message256} message){\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b Message256} {\b serialize} ({\b CreateTableRespond} input){\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b result}{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSBPlusTree< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v CSBPlusTree< T >}
{\xe \v CSBPlusTree< T >}
{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b BulkLoad} ({\b data_offset}< T > *aray, unsigned arayNo){\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

map< index_offset, vector\par
< index_offset > * > * {\b Search} (T key){\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

map< index_offset, vector\par
< index_offset > * > * {\b rangeQuery} (T lower_key, T upper_key){\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

map< index_offset, vector\par
< index_offset > * > * {\b rangeQuery} (T lower_key, comparison comp_lower, T upper_key, comparison comp_upper){\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Insert} ({\b data_offset}< T > data){\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Delete} (T key){\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b serialize} (FILE *filename){\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b deserialize} (FILE *filename){\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b printTree} (){\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b printDoubleLinkedList} (){\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNodeGroup}< T > * {\b leaf_header}{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNodeGroup}< T > * {\b leaf_tailer}{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b CCSBNode}< T > * {\b csb_root}{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b csb_depth}{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBPlusTree.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBPlusTree.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamHdfsScan::current_block Struct Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamHdfsScan::current_block}
{\xe \v ExpandableBlockStreamHdfsScan::current_block}
{\bkmkstart AAAAAAABZR}
{\bkmkend AAAAAAABZR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b file_index}{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b length}{\bkmkstart AAAAAAABZT}
{\bkmkend AAAAAAABZT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b base}{\bkmkstart AAAAAAABZU}
{\bkmkend AAAAAAABZU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b cursor}{\bkmkstart AAAAAAABZV}
{\bkmkend AAAAAAABZV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamHdfsScan.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Daemon Class Reference\par \pard\plain 
{\tc\tcl2 \v Daemon}
{\xe \v Daemon}
{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addRemoteCommand} (const {\b remote_command} &rc){\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b executed_result} {\b getExecutedResult} (){\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b Daemon} * {\b getInstance} (){\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void * {\b worker} (void *){\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Daemon/Daemon.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Daemon/Daemon.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
data__ Struct Reference\par \pard\plain 
{\tc\tcl2 \v data__}
{\xe \v data__}
{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

union \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ int {\b _int}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ float {\b _float}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ double {\b _double}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ unsigned long {\b _ulong}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ bool {\b _bool}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ short {\b _sint}\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b value}{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ExpressionItem.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
data_offset< T > Struct Template Reference\par \pard\plain 
{\tc\tcl2 \v data_offset< T >}
{\xe \v data_offset< T >}
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

T {\b _key}{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

index_offset {\b _block_off}{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

index_offset {\b _tuple_off}{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBPlusTree.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Datatype Struct Reference\par \pard\plain 
{\tc\tcl2 \v Datatype}
{\xe \v Datatype}
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b datatype}{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b length}{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b opt_uz}{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b opt_csc}{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b isbinary}{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b enum_list}{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Describe_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Describe_stmt}
{\xe \v Describe_stmt}
{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name}{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
disk_info Struct Reference\par \pard\plain 
{\tc\tcl2 \v disk_info}
{\xe \v disk_info}
{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b disk_info} (int allo, int used){\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b take} (int buget){\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b put} (int size){\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b initialize} (int capacity){\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b allocated_capacity}{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b used_capacity}{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/ResourceInfo.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DiskChunkReaderIteraror Class Reference\par \pard\plain 
{\tc\tcl2 \v DiskChunkReaderIteraror}
{\xe \v DiskChunkReaderIteraror}
{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
Inheritance diagram for DiskChunkReaderIteraror:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDiskChunkReaderIteraror.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b DiskChunkReaderIteraror} (const {\b ChunkID} &chunk_id, unsigned &chunk_size, const unsigned &block_size){\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b nextBlock} ({\b BlockStreamBase} *&block){\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b getNextBlockAccessor} ({\b block_accessor} *&ba){\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DiskStore Class Reference\par \pard\plain 
{\tc\tcl2 \v DiskStore}
{\xe \v DiskStore}
{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b DiskStore} (string rootDirs){\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b putValue} (string blockId, void *value){\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b getChunk} (string blockId){\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b remove} (string blockId){\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b contains} (string blockId){\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getSize} (string blockId){\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b getFile} (string blockId){\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b createDirs} (string rootDirs){\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/DiskStore.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/DiskStore.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DMLTestPOC1Partition Class Reference\par \pard\plain 
{\tc\tcl2 \v DMLTestPOC1Partition}
{\xe \v DMLTestPOC1Partition}
{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
Inheritance diagram for DMLTestPOC1Partition:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDMLTestPOC1Partition.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b SetUpTestCase} (){\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b TearDownTestCase} (){\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Test/TestSuit/sql_query_test.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Do_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Do_stmt}
{\xe \v Do_stmt}
{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b data}{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dropdatabase_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Dropdatabase_stmt}
{\xe \v Dropdatabase_stmt}
{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b droptype}{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b check}{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name}{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dropindex_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Dropindex_stmt}
{\xe \v Dropindex_stmt}
{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b index_name}{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b table_name}{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Droptable_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Droptable_stmt}
{\xe \v Droptable_stmt}
{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b is_temp}{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b is_check}{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b option_rc}{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b table_list}{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DynamicBlockBuffer Class Reference\par \pard\plain 
{\tc\tcl2 \v DynamicBlockBuffer}
{\xe \v DynamicBlockBuffer}
{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
\par
{
{\f2 #include <DynamicBlockBuffer.h>}}\par
Inheritance diagram for DynamicBlockBuffer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classDynamicBlockBuffer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Iterator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b DynamicBlockBuffer} (const {\b DynamicBlockBuffer} &r){\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b appendNewBlock} ({\b BlockStreamBase} *new_block){\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b atomicAppendNewBlock} ({\b BlockStreamBase} *new_block){\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b getBlock} (unsigned index) const {\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Iterator} {\b createIterator} () const {\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getNumberOfBlocks} (){\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b destory} (){\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b getNumberOftuples} () const {\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A container which buffers serialized blocks. The number of blocks in the buffer is not known when constructing and is growing dynamically on the fly. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/DynamicBlockBuffer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/DynamicBlockBuffer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ElasticIteratorModelTest Class Reference\par \pard\plain 
{\tc\tcl2 \v ElasticIteratorModelTest}
{\xe \v ElasticIteratorModelTest}
{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
Inheritance diagram for ElasticIteratorModelTest:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classElasticIteratorModelTest.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b SetConnectionInfo} (std::string host, int port){\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b SetConnectionPort} (int port){\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b SetConnectionIp} (std::string Ip){\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Client} {\b client_}{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static std::string {\b ip_}{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static int {\b port_}{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b SetUp} (){\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b TearDown} (){\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Test/iterator/elastic_iterator_model_test.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PerformanceInfo::entry Struct Reference\par \pard\plain 
{\tc\tcl2 \v PerformanceInfo::entry}
{\xe \v PerformanceInfo::entry}
{\bkmkstart AAAAAAADOP}
{\bkmkend AAAAAAADOP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isUpdateToDate} (){\bkmkstart AAAAAAADOQ}
{\bkmkend AAAAAAADOQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b performance}{\bkmkstart AAAAAAADOR}
{\bkmkend AAAAAAADOR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

timestamp {\b last_update}{\bkmkstart AAAAAAADOS}
{\bkmkend AAAAAAADOS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ExpandedThreadTracker.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ExpandedThreadTracker.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InsertOptimizedHashTable::entry Struct Reference\par \pard\plain 
{\tc\tcl2 \v InsertOptimizedHashTable::entry}
{\xe \v InsertOptimizedHashTable::entry}
{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b entry} (void *p){\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b pointer}{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/InsertOptimizedHashTable.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
enum_list Struct Reference\par \pard\plain 
{\tc\tcl2 \v enum_list}
{\xe \v enum_list}
{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b s}{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Environment Class Reference\par \pard\plain 
{\tc\tcl2 \v Environment}
{\xe \v Environment}
{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b getIp} (){\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPort} (){\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b AdaptiveEndPoint} * {\b getEndPoint} (){\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExchangeTracker} * {\b getExchangeTracker} (){\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ResourceManagerMaster} * {\b getResourceManagerMaster} (){\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b InstanceResourceManager} * {\b getResourceManagerSlave} (){\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

NodeID {\b getNodeID} () const {\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Catalog} * {\b getCatalog} () const {\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ThreadPool} * {\b getThreadPool} () const {\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b IteratorExecutorSlave} * {\b getIteratorExecutorSlave} () const {\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Environment} (bool ismaster=false)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b getIp} (){\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPort} (){\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b AdaptiveEndPoint} * {\b getEndPoint} (){\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExchangeTracker} * {\b getExchangeTracker} (){\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ResourceManagerMaster} * {\b getResourceManagerMaster} (){\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b InstanceResourceManager} * {\b getResourceManagerSlave} (){\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

NodeID {\b getNodeID} () const {\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Catalog} * {\b getCatalog} () const {\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ThreadPool} * {\b getThreadPool} () const {\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b IteratorExecutorSlave} * {\b getIteratorExecutorSlave} () const {\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Environment} (bool ismaster=false){\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b Environment} * {\b getInstance} (bool ismaster=0){\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b Environment} * {\b getInstance} (bool ismaster=0){\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Environment\:Environment}
{\xe \v Environment\:Environment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Environment::Environment (bool {\i ismaster} = {\f2 false})}}
\par
{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO: DO something in {\b AdaptiveEndPoint} such that the construction function does not return until the connection is completed. If so, the following sleep() dose not needed.\par
This is done in Aug.18 by Li :)\par
}{
References Logging::elog().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Environment.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
install/include/Environment.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Environment.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EnvironmentLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v EnvironmentLogging}
{\xe \v EnvironmentLogging}
{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
Inheritance diagram for EnvironmentLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classEnvironmentLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b log} (const char *format,...){\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b elog} (const char *format,...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v elog\:EnvironmentLogging}
{\xe \v EnvironmentLogging\:elog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EnvironmentLogging::elog (const char * {\i format},  {\i ...}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
print the error information to stderr. \par
}{
Implements {\b Logging} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ErrorNoTest Class Reference\par \pard\plain 
{\tc\tcl2 \v ErrorNoTest}
{\xe \v ErrorNoTest}
{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
Inheritance diagram for ErrorNoTest:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classErrorNoTest.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b SetUpTestCase} (){\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b TearDownTestCase} (){\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Test/common/errno_test.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Estimation Class Reference\par \pard\plain 
{\tc\tcl2 \v Estimation}
{\xe \v Estimation}
{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsigned long {\b estEqualOper} ({\b AttributeID} attrID, void *para)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsigned long {\b estRangeOper} ({\b AttributeID} attrID, void *lowPara, void *upperPara)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static unsigned long {\b estEqualJoin} ({\b AttributeID} attrID1, {\b AttributeID} attrID2){\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v estEqualOper\:Estimation}
{\xe \v Estimation\:estEqualOper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long Estimation::estEqualOper ({\b AttributeID} {\i attrID}, void * {\i para}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'E5\'A6\'82\'E6\'9E\'9C\'E6\'89\'BE\'E5\'88\'B0\'E6\'9C\'80\'E5\'B0\'8F\'E7\'9A\'84 i \'E6\'BB\'A1\'E8\'B6\'B3 para < valueList[i]\'EF\'BC\'8C\'E9\'82\'A3\'E4\'B9\'88para\'E5\'BF\'85\'E7\'84\'B6\'E8\'90\'BD\'E5\'9C\'A8i-1\'E5\'8F\'B7bucket\'E4\'B8\'AD\'E3\'80\'82 \'E5\'A6\'82\'E6\'9E\'9C\'E5\'A7\'8B\'E7\'BB\'88\'E6\'89\'BE\'E4\'B8\'8D\'E5\'88\'B0\'EF\'BC\'8C\'E9\'82\'A3\'E4\'B9\'88para\'E5\'BF\'85\'E7\'84\'B6\'E6\'98\'AF\'E6\'9C\'80\'E5\'A4\'A7\'E5\'80\'BC\'EF\'BC\'8C\'E8\'90\'BD\'E5\'9C\'A8\'E6\'9C\'80\'E5\'90\'8E\'E4\'B8\'80\'E4\'B8\'AAbucket\'E4\'B8\'AD\'E3\'80\'82\par
\'E6\'9C\'80\'E5\'A4\'A7\'E5\'80\'BC\'EF\'BC\'8C\'E5\'B1\'9E\'E4\'BA\'8E\'E4\'B8\'8A\'E4\'B8\'80\'E4\'B8\'AA\'E8\'BE\'B9\'E7\'95\'8C\'E3\'80\'82\'E5\'9B\'A0\'E4\'B8\'BA\'EF\'BC\'8C\'E5\'94\'AF\'E7\'8B\'AC\'E6\'9C\'80\'E5\'90\'8E\'E4\'B8\'80\'E4\'B8\'AAbucket\'E4\'B8\'A4\'E8\'BE\'B9\'E9\'83\'BD\'E6\'98\'AF\'E9\'97\'AD\'E5\'8C\'BA\'E9\'97\'B4\'E3\'80\'82\par
}}
{\xe \v estRangeOper\:Estimation}
{\xe \v Estimation\:estRangeOper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long Estimation::estRangeOper ({\b AttributeID} {\i attrID}, void * {\i lowPara}, void * {\i upperPara}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
assume both lowPara and upperPara is legal lowPara: upperPara: range is used with < and >, instead of = for <=, it decomposed into < and = \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/stat/Estimation.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/stat/Estimation.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ttmath::ExceptionInfo Class Reference\par \pard\plain 
{\tc\tcl2 \v ttmath::ExceptionInfo}
{\xe \v ttmath::ExceptionInfo}
{\bkmkstart AAAAAAAFEO}
{\bkmkend AAAAAAAFEO}
\par
{
{\f2 #include <ttmathtypes.h>}}\par
Inheritance diagram for ttmath::ExceptionInfo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classttmath_1_1ExceptionInfo.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExceptionInfo} (const char *f, int l){\bkmkstart AAAAAAAFEP}
{\bkmkend AAAAAAAFEP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b Where} () const {\bkmkstart AAAAAAAFEQ}
{\bkmkend AAAAAAAFEQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a small class which is useful when compiling with gcc\par
object of this type holds the name and the line of a file in which the macro TTMATH_ASSERT or TTMATH_REFERENCE_ASSERT was used \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/types/ttmath/{\b ttmathtypes.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExchangeID Struct Reference\par \pard\plain 
{\tc\tcl2 \v ExchangeID}
{\xe \v ExchangeID}
{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExchangeID} (unsigned long long int exchange_id, unsigned partition_offset){\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} (const {\b ExchangeID} &r) const {\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long long int {\b exchange_id}{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b partition_offset}{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ids.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExchangeIteratorEagerLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v ExchangeIteratorEagerLogging}
{\xe \v ExchangeIteratorEagerLogging}
{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
Inheritance diagram for ExchangeIteratorEagerLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExchangeIteratorEagerLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExchangeIteratorEagerLowerLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v ExchangeIteratorEagerLowerLogging}
{\xe \v ExchangeIteratorEagerLowerLogging}
{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
Inheritance diagram for ExchangeIteratorEagerLowerLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExchangeIteratorEagerLowerLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExchangeIteratorSenderMaterialized Class Reference\par \pard\plain 
{\tc\tcl2 \v ExchangeIteratorSenderMaterialized}
{\xe \v ExchangeIteratorSenderMaterialized}
{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
Inheritance diagram for ExchangeIteratorSenderMaterialized:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExchangeIteratorSenderMaterialized.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExchangeTracker Class Reference\par \pard\plain 
{\tc\tcl2 \v ExchangeTracker}
{\xe \v ExchangeTracker}
{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b RegisterExchange} ({\b ExchangeID} exchange_id, std::string port){\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b LogoutExchange} (const {\b ExchangeID} &exchange_id){\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AskForSocketConnectionInfo} ({\b ExchangeID} exchange_id, NodeID target_id, {\b NodeAddress} &node_addr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b printAllExchangeId} () const {\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RegisterActor}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AskForSocketConnectionInfo\:ExchangeTracker}
{\xe \v ExchangeTracker\:AskForSocketConnectionInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ExchangeTracker::AskForSocketConnectionInfo ({\b ExchangeID} {\i exchange_id}, NodeID {\i target_id}, {\b NodeAddress} & {\i node_addr})}}
\par
{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO: In current version, the request is only tried once. In the future, the request should be sent repeatedly until the reply is received or the times of timeouts exceeds some threshold.\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v RegisterActor\:ExchangeTracker}
{\xe \v ExchangeTracker\:RegisterActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class RegisterActor{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RegisterActor \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/ExchangeTracker.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/ExchangeTracker.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExchangeTrackerLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v ExchangeTrackerLogging}
{\xe \v ExchangeTrackerLogging}
{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
Inheritance diagram for ExchangeTrackerLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExchangeTrackerLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b log} (const char *format,...){\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b elog} (const char *format,...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v elog\:ExchangeTrackerLogging}
{\xe \v ExchangeTrackerLogging\:elog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExchangeTrackerLogging::elog (const char * {\i format},  {\i ...}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
print the error information to stderr. \par
}{
Implements {\b Logging} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExectorFunction Class Reference\par \pard\plain 
{\tc\tcl2 \v ExectorFunction}
{\xe \v ExectorFunction}
{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static ExecFunc {\b operator_function} [DATA_TYPE_NUM][OPER_TYPE_NUM]{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static AvgDivide {\b avg_divide} [DATA_TYPE_NUM]{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/queryfunc.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/queryfunc.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
executed_result Struct Reference\par \pard\plain 
{\tc\tcl2 \v executed_result}
{\xe \v executed_result}
{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b status}{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b fd}{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ResultSet} * {\b result}{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b error_info}{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b info}{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Daemon/Daemon.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IteratorExecutorSlave::ExecuteIteratorActor Class Reference\par \pard\plain 
{\tc\tcl2 \v IteratorExecutorSlave::ExecuteIteratorActor}
{\xe \v IteratorExecutorSlave::ExecuteIteratorActor}
{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
Inheritance diagram for IteratorExecutorSlave::ExecuteIteratorActor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classIteratorExecutorSlave_1_1ExecuteIteratorActor.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExecuteIteratorActor} ({\b IteratorExecutorSlave} *ies, Theron::Framework &framework, const char *const slaveID){\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/IteratorExecutorSlave.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/IteratorExecutorSlave.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Executing Class Reference\par \pard\plain 
{\tc\tcl2 \v Executing}
{\xe \v Executing}
{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b ResultSet} * {\b run_sql} (std::string sql, std::string &error){\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b run_sql} (const std::string &cmd, {\b ResultSet} *&result, bool &status, std::string &error_info, std::string &info, int fd){\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Daemon/Executing.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Daemon/Executing.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Exp_op Struct Reference\par \pard\plain 
{\tc\tcl2 \v Exp_op}
{\xe \v Exp_op}
{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Expression {\b expr}{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b op}{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ExpressionCalculator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandabilityShrinkability Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandabilityShrinkability}
{\xe \v ExpandabilityShrinkability}
{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
Inheritance diagram for ExpandabilityShrinkability:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpandabilityShrinkability.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Expand} ()=0{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Shrink} ()=0{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned {\b getDegreeOfParallelism} ()=0{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/ExpandabilityShrinkability.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/ExpandabilityShrinkability.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamBuffer Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamBuffer}
{\xe \v ExpandableBlockStreamBuffer}
{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
Inheritance diagram for ExpandableBlockStreamBuffer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpandableBlockStreamBuffer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExpandableBlockStreamBuffer} ({\b State}){\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Open} (const PartitionOffset &part_off=0){\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamBuffer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamBuffer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamExchangeEpoll Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamExchangeEpoll}
{\xe \v ExpandableBlockStreamExchangeEpoll}
{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
Inheritance diagram for ExpandableBlockStreamExchangeEpoll:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpandableBlockStreamExchangeEpoll.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExpandableBlockStreamExchangeEpoll} ({\b State} state){\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Open} (const PartitionOffset &partition_offset=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Open\:ExpandableBlockStreamExchangeEpoll}
{\xe \v ExpandableBlockStreamExchangeEpoll\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ExpandableBlockStreamExchangeEpoll::Open (const PartitionOffset & {\i part_off} = {\f2 0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Because that boost::serialization will allocate an instance of this class when deserializing, and hence the following three virtual method cannot be pure. \par
}{
Reimplemented from {\b PhysicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamExchangeEpoll.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamExchangeEpoll.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamExchangeLowerEfficient Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamExchangeLowerEfficient}
{\xe \v ExpandableBlockStreamExchangeLowerEfficient}
{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
Inheritance diagram for ExpandableBlockStreamExchangeLowerEfficient:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpandableBlockStreamExchangeLowerEfficient.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExpandableBlockStreamExchangeLowerEfficient} ({\b State} state){\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Open} (const PartitionOffset &partition_index=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Next} ({\b BlockStreamBase} *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Close} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ExpandableBlockStreamExchangeEpoll}{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Close\:ExpandableBlockStreamExchangeLowerEfficient}
{\xe \v ExpandableBlockStreamExchangeLowerEfficient\:Close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ExpandableBlockStreamExchangeLowerEfficient::Close (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
free temporary space \par
}{
Implements {\b BlockStreamExchangeLowerBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Next\:ExpandableBlockStreamExchangeLowerEfficient}
{\xe \v ExpandableBlockStreamExchangeLowerEfficient\:Next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ExpandableBlockStreamExchangeLowerEfficient::Next ({\b BlockStreamBase} * ){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
if a blocks is obtained from child, we partition the tuples in the block.\par
for each tuple in the newly obtained block, insert the tuple to one partitioned block according to the partition hash value\par
calculate the tuple size for the current tuple\par
insert the tuple into the corresponding partitioned block\par
if the destination block is full, we insert the block into the buffer\par
thread arriving here means that the space for the tuple is successfully allocated, so we copy the tuple\par
the child iterator is exhausted. We add the current block stream block into the buffer, but it's only for hash mode, not for broadcast mode.\par
The following lines send an empty block to the upper, indicating that all the data from current sent has been transmit to the uppers.\par
waiting until all the block in the buffer has been transformed to the uppers.\par
}{
Implements {\b BlockStreamExchangeLowerBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Open\:ExpandableBlockStreamExchangeLowerEfficient}
{\xe \v ExpandableBlockStreamExchangeLowerEfficient\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ExpandableBlockStreamExchangeLowerEfficient::Open (const PartitionOffset & {\i partition_index} = {\f2 0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
initialize the block stream that is used to accumulate the block obtained by calling child iterator's next()\par
buffer stores the tuples received from child iterator. Note the tuples are partitioned and stored.\par
the temporary block that is used to transfer a block from partitioned data buffer into sending buffer.\par
Initialize the buffer that is used to hold the blocks being sent. There are nuppers block, each corresponding to a merger.\par
Initialized the temporary block to hold the serialized block stream.\par
Initialize the blocks that are used to accumulate the tuples from child so that the insertion to the buffer can be conducted at the granularity of blocks rather than tuples.\par
connect to all the mergers\par
create the sender thread \par
}{
Implements {\b BlockStreamExchangeLowerBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References Logging::elog().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamExchangeLowerEfficient.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamExchangeLowerEfficient.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamExchangeLowerMaterialized Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamExchangeLowerMaterialized}
{\xe \v ExpandableBlockStreamExchangeLowerMaterialized}
{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
Inheritance diagram for ExpandableBlockStreamExchangeLowerMaterialized:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpandableBlockStreamExchangeLowerMaterialized.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExpandableBlockStreamExchangeLowerMaterialized} ({\b State} state){\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Open} (const PartitionOffset &part_off=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Next} ({\b BlockStreamBase} *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ExpandableBlockStreamExchangeEpoll}{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Next\:ExpandableBlockStreamExchangeLowerMaterialized}
{\xe \v ExpandableBlockStreamExchangeLowerMaterialized\:Next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ExpandableBlockStreamExchangeLowerMaterialized::Next ({\b BlockStreamBase} * ){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a new block is obtained from child iterator\par
for each tuple in the newly obtained block, insert the tuple to one partitioned block according to the partition hash value\par
calculate the tuple size for the current tuple\par
insert the tuple into the corresponding partitioned block\par
if the destination block is full, we insert the block into the buffer\par
thread arriving here means that the space for the tuple is successfully allocated, so we copy the tuple \par
}{
Implements {\b BlockStreamExchangeLowerBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References PartitionedBlockBuffer::insertBlockToPartitionedList().}\par
}
{\xe \v Open\:ExpandableBlockStreamExchangeLowerMaterialized}
{\xe \v ExpandableBlockStreamExchangeLowerMaterialized\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ExpandableBlockStreamExchangeLowerMaterialized::Open (const PartitionOffset & {\i part_off} = {\f2 0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get the number of mergers\par
set the child exhausted bit\par
socket fd for mergers, each corresponding to one merger.\par
fd for local partition on disk.\par
initialize a temporary structure that holds the space for calling child's next()\par
initialize a block that is used for sending\par
initialize a block that is used as the intermediate structure for block serialization\par
initialize a partitioned block streams to accumulate the tuples obtained from child iterator's next()\par
connect to the mergers\par
create the sender thread \par
}{
Implements {\b BlockStreamExchangeLowerBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamExchangeLowerMaterialized.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamExchangeLowerMaterialized.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamFilter Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamFilter}
{\xe \v ExpandableBlockStreamFilter}
{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
Inheritance diagram for ExpandableBlockStreamFilter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpandableBlockStreamFilter.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b filter_thread_context}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b remaining_block}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExpandableBlockStreamFilter} ({\b State} state){\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Open} (const PartitionOffset &part_off)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Open\:ExpandableBlockStreamFilter}
{\xe \v ExpandableBlockStreamFilter\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ExpandableBlockStreamFilter::Open (const PartitionOffset & {\i part_off}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Because that boost::serialization will allocate an instance of this class when deserializing, and hence the following three virtual method cannot be pure. \par
}{
Reimplemented from {\b PhysicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamFilter.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamFilter.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamHdfsScan Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamHdfsScan}
{\xe \v ExpandableBlockStreamHdfsScan}
{\bkmkstart AAAAAAABZH}
{\bkmkend AAAAAAABZH}
Inheritance diagram for ExpandableBlockStreamHdfsScan:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpandableBlockStreamHdfsScan.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b allocated_block}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b current_block}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExpandableBlockStreamHdfsScan} ({\b State} state){\bkmkstart AAAAAAABZI}
{\bkmkend AAAAAAABZI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Open} (const PartitionOffset &part_off){\bkmkstart AAAAAAABZJ}
{\bkmkend AAAAAAABZJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAABZK}
{\bkmkend AAAAAAABZK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAABZL}
{\bkmkend AAAAAAABZL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAABZM}
{\bkmkend AAAAAAABZM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABZN}
{\bkmkend AAAAAAABZN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamHdfsScan.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamHdfsScan.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamProjectionScan Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamProjectionScan}
{\xe \v ExpandableBlockStreamProjectionScan}
{\bkmkstart AAAAAAACAA}
{\bkmkend AAAAAAACAA}
Inheritance diagram for ExpandableBlockStreamProjectionScan:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpandableBlockStreamProjectionScan.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b allocated_block}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b scan_thread_context}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExpandableBlockStreamProjectionScan} ({\b State} state){\bkmkstart AAAAAAACAB}
{\bkmkend AAAAAAACAB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Open} (const PartitionOffset &partition_offset=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAACAC}
{\bkmkend AAAAAAACAC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAACAD}
{\bkmkend AAAAAAACAD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAACAE}
{\bkmkend AAAAAAACAE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACAF}
{\bkmkend AAAAAAACAF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Open\:ExpandableBlockStreamProjectionScan}
{\xe \v ExpandableBlockStreamProjectionScan\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ExpandableBlockStreamProjectionScan::Open (const PartitionOffset & {\i part_off} = {\f2 0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAG}
{\bkmkend AAAAAAACAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Because that boost::serialization will allocate an instance of this class when deserializing, and hence the following three virtual method cannot be pure. \par
}{
Reimplemented from {\b PhysicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamProjectionScan.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamProjectionScan.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamRandomDiskAccess Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamRandomDiskAccess}
{\xe \v ExpandableBlockStreamRandomDiskAccess}
{\bkmkstart AAAAAAACAV}
{\bkmkend AAAAAAACAV}
Inheritance diagram for ExpandableBlockStreamRandomDiskAccess:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpandableBlockStreamRandomDiskAccess.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b remaining_block}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExpandableBlockStreamRandomDiskAccess} ({\b State} state){\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Open} (const PartitionOffset &part_off){\bkmkstart AAAAAAACAX}
{\bkmkend AAAAAAACAX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamRandomDiskAccess.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamRandomDiskAccess.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamRandomMemAccess Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamRandomMemAccess}
{\xe \v ExpandableBlockStreamRandomMemAccess}
{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
Inheritance diagram for ExpandableBlockStreamRandomMemAccess:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpandableBlockStreamRandomMemAccess.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b remaining_block}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExpandableBlockStreamRandomMemAccess} ({\b State} state){\bkmkstart AAAAAAACBK}
{\bkmkend AAAAAAACBK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Open} (const PartitionOffset &part_off=0){\bkmkstart AAAAAAACBL}
{\bkmkend AAAAAAACBL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAACBM}
{\bkmkend AAAAAAACBM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAACBN}
{\bkmkend AAAAAAACBN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamRandomMemAccess.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamRandomMemAccess.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamSingleColumnScan Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamSingleColumnScan}
{\xe \v ExpandableBlockStreamSingleColumnScan}
{\bkmkstart AAAAAAACBX}
{\bkmkend AAAAAAACBX}
Inheritance diagram for ExpandableBlockStreamSingleColumnScan:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpandableBlockStreamSingleColumnScan.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b allocated_block}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExpandableBlockStreamSingleColumnScan} ({\b State} state){\bkmkstart AAAAAAACBY}
{\bkmkend AAAAAAACBY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Open} (const PartitionOffset &part_off=0){\bkmkstart AAAAAAACBZ}
{\bkmkend AAAAAAACBZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAACCA}
{\bkmkend AAAAAAACCA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAACCB}
{\bkmkend AAAAAAACCB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACCC}
{\bkmkend AAAAAAACCC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamSingleColumnScan.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamSingleColumnScan.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamSingleColumnScanDisk Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamSingleColumnScanDisk}
{\xe \v ExpandableBlockStreamSingleColumnScanDisk}
{\bkmkstart AAAAAAACCR}
{\bkmkend AAAAAAACCR}
Inheritance diagram for ExpandableBlockStreamSingleColumnScanDisk:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpandableBlockStreamSingleColumnScanDisk.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExpandableBlockStreamSingleColumnScanDisk} ({\b State} state){\bkmkstart AAAAAAACCS}
{\bkmkend AAAAAAACCS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Open} (const PartitionOffset &part_off=0){\bkmkstart AAAAAAACCT}
{\bkmkend AAAAAAACCT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAACCU}
{\bkmkend AAAAAAACCU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAACCV}
{\bkmkend AAAAAAACCV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACCW}
{\bkmkend AAAAAAACCW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamSingleColumnScanDisk.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamSingleColumnScanDisk.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandedThreadTracker Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandedThreadTracker}
{\xe \v ExpandedThreadTracker}
{\bkmkstart AAAAAAACDC}
{\bkmkend AAAAAAACDC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExpandedThreadTracker} ({\b ExpandabilityShrinkability} *expand_shrink){\bkmkstart AAAAAAACDD}
{\bkmkend AAAAAAACDD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PerformanceInfo} & {\b getPerformanceInfo} (){\bkmkstart AAAAAAACDE}
{\bkmkend AAAAAAACDE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ExpandedThreadTracker.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ExpandedThreadTracker.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpanderContext Struct Reference\par \pard\plain 
{\tc\tcl2 \v ExpanderContext}
{\xe \v ExpanderContext}
{\bkmkstart AAAAAAACDF}
{\bkmkend AAAAAAACDF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamExpander} * {\b pthis}{\bkmkstart AAAAAAACDG}
{\bkmkend AAAAAAACDG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b semaphore} {\b sem}{\bkmkstart AAAAAAACDH}
{\bkmkend AAAAAAACDH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamExpander.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpanderTracker Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpanderTracker}
{\xe \v ExpanderTracker}
{\bkmkstart AAAAAAACDI}
{\bkmkend AAAAAAACDI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b registerNewExpandedThreadStatus} (expanded_thread_id id, ExpanderID exp_id){\bkmkstart AAAAAAACDJ}
{\bkmkend AAAAAAACDJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b deleteExpandedThreadStatus} (expanded_thread_id id){\bkmkstart AAAAAAACDK}
{\bkmkend AAAAAAACDK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isExpandedThreadCallBack} (expanded_thread_id id){\bkmkstart AAAAAAACDL}
{\bkmkend AAAAAAACDL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b callbackExpandedThread} (expanded_thread_id id){\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b addNewStageEndpoint} (expanded_thread_id, {\b LocalStageEndPoint}){\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PerformanceInfo} * {\b getPerformanceInfo} (expanded_thread_id){\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ExpanderID {\b registerNewExpander} ({\b MonitorableBuffer} *buffer, {\b ExpandabilityShrinkability} *expand_shrink){\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b unregisterExpander} (ExpanderID expander_id){\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b trackExpander} (ExpanderID id) const {\bkmkstart AAAAAAACDR}
{\bkmkend AAAAAAACDR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b ExpanderTracker} * {\b getInstance} (){\bkmkstart AAAAAAACDS}
{\bkmkend AAAAAAACDS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static segment_status {\b getSegmentStatus} ({\b local_stage} &){\bkmkstart AAAAAAACDT}
{\bkmkend AAAAAAACDT}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::map< expanded_thread_id, \par
ExpandedThreadStatus > {\b id_to_status_}{\bkmkstart AAAAAAACDU}
{\bkmkend AAAAAAACDU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Logging} * {\b log_}{\bkmkstart AAAAAAACDV}
{\bkmkend AAAAAAACDV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

pthread_t {\b monitor_thread_id_}{\bkmkstart AAAAAAACDW}
{\bkmkend AAAAAAACDW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/ExpanderTracker.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/ExpanderTracker.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpanderTrackerLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpanderTrackerLogging}
{\xe \v ExpanderTrackerLogging}
{\bkmkstart AAAAAAACDX}
{\bkmkend AAAAAAACDX}
Inheritance diagram for ExpanderTrackerLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpanderTrackerLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b log} (const char *format,...){\bkmkstart AAAAAAACDY}
{\bkmkend AAAAAAACDY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b elog} (const char *format,...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v elog\:ExpanderTrackerLogging}
{\xe \v ExpanderTrackerLogging\:elog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExpanderTrackerLogging::elog (const char * {\i format},  {\i ...}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDZ}
{\bkmkend AAAAAAACDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
print the error information to stderr. \par
}{
Implements {\b Logging} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
decimal::ExportSerializeOutput Class Reference\par \pard\plain 
{\tc\tcl2 \v decimal::ExportSerializeOutput}
{\xe \v decimal::ExportSerializeOutput}
{\bkmkstart AAAAAAAEPL}
{\bkmkend AAAAAAAEPL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExportSerializeOutput} (void *buffer, size_t capacity){\bkmkstart AAAAAAAEPM}
{\bkmkend AAAAAAAEPM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b writeBinaryString} (const void *value, size_t length){\bkmkstart AAAAAAAEPN}
{\bkmkend AAAAAAAEPN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b assureExpand} (size_t next_write){\bkmkstart AAAAAAAEPO}
{\bkmkend AAAAAAAEPO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b position} (std::size_t pos){\bkmkstart AAAAAAAEPP}
{\bkmkend AAAAAAAEPP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b buffer_}{\bkmkstart AAAAAAAEPQ}
{\bkmkend AAAAAAAEPQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

size_t {\b position_}{\bkmkstart AAAAAAAEPR}
{\bkmkend AAAAAAAEPR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

size_t {\b capacity_}{\bkmkstart AAAAAAAEPS}
{\bkmkend AAAAAAAEPS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/types/ExportSerializeIo.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Expr Struct Reference\par \pard\plain 
{\tc\tcl2 \v Expr}
{\xe \v Expr}
{\bkmkstart AAAAAAACEA}
{\bkmkend AAAAAAACEA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACEB}
{\bkmkend AAAAAAACEB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b data}{\bkmkstart AAAAAAACEC}
{\bkmkend AAAAAAACEC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Expr_cal Struct Reference\par \pard\plain 
{\tc\tcl2 \v Expr_cal}
{\xe \v Expr_cal}
{\bkmkstart AAAAAAACED}
{\bkmkend AAAAAAACED}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACEE}
{\bkmkend AAAAAAACEE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b str}{\bkmkstart AAAAAAACEF}
{\bkmkend AAAAAAACEF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const char * {\b sign}{\bkmkstart AAAAAAACEG}
{\bkmkend AAAAAAACEG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b parameter}{\bkmkstart AAAAAAACEH}
{\bkmkend AAAAAAACEH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b cmp}{\bkmkstart AAAAAAACEI}
{\bkmkend AAAAAAACEI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b lnext}{\bkmkstart AAAAAAACEJ}
{\bkmkend AAAAAAACEJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b rnext}{\bkmkstart AAAAAAACEK}
{\bkmkend AAAAAAACEK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Expr_func Struct Reference\par \pard\plain 
{\tc\tcl2 \v Expr_func}
{\xe \v Expr_func}
{\bkmkstart AAAAAAACEL}
{\bkmkend AAAAAAACEL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACEM}
{\bkmkend AAAAAAACEM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b str}{\bkmkstart AAAAAAACEN}
{\bkmkend AAAAAAACEN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b funname}{\bkmkstart AAAAAAACEO}
{\bkmkend AAAAAAACEO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b args}{\bkmkstart AAAAAAACEP}
{\bkmkend AAAAAAACEP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b parameter1}{\bkmkstart AAAAAAACEQ}
{\bkmkend AAAAAAACEQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b parameter2}{\bkmkstart AAAAAAACER}
{\bkmkend AAAAAAACER}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAACES}
{\bkmkend AAAAAAACES}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Expr_list Struct Reference\par \pard\plain 
{\tc\tcl2 \v Expr_list}
{\xe \v Expr_list}
{\bkmkstart AAAAAAACET}
{\bkmkend AAAAAAACET}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACEU}
{\bkmkend AAAAAAACEU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b data}{\bkmkstart AAAAAAACEV}
{\bkmkend AAAAAAACEV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAACEW}
{\bkmkend AAAAAAACEW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Expr_list_header Struct Reference\par \pard\plain 
{\tc\tcl2 \v Expr_list_header}
{\xe \v Expr_list_header}
{\bkmkstart AAAAAAACEX}
{\bkmkend AAAAAAACEX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACEY}
{\bkmkend AAAAAAACEY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b header}{\bkmkstart AAAAAAACEZ}
{\bkmkend AAAAAAACEZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b tail}{\bkmkstart AAAAAAACFA}
{\bkmkend AAAAAAACFA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
express_operator Struct Reference\par \pard\plain 
{\tc\tcl2 \v express_operator}
{\xe \v express_operator}
{\bkmkstart AAAAAAACFB}
{\bkmkend AAAAAAACFB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set} (op_type tp, unsigned number_of_parameter=0){\bkmkstart AAAAAAACFC}
{\bkmkend AAAAAAACFC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

op_type {\b op_}{\bkmkstart AAAAAAACFD}
{\bkmkend AAAAAAACFD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b num_of_parameter}{\bkmkstart AAAAAAACFE}
{\bkmkend AAAAAAACFE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ExpressionItem.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpressionCalculator Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpressionCalculator}
{\xe \v ExpressionCalculator}
{\bkmkstart AAAAAAACFF}
{\bkmkend AAAAAAACFF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b calcuate} (Expression &exp, {\b ExpressionItem} &result){\bkmkstart AAAAAAACFG}
{\bkmkend AAAAAAACFG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b calcualte} (Expression &exp, ExpressionItemStack &stack){\bkmkstart AAAAAAACFH}
{\bkmkend AAAAAAACFH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b compute} ({\b ExpressionItem} operator_item, ExpressionItemStack &stack){\bkmkstart AAAAAAACFI}
{\bkmkend AAAAAAACFI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b computes} ({\b ExpressionItem} operator_item, ExpressionItemStack &stack){\bkmkstart AAAAAAACFJ}
{\bkmkend AAAAAAACFJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static data_type {\b getOutputType} (vector< {\b ExpressionItem} > &exp){\bkmkstart AAAAAAACFK}
{\bkmkend AAAAAAACFK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b column_type} {\b getOutputType_} (vector< {\b ExpressionItem} > &exp){\bkmkstart AAAAAAACFL}
{\bkmkend AAAAAAACFL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ExpressionCalculator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ExpressionCalculator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpressionItem Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpressionItem}
{\xe \v ExpressionItem}
{\bkmkstart AAAAAAACFM}
{\bkmkend AAAAAAACFM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ItemType} \{ {\b const_type}, 
{\b variable_type}, 
{\b operator_type}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print} (){\bkmkstart AAAAAAACFN}
{\bkmkend AAAAAAACFN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print_value} (){\bkmkstart AAAAAAACFO}
{\bkmkend AAAAAAACFO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setValue} (void *, data_type){\bkmkstart AAAAAAACFP}
{\bkmkend AAAAAAACFP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setData} ({\b data__} &){\bkmkstart AAAAAAACFQ}
{\bkmkend AAAAAAACFQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setData} ({\b data__} &, data_type){\bkmkstart AAAAAAACFR}
{\bkmkend AAAAAAACFR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setIntValue} (const char *){\bkmkstart AAAAAAACFS}
{\bkmkend AAAAAAACFS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setIntValue} (int){\bkmkstart AAAAAAACFT}
{\bkmkend AAAAAAACFT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setFloatValue} (const char *){\bkmkstart AAAAAAACFU}
{\bkmkend AAAAAAACFU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setFloatValue} (float &){\bkmkstart AAAAAAACFV}
{\bkmkend AAAAAAACFV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setDoubleValue} (const char *){\bkmkstart AAAAAAACFW}
{\bkmkend AAAAAAACFW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setDoubleValue} (double &){\bkmkstart AAAAAAACFX}
{\bkmkend AAAAAAACFX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setULongValue} (const char *){\bkmkstart AAAAAAACFY}
{\bkmkend AAAAAAACFY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setULongValue} (unsigned long){\bkmkstart AAAAAAACFZ}
{\bkmkend AAAAAAACFZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setStringValue} (std::string){\bkmkstart AAAAAAACGA}
{\bkmkend AAAAAAACGA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setStringValue} (const char *str){\bkmkstart AAAAAAACGB}
{\bkmkend AAAAAAACGB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setVariable} (const char *, const char *){\bkmkstart AAAAAAACGC}
{\bkmkend AAAAAAACGC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setVariable} (const char *){\bkmkstart AAAAAAACGD}
{\bkmkend AAAAAAACGD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setDecimalValue} (const char *){\bkmkstart AAAAAAACGE}
{\bkmkend AAAAAAACGE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setOperator} (const char *){\bkmkstart AAAAAAACGF}
{\bkmkend AAAAAAACGF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setDateValue} (const char *){\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setDatetimeValue} (const char *){\bkmkstart AAAAAAACGH}
{\bkmkend AAAAAAACGH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setTimeValue} (const char *){\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setBooleanValue} (bool){\bkmkstart AAAAAAACGJ}
{\bkmkend AAAAAAACGJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setSmallIntValue} (short &){\bkmkstart AAAAAAACGK}
{\bkmkend AAAAAAACGK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAACGL}
{\bkmkend AAAAAAACGL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b getOperatorName} () const {\bkmkstart AAAAAAACGM}
{\bkmkend AAAAAAACGM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b getType} (const char *type_str){\bkmkstart AAAAAAACGN}
{\bkmkend AAAAAAACGN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

union \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b variable} {\b var}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b data__} {\b data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b express_operator} {\b op}\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b content}{\bkmkstart AAAAAAACGO}
{\bkmkend AAAAAAACGO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ItemType {\b type}{\bkmkstart AAAAAAACGP}
{\bkmkend AAAAAAACGP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

date {\b _date}{\bkmkstart AAAAAAACGQ}
{\bkmkend AAAAAAACGQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

time_duration {\b _time}{\bkmkstart AAAAAAACGR}
{\bkmkend AAAAAAACGR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ptime {\b _datetime}{\bkmkstart AAAAAAACGS}
{\bkmkend AAAAAAACGS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b NValue} {\b _decimal}{\bkmkstart AAAAAAACGT}
{\bkmkend AAAAAAACGT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b _string}{\bkmkstart AAAAAAACGU}
{\bkmkend AAAAAAACGU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b item_name}{\bkmkstart AAAAAAACGV}
{\bkmkend AAAAAAACGV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

data_type {\b return_type}{\bkmkstart AAAAAAACGW}
{\bkmkend AAAAAAACGW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b size}{\bkmkstart AAAAAAACGX}
{\bkmkend AAAAAAACGX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACGY}
{\bkmkend AAAAAAACGY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ExpressionItem.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ExpressionItem.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::FastWriter Class Reference\par \pard\plain 
{\tc\tcl2 \v Json::FastWriter}
{\xe \v Json::FastWriter}
{\bkmkstart AAAAAAAEZV}
{\bkmkend AAAAAAAEZV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Outputs a {\b Value} in {\f2 JSON} format without formatting (not human friendly). }}\par
{
{\f2 #include <json.h>}}\par
Inheritance diagram for Json::FastWriter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classJson_1_1FastWriter.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b enableYAMLCompatibility} (){\bkmkstart AAAAAAAEZW}
{\bkmkend AAAAAAAEZW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b dropNullPlaceholders} (){\bkmkstart AAAAAAAEZX}
{\bkmkend AAAAAAAEZX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Drop the "null" string from the writer's output for nullValues. Strictly speaking, this is not valid JSON. But when the output is being fed to a browser's Javascript, it makes for smaller output and the browser can handle the output just fine. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b omitEndingLineFeed} (){\bkmkstart AAAAAAAEZY}
{\bkmkend AAAAAAAEZY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual std::string {\b write} (const {\b Value} &root){\bkmkstart AAAAAAAEZZ}
{\bkmkend AAAAAAAEZZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Outputs a {\b Value} in {\f2 JSON} format without formatting (not human friendly). \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The JSON document is written in a single line. It is not intended for 'human' consumption, but may be usefull to support feature such as RPC where bandwith is limited. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See Also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b Reader}, {\b Value} \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/json/json.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/jsoncpp.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::Features Class Reference\par \pard\plain 
{\tc\tcl2 \v Json::Features}
{\xe \v Json::Features}
{\bkmkstart AAAAAAAESI}
{\bkmkend AAAAAAAESI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration passed to reader and writer. This configuration object can be used to force the {\b Reader} or {\b Writer} to behave in a standard conforming way. }}\par
{
{\f2 #include <json.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Features} (){\bkmkstart AAAAAAAESJ}
{\bkmkend AAAAAAAESJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the configuration like JsonConfig::allFeatures;. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Features} {\b all} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A configuration that allows all features and assumes all strings are UTF-8. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Features} {\b strictMode} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A configuration that is strictly compatible with the JSON specification. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b allowComments_}{\bkmkstart AAAAAAAESK}
{\bkmkend AAAAAAAESK}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 true}  if comments are allowed. Default: {\f2 true} . }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b strictRoot_}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b allowDroppedNullPlaceholders_}{\bkmkstart AAAAAAAESL}
{\bkmkend AAAAAAAESL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 true}  if dropped null placeholders are allowed. Default: {\f2 false} . }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b allowNumericKeys_}{\bkmkstart AAAAAAAESM}
{\bkmkend AAAAAAAESM}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 true}  if numeric object key are allowed. Default: {\f2 false} . }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration passed to reader and writer. This configuration object can be used to force the {\b Reader} or {\b Writer} to behave in a standard conforming way. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v all\:Json::Features}
{\xe \v Json::Features\:all}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Features} Json::Features::all (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAESN}
{\bkmkend AAAAAAAESN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A configuration that allows all features and assumes all strings are UTF-8. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C & C++ comments are allowed\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Root object can be any JSON value\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Assumes {\b Value} strings are encoded in UTF-8 \par}
}{
References Features().}\par
}
{\xe \v strictMode\:Json::Features}
{\xe \v Json::Features\:strictMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Features} Json::Features::strictMode (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAESO}
{\bkmkend AAAAAAAESO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A configuration that is strictly compatible with the JSON specification. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Comments are forbidden.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Root object must be either an array or an object value.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Assumes {\b Value} strings are encoded in UTF-8 \par}
}{
References allowComments_, allowDroppedNullPlaceholders_, allowNumericKeys_, and strictRoot_.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v strictRoot_\:Json::Features}
{\xe \v Json::Features\:strictRoot_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Json::Features::strictRoot_}}
\par
{\bkmkstart AAAAAAAESP}
{\bkmkend AAAAAAAESP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 true}  if root must be either an array or an object value. Default: {\f2 false} . \par
}{
Referenced by Json::Reader::parse(), and strictMode().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/json/json.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/jsoncpp.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamFilter::filter_thread_context Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamFilter::filter_thread_context}
{\xe \v ExpandableBlockStreamFilter::filter_thread_context}
{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
Inheritance diagram for ExpandableBlockStreamFilter::filter_thread_context:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpandableBlockStreamFilter_1_1filter__thread__context.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b block_for_asking_}{\bkmkstart AAAAAAABYN}
{\bkmkend AAAAAAABYN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b temp_block_}{\bkmkstart AAAAAAABYO}
{\bkmkend AAAAAAABYO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase::BlockStreamTraverseIterator} * {\b block_stream_iterator_}{\bkmkstart AAAAAAABYP}
{\bkmkend AAAAAAABYP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b QNode} * > {\b thread_qual_}{\bkmkstart AAAAAAABYQ}
{\bkmkend AAAAAAABYQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamFilter.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamFilter.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
From_expr Struct Reference\par \pard\plain 
{\tc\tcl2 \v From_expr}
{\xe \v From_expr}
{\bkmkstart AAAAAAACGZ}
{\bkmkend AAAAAAACGZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACHA}
{\bkmkend AAAAAAACHA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b astablename}{\bkmkstart AAAAAAACHB}
{\bkmkend AAAAAAACHB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAACHC}
{\bkmkend AAAAAAACHC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
From_list Struct Reference\par \pard\plain 
{\tc\tcl2 \v From_list}
{\xe \v From_list}
{\bkmkstart AAAAAAACHD}
{\bkmkend AAAAAAACHD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACHE}
{\bkmkend AAAAAAACHE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b args}{\bkmkstart AAAAAAACHF}
{\bkmkend AAAAAAACHF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAACHG}
{\bkmkend AAAAAAACHG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b whcdn}{\bkmkstart AAAAAAACHH}
{\bkmkend AAAAAAACHH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FuncCallInfoData Struct Reference\par \pard\plain 
{\tc\tcl2 \v FuncCallInfoData}
{\xe \v FuncCallInfoData}
{\bkmkstart AAAAAAACHI}
{\bkmkend AAAAAAACHI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b nargs}{\bkmkstart AAAAAAACHJ}
{\bkmkend AAAAAAACHJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b args} [MAX_ARGS]{\bkmkstart AAAAAAACHK}
{\bkmkend AAAAAAACHK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b results}{\bkmkstart AAAAAAACHL}
{\bkmkend AAAAAAACHL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GeneralModuloFunction Class Reference\par \pard\plain 
{\tc\tcl2 \v GeneralModuloFunction}
{\xe \v GeneralModuloFunction}
{\bkmkstart AAAAAAACHM}
{\bkmkend AAAAAAACHM}
Inheritance diagram for GeneralModuloFunction:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classGeneralModuloFunction.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b GeneralModuloFunction} (const int &range, const int &min, const int &skipbits){\bkmkstart AAAAAAACHN}
{\bkmkend AAAAAAACHN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b get_partition_value} (const int &value) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned int {\b get_partition_value} (const unsigned long &value) const {\bkmkstart AAAAAAACHO}
{\bkmkend AAAAAAACHO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned int {\b get_partition_value} (const double &value) const {\bkmkstart AAAAAAACHP}
{\bkmkend AAAAAAACHP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

PartitionStyle {\b getPartitionFashion} () const {\bkmkstart AAAAAAACHQ}
{\bkmkend AAAAAAACHQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getNumberOfPartitions} () const {\bkmkstart AAAAAAACHR}
{\bkmkend AAAAAAACHR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACHS}
{\bkmkend AAAAAAACHS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_partition_value\:GeneralModuloFunction}
{\xe \v GeneralModuloFunction\:get_partition_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int GeneralModuloFunction::get_partition_value (const int & {\i value}) const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACHT}
{\bkmkend AAAAAAACHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the bucket number $n\in[0,k)$ for this {\i value} . {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{Value to hash. Must be within bounds. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Bucket number. \par
}}{
Implements {\b PartitionFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hash.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hash.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Groupby_expr Struct Reference\par \pard\plain 
{\tc\tcl2 \v Groupby_expr}
{\xe \v Groupby_expr}
{\bkmkstart AAAAAAACHU}
{\bkmkend AAAAAAACHU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACHV}
{\bkmkend AAAAAAACHV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b args}{\bkmkstart AAAAAAACHW}
{\bkmkend AAAAAAACHW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b sorttype}{\bkmkstart AAAAAAACHX}
{\bkmkend AAAAAAACHX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAACHY}
{\bkmkend AAAAAAACHY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Groupby_list Struct Reference\par \pard\plain 
{\tc\tcl2 \v Groupby_list}
{\xe \v Groupby_list}
{\bkmkstart AAAAAAACHZ}
{\bkmkend AAAAAAACHZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACIA}
{\bkmkend AAAAAAACIA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b groupbystring}{\bkmkstart AAAAAAACIB}
{\bkmkend AAAAAAACIB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAACIC}
{\bkmkend AAAAAAACIC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b with_rollup}{\bkmkstart AAAAAAACID}
{\bkmkend AAAAAAACID}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Having_list Struct Reference\par \pard\plain 
{\tc\tcl2 \v Having_list}
{\xe \v Having_list}
{\bkmkstart AAAAAAACIE}
{\bkmkend AAAAAAACIE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACIF}
{\bkmkend AAAAAAACIF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b havingstring}{\bkmkstart AAAAAAACIG}
{\bkmkend AAAAAAACIG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAACIH}
{\bkmkend AAAAAAACIH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HdfsBlock Struct Reference\par \pard\plain 
{\tc\tcl2 \v HdfsBlock}
{\xe \v HdfsBlock}
{\bkmkstart AAAAAAACII}
{\bkmkend AAAAAAACII}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b HdfsBlock} (void *add, int length){\bkmkstart AAAAAAACIJ}
{\bkmkend AAAAAAACIJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b hook}{\bkmkstart AAAAAAACIK}
{\bkmkend AAAAAAACIK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b length}{\bkmkstart AAAAAAACIL}
{\bkmkend AAAAAAACIL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/MemoryStore.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HDFSChunkReaderIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v HDFSChunkReaderIterator}
{\xe \v HDFSChunkReaderIterator}
{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
Inheritance diagram for HDFSChunkReaderIterator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHDFSChunkReaderIterator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b HDFSChunkReaderIterator} (const {\b ChunkID} &chunk_id, unsigned &chunk_size, const unsigned &block_size){\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b nextBlock} ({\b BlockStreamBase} *&block){\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b getNextBlockAccessor} ({\b block_accessor} *&ba){\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HdfsConnector Class Reference\par \pard\plain 
{\tc\tcl2 \v HdfsConnector}
{\xe \v HdfsConnector}
{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
Inheritance diagram for HdfsConnector:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHdfsConnector.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b HdfsConnector} (vector< vector< string > > hdfs_writepath){\bkmkstart AAAAAAACIR}
{\bkmkend AAAAAAACIR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b openFiles} (open_flag open_flag_){\bkmkstart AAAAAAACIS}
{\bkmkend AAAAAAACIS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b closeFiles} (){\bkmkstart AAAAAAACIT}
{\bkmkend AAAAAAACIT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b flush} (unsigned projection_offset, unsigned partition_offset, void *source, unsigned length){\bkmkstart AAAAAAACIU}
{\bkmkend AAAAAAACIU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Loader/Hdfsconnector.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Loader/Hdfsconnector.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HdfsLoader Class Reference\par \pard\plain 
{\tc\tcl2 \v HdfsLoader}
{\xe \v HdfsLoader}
{\bkmkstart AAAAAAACIV}
{\bkmkend AAAAAAACIV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b HdfsLoader} ({\b TableDescriptor} *tableDescriptor, const char c_separator= '|', const char r_separator= '\\n', open_flag open_flag_=APPENDD){\bkmkstart AAAAAAACIW}
{\bkmkend AAAAAAACIW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b HdfsLoader} (const char c_separator, const char r_separator, std::vector< std::string > file_name, {\b TableDescriptor} *tableDescriptor, open_flag open_flag_=CREATEE){\bkmkstart AAAAAAACIX}
{\bkmkend AAAAAAACIX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const char {\b get_c_separator} (){\bkmkstart AAAAAAACIY}
{\bkmkend AAAAAAACIY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const char {\b get_r_separator} (){\bkmkstart AAAAAAACIZ}
{\bkmkend AAAAAAACIZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< string > {\b get_file_list} (){\bkmkstart AAAAAAACJA}
{\bkmkend AAAAAAACJA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b insertRecords} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b load} (double sample_rate=1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b append} (std::string tuple_string){\bkmkstart AAAAAAACJB}
{\bkmkend AAAAAAACJB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b TableDescriptor} * {\b table_descriptor_}{\bkmkstart AAAAAAACJC}
{\bkmkend AAAAAAACJC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b row_id}{\bkmkstart AAAAAAACJD}
{\bkmkend AAAAAAACJD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b PartitionFunction} * > {\b partition_functin_list_}{\bkmkstart AAAAAAACJE}
{\bkmkend AAAAAAACJE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< int > {\b partition_key_index}{\bkmkstart AAAAAAACJF}
{\bkmkend AAAAAAACJF}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v insertRecords\:HdfsLoader}
{\xe \v HdfsLoader\:insertRecords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool HdfsLoader::insertRecords ()}}
\par
{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\i for testing begin} /\par
{\i for testing end} / \par
}{
Referenced by load().}\par
}
{\xe \v load\:HdfsLoader}
{\xe \v HdfsLoader\:load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool HdfsLoader::load (double {\i sample_rate} = {\f2 1})}}
\par
{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\i for testing begin} /\par
{\i for testing end} / \par
}{
References insertRecords(), and ProjectionBinding::UnbindingEntireProjection().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Loader/Hdfsloader.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Loader/Hdfsloader.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HeartBeatMessage Struct Reference\par \pard\plain 
{\tc\tcl2 \v HeartBeatMessage}
{\xe \v HeartBeatMessage}
{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b HeartBeatMessage} (const char *const text){\bkmkstart AAAAAAACJJ}
{\bkmkend AAAAAAACJJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\b mText} [HEARTBEAT_MESSAGE_LEN]{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HeartBeatRespond Struct Reference\par \pard\plain 
{\tc\tcl2 \v HeartBeatRespond}
{\xe \v HeartBeatRespond}
{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b HeartBeatRespond} (const char *const text){\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\b mText} [HEARTBEAT_MESSAGE_LEN]{\bkmkstart AAAAAAACJN}
{\bkmkend AAAAAAACJN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Histogram Class Reference\par \pard\plain 
{\tc\tcl2 \v Histogram}
{\xe \v Histogram}
{\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
Inheritance diagram for Histogram:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classHistogram.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Histogram} (unsigned bucketCnt){\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setTupleCount} (unsigned long tupleCount){\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setValueCount} (unsigned long valueCount){\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setMostCommonValues} (void **mcvList, double *seleList){\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setEquithDepthBound} (void **boundList, unsigned long *bucketValueCount){\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b getTupleCount} () const {\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b getValueCount} () const {\bkmkstart AAAAAAACJV}
{\bkmkend AAAAAAACJV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getBucketCnt} () const {\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} ({\b column_type} type){\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b destory} (){\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b Estimation}{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/stat/Statistic.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/stat/Statistic.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IDsGenerator Class Reference\par \pard\plain 
{\tc\tcl2 \v IDsGenerator}
{\xe \v IDsGenerator}
{\bkmkstart AAAAAAACKA}
{\bkmkend AAAAAAACKA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long long int {\b generateUniqueExchangeID} (){\bkmkstart AAAAAAACKB}
{\bkmkend AAAAAAACKB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ExpanderID {\b getUniqueExpanderID} (){\bkmkstart AAAAAAACKC}
{\bkmkend AAAAAAACKC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long long int {\b generateUniqueExchangeID} (){\bkmkstart AAAAAAACKB}
{\bkmkend AAAAAAACKB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ExpanderID {\b getUniqueExpanderID} (){\bkmkstart AAAAAAACKC}
{\bkmkend AAAAAAACKC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b IDsGenerator} * {\b getInstance} (){\bkmkstart AAAAAAACKD}
{\bkmkend AAAAAAACKD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b IDsGenerator} * {\b getInstance} (){\bkmkstart AAAAAAACKE}
{\bkmkend AAAAAAACKE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IDsGenerator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
install/include/IDsGenerator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IDsGenerator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Index_col_list Struct Reference\par \pard\plain 
{\tc\tcl2 \v Index_col_list}
{\xe \v Index_col_list}
{\bkmkstart AAAAAAACKF}
{\bkmkend AAAAAAACKF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACKG}
{\bkmkend AAAAAAACKG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name}{\bkmkstart AAAAAAACKH}
{\bkmkend AAAAAAACKH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b length}{\bkmkstart AAAAAAACKI}
{\bkmkend AAAAAAACKI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b asc_desc}{\bkmkstart AAAAAAACKJ}
{\bkmkend AAAAAAACKJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAACKK}
{\bkmkend AAAAAAACKK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IndexManager Class Reference\par \pard\plain 
{\tc\tcl2 \v IndexManager}
{\xe \v IndexManager}
{\bkmkstart AAAAAAACKL}
{\bkmkend AAAAAAACKL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b addIndexToList} (unsigned key_indexing, map< {\b ChunkID}, void * > attr_index){\bkmkstart AAAAAAACKM}
{\bkmkend AAAAAAACKM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b insertIndexToList} (std::string index_name, unsigned key_indexing, map< {\b ChunkID}, void * > attr_index){\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<typename T > std::map< {\b ChunkID}, {\b CSBPlusTree}\par
< T > * > {\b getIndexList} ({\b Attribute} attribute){\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<typename T > std::map< {\b ChunkID}, {\b CSBPlusTree}\par
< T > * > {\b getIndexList} (unsigned long attr_index_id){\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::map< {\b ChunkID}, void * > {\b getAttrIndex} (unsigned long attr_index_id){\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<typename T > bool {\b deleteIndexFromList} (unsigned long index_id){\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

data_type {\b getIndexType} (unsigned long index_id){\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isIndexExist} ({\b Attribute} attr){\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isIndexExist} (unsigned long index_id){\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b getIndexID} ({\b Attribute} attr){\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b serialize} (std::string file_name){\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b deserialize} (std::string file_name){\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b IndexManager} * {\b getInstance} (){\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/IndexManager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/IndexManager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IndexScanIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v IndexScanIterator}
{\xe \v IndexScanIterator}
{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
Inheritance diagram for IndexScanIterator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classIndexScanIterator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b query_range}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b remaining_block}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b IndexScanIterator} ({\b State} state){\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Open} (const PartitionOffset &partition_off=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Next} ({\b BlockStreamBase} *block){\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Close} (){\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (){\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Open\:IndexScanIterator}
{\xe \v IndexScanIterator\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool IndexScanIterator::Open (const PartitionOffset & {\i part_off} = {\f2 0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Because that boost::serialization will allocate an instance of this class when deserializing, and hence the following three virtual method cannot be pure. \par
}{
Reimplemented from {\b PhysicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References BlockStreamBase::createBlockWithDesirableSerilaizedSize().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/IndexScanIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/IndexScanIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ChunkReaderIterator::InDiskBlockAccessor Class Reference\par \pard\plain 
{\tc\tcl2 \v ChunkReaderIterator::InDiskBlockAccessor}
{\xe \v ChunkReaderIterator::InDiskBlockAccessor}
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
Inheritance diagram for ChunkReaderIterator::InDiskBlockAccessor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classChunkReaderIterator_1_1InDiskBlockAccessor.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b getBlock} ({\b BlockStreamBase} *&block) const {\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getBlockCur} () const {\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setBlockCur} (unsigned blockCur){\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const {\b ChunkID} & {\b getChunkId} () const {\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setChunkId} (const {\b ChunkID} &chunkId){\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getChunkSize} () const {\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setChunkSize} (unsigned chunkSize){\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ChunkReaderIterator::InHDFSBlockAccessor Class Reference\par \pard\plain 
{\tc\tcl2 \v ChunkReaderIterator::InHDFSBlockAccessor}
{\xe \v ChunkReaderIterator::InHDFSBlockAccessor}
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
Inheritance diagram for ChunkReaderIterator::InHDFSBlockAccessor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classChunkReaderIterator_1_1InHDFSBlockAccessor.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b getBlock} ({\b BlockStreamBase} *&block) const {\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getBlockCur} () const {\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setBlockCur} (unsigned blockCur){\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const {\b ChunkID} & {\b getChunkId} () const {\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setChunkId} (const {\b ChunkID} &chunkId){\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getChunkSize} () const {\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setChunkSize} (unsigned chunkSize){\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ChunkReaderIterator::InMemeryBlockAccessor Class Reference\par \pard\plain 
{\tc\tcl2 \v ChunkReaderIterator::InMemeryBlockAccessor}
{\xe \v ChunkReaderIterator::InMemeryBlockAccessor}
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
Inheritance diagram for ChunkReaderIterator::InMemeryBlockAccessor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classChunkReaderIterator_1_1InMemeryBlockAccessor.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b getBlock} ({\b BlockStreamBase} *&block) const {\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b getTargetBlockStartAddress} () const {\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setTargetBlockStartAddress} (void *targetBlockStartAddress){\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InMemoryChunkReaderItetaor Class Reference\par \pard\plain 
{\tc\tcl2 \v InMemoryChunkReaderItetaor}
{\xe \v InMemoryChunkReaderItetaor}
{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
Inheritance diagram for InMemoryChunkReaderItetaor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classInMemoryChunkReaderItetaor.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b InMemoryChunkReaderItetaor} (void *const &start, const unsigned &chunk_size, const unsigned &number_of_blocks, const unsigned &block_size, const {\b ChunkID} &chunk_id){\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b nextBlock} ({\b BlockStreamBase} *&block){\bkmkstart AAAAAAACML}
{\bkmkend AAAAAAACML}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b getNextBlockAccessor} ({\b block_accessor} *&ba){\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/ChunkStorage.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
input_dataset Struct Reference\par \pard\plain 
{\tc\tcl2 \v input_dataset}
{\xe \v input_dataset}
{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b atomicGet} (assigned_data &target, unsigned number_of_block){\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b atomicPut} (assigned_data blocks){\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

assigned_data {\b input_data_blocks}{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SpineLock} {\b lock}{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamProjectionScan.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
input_struct Struct Reference\par \pard\plain 
{\tc\tcl2 \v input_struct}
{\xe \v input_struct}
{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b reset} (){\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b append} (const char *str){\bkmkstart AAAAAAACMU}
{\bkmkend AAAAAAACMU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b append_til} (const char *str, char target, bool &target_match){\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\b string} [string_length]{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b index}{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/command_line.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/command_line.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Insert_assign_list Struct Reference\par \pard\plain 
{\tc\tcl2 \v Insert_assign_list}
{\xe \v Insert_assign_list}
{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b col_name}{\bkmkstart AAAAAAACNA}
{\bkmkend AAAAAAACNA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b value_type}{\bkmkstart AAAAAAACNB}
{\bkmkend AAAAAAACNB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b expr}{\bkmkstart AAAAAAACNC}
{\bkmkend AAAAAAACNC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAACND}
{\bkmkend AAAAAAACND}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Insert_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Insert_stmt}
{\xe \v Insert_stmt}
{\bkmkstart AAAAAAACNE}
{\bkmkend AAAAAAACNE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACNF}
{\bkmkend AAAAAAACNF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b insert_opt}{\bkmkstart AAAAAAACNG}
{\bkmkend AAAAAAACNG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b tablename}{\bkmkstart AAAAAAACNH}
{\bkmkend AAAAAAACNH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b col_list}{\bkmkstart AAAAAAACNI}
{\bkmkend AAAAAAACNI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b insert_val_list}{\bkmkstart AAAAAAACNJ}
{\bkmkend AAAAAAACNJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b insert_assign_list}{\bkmkstart AAAAAAACNK}
{\bkmkend AAAAAAACNK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b insert_assign_list_from_set}{\bkmkstart AAAAAAACNL}
{\bkmkend AAAAAAACNL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b select_stmt}{\bkmkstart AAAAAAACNM}
{\bkmkend AAAAAAACNM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Insert_val_list Struct Reference\par \pard\plain 
{\tc\tcl2 \v Insert_val_list}
{\xe \v Insert_val_list}
{\bkmkstart AAAAAAACNN}
{\bkmkend AAAAAAACNN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACNO}
{\bkmkend AAAAAAACNO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b insert_vals}{\bkmkstart AAAAAAACNP}
{\bkmkend AAAAAAACNP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAACNQ}
{\bkmkend AAAAAAACNQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Insert_vals Struct Reference\par \pard\plain 
{\tc\tcl2 \v Insert_vals}
{\xe \v Insert_vals}
{\bkmkstart AAAAAAACNR}
{\bkmkend AAAAAAACNR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b value_type}{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b expr}{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InsertOptimizedHashTable Class Reference\par \pard\plain 
{\tc\tcl2 \v InsertOptimizedHashTable}
{\xe \v InsertOptimizedHashTable}
{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b bucket}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BucketIterator}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b entry}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b meta_data}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b InsertOptimizedHashTable} (unsigned nbuckets){\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b initialize} (){\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insertBlock} ({\b BlockStreamBase} *block)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b insertEntry} (unsigned bn, {\b entry} &{\b entry}){\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BucketIterator} {\b createBucketIterator} (unsigned bn){\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\b BlockStreamBase} * > {\b block_list_}{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SpineLock} {\b block_list_lock_}{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b bucket} * {\b buckets_}{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b nbuckets_}{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const unsigned long {\b hash_value_mask}{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BucketIterator}{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v insertBlock\:InsertOptimizedHashTable}
{\xe \v InsertOptimizedHashTable\:insertBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void InsertOptimizedHashTable::insertBlock ({\b BlockStreamBase} * {\i block})}}
\par
{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insert a block stream into the hash table block list. It is the responsibility of hash table for possible space allocation and release. If the block is a reference, a new referenced block will be created. Otherwise, a new block will be allocated with desirable block size and apply deep copy to create a new block. \par
}{
References SpineLock::acquire(), and SpineLock::release().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/InsertOptimizedHashTable.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/InsertOptimizedHashTable.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InstanceResourceInfo Class Reference\par \pard\plain 
{\tc\tcl2 \v InstanceResourceInfo}
{\xe \v InstanceResourceInfo}
{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b slave_ip_}{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b memory_info} {\b memory}{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b disk_info} {\b disk}{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ResourceManagerMaster}{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/ResourceInfo.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/ResourceInfo.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InstanceResourceManager Class Reference\par \pard\plain 
{\tc\tcl2 \v InstanceResourceManager}
{\xe \v InstanceResourceManager}
{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

NodeID {\b Register} (){\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ReportStorageBudget} ({\b StorageBudgetMessage} &){\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setStorageBudget} (unsigned long memory, unsigned long disk){\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/ResourceManagerSlave.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/ResourceManagerSlave.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ttmath::Int< value_size > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v ttmath::Int< value_size >}
{\xe \v ttmath::Int< value_size >}
{\bkmkstart AAAAAAAFAO}
{\bkmkend AAAAAAAFAO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Int} implements a big integer value with a sign. }}\par
{
{\f2 #include <ttmathint.h>}}\par
Inheritance diagram for ttmath::Int< value_size >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classttmath_1_1Int.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetMax} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetMin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetSignOne} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b ChangeSign} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetSign} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsSign} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Abs} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Add} (const {\b Int}< value_size > &ss2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b AddInt} ({\b uint} value, {\b uint} index=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b AddTwoInts} ({\b uint} x2, {\b uint} x1, {\b uint} index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Sub} (const {\b Int}< value_size > &ss2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b SubInt} ({\b uint} value, {\b uint} index=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b AddOne} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b SubOne} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Mul} ({\b Int}< value_size > ss2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Div} ({\b Int}< value_size > ss2, {\b Int}< value_size > *remainder=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b uint} {\b Div} (const {\b Int}< value_size > &ss2, {\b Int}< value_size > &remainder){\bkmkstart AAAAAAAFAP}
{\bkmkend AAAAAAAFAP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b DivInt} (sint ss2, sint *remainder=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b uint} {\b DivInt} (sint ss2, sint &remainder){\bkmkstart AAAAAAAFAQ}
{\bkmkend AAAAAAAFAQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Pow} ({\b Int}< value_size > pow)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<uint argument_size> {\b uint} {\b FromInt} (const {\b Int}< argument_size > &p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b FromInt} (sint value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<uint argument_size> {\b uint} {\b FromUInt} (const {\b UInt}< argument_size > &p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b FromUInt} ({\b uint} value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int}< value_size > & {\b operator=} (const {\b Int}< value_size > &p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<uint argument_size> {\b Int}< value_size > & {\b operator=} (const {\b Int}< argument_size > &p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int}< value_size > & {\b operator=} (sint i)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int} (sint i)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int} (const {\b Int}< value_size > &u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<uint argument_size> {\b Int} (const {\b Int}< argument_size > &u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<uint argument_size> {\b Int}< value_size > & {\b operator=} (const {\b UInt}< argument_size > &p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int}< value_size > & {\b operator=} ({\b uint} i)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int} ({\b uint} i)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<uint argument_size> {\b Int} (const {\b UInt}< argument_size > &u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int} (const char *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int} (const wchar_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int} (const std::string &s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int} (const std::wstring &s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Int} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sint {\b ToInt} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ToString} (std::string &result, {\b uint} b=10) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ToString} (std::wstring &result, {\b uint} b=10) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b ToString} ({\b uint} b=10) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::wstring {\b ToWString} ({\b uint} b=10) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b FromString} (const char *s, {\b uint} b=10, const char **after_source=0, bool *value_read=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b FromString} (const wchar_t *s, {\b uint} b=10, const wchar_t **after_source=0, bool *value_read=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b FromString} (const std::string &s, {\b uint} b=10)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b FromString} (const std::wstring &s, {\b uint} b=10)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int}< value_size > & {\b operator=} (const char *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int}< value_size > & {\b operator=} (const wchar_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int}< value_size > & {\b operator=} (const std::string &s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int}< value_size > & {\b operator=} (const std::wstring &s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator==} (const {\b Int}< value_size > &l) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator!=} (const {\b Int}< value_size > &l) const {\bkmkstart AAAAAAAFAR}
{\bkmkend AAAAAAAFAR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator<} (const {\b Int}< value_size > &l) const {\bkmkstart AAAAAAAFAS}
{\bkmkend AAAAAAAFAS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator>} (const {\b Int}< value_size > &l) const {\bkmkstart AAAAAAAFAT}
{\bkmkend AAAAAAAFAT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator<=} (const {\b Int}< value_size > &l) const {\bkmkstart AAAAAAAFAU}
{\bkmkend AAAAAAAFAU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator>=} (const {\b Int}< value_size > &l) const {\bkmkstart AAAAAAAFAV}
{\bkmkend AAAAAAAFAV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Int}< value_size > {\b operator-} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Int}< value_size > {\b operator-} (const {\b Int}< value_size > &p2) const {\bkmkstart AAAAAAAFAW}
{\bkmkend AAAAAAAFAW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Int}< value_size > & {\b operator-=} (const {\b Int}< value_size > &p2){\bkmkstart AAAAAAAFAX}
{\bkmkend AAAAAAAFAX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Int}< value_size > {\b operator+} (const {\b Int}< value_size > &p2) const {\bkmkstart AAAAAAAFAY}
{\bkmkend AAAAAAAFAY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Int}< value_size > & {\b operator+=} (const {\b Int}< value_size > &p2){\bkmkstart AAAAAAAFAZ}
{\bkmkend AAAAAAAFAZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Int}< value_size > {\b operator*} (const {\b Int}< value_size > &p2) const {\bkmkstart AAAAAAAFBA}
{\bkmkend AAAAAAAFBA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Int}< value_size > & {\b operator*=} (const {\b Int}< value_size > &p2){\bkmkstart AAAAAAAFBB}
{\bkmkend AAAAAAAFBB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Int}< value_size > {\b operator/} (const {\b Int}< value_size > &p2) const {\bkmkstart AAAAAAAFBC}
{\bkmkend AAAAAAAFBC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Int}< value_size > & {\b operator/=} (const {\b Int}< value_size > &p2){\bkmkstart AAAAAAAFBD}
{\bkmkend AAAAAAAFBD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Int}< value_size > {\b operator%} (const {\b Int}< value_size > &p2) const {\bkmkstart AAAAAAAFBE}
{\bkmkend AAAAAAAFBE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Int}< value_size > & {\b operator%=} (const {\b Int}< value_size > &p2){\bkmkstart AAAAAAAFBF}
{\bkmkend AAAAAAAFBF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt}< value_size > & {\b operator++} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt}< value_size > {\b operator++} (int)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > & {\b operator--} (){\bkmkstart AAAAAAAFBG}
{\bkmkend AAAAAAAFBG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > {\b operator--} (int){\bkmkstart AAAAAAAFBH}
{\bkmkend AAAAAAAFBH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b operator<<} (std::ostream &s, const {\b Int}< value_size > &l)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::wostream & {\b operator<<} (std::wostream &s, const {\b Int}< value_size > &l)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::istream & {\b operator>>} (std::istream &s, {\b Int}< value_size > &l)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::wistream & {\b operator>>} (std::wistream &s, {\b Int}< value_size > &l)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<uint value_size>class ttmath::Int< value_size >\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Int} implements a big integer value with a sign. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
value_size - how many bytes specify our value on 32bit platforms: value_size=1 -> 4 bytes -> 32 bits on 64bit platforms: value_size=1 -> 8 bytes -> 64 bits value_size = 1,2,3,4,5,6.... \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Int\:ttmath::Int}
{\xe \v ttmath::Int\:Int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::Int}< value_size >::{\b Int} (sint {\i i}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBI}
{\bkmkend AAAAAAAFBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a constructor for converting the uint to this class \par
}{
References ttmath::Int< value_size >::FromInt().}\par
}
{\xe \v Int\:ttmath::Int}
{\xe \v ttmath::Int\:Int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::Int}< value_size >::{\b Int} (const {\b Int}< value_size > & {\i u}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBJ}
{\bkmkend AAAAAAAFBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a copy constructor \par
}{
References ttmath::Int< value_size >::FromInt().}\par
}
{\xe \v Int\:ttmath::Int}
{\xe \v ttmath::Int\:Int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<uint argument_size> {\b ttmath::Int}< value_size >::{\b Int} (const {\b Int}< argument_size > & {\i u}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBK}
{\bkmkend AAAAAAAFBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a constructor for copying from another types \par
}{
References ttmath::Int< value_size >::FromInt().}\par
}
{\xe \v Int\:ttmath::Int}
{\xe \v ttmath::Int\:Int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::Int}< value_size >::{\b Int} ({\b uint} {\i i}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBL}
{\bkmkend AAAAAAAFBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a constructor for converting the uint to this class \par
}{
References ttmath::Int< value_size >::FromUInt().}\par
}
{\xe \v Int\:ttmath::Int}
{\xe \v ttmath::Int\:Int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<uint argument_size> {\b ttmath::Int}< value_size >::{\b Int} (const {\b UInt}< argument_size > & {\i u}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBM}
{\bkmkend AAAAAAAFBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a constructor for copying from another types \par
}{
References ttmath::Int< value_size >::FromUInt().}\par
}
{\xe \v Int\:ttmath::Int}
{\xe \v ttmath::Int\:Int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::Int}< value_size >::{\b Int} (const char * {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBN}
{\bkmkend AAAAAAAFBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a constructor for converting string to this class (with the base=10) \par
}{
References ttmath::Int< value_size >::FromString().}\par
}
{\xe \v Int\:ttmath::Int}
{\xe \v ttmath::Int\:Int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::Int}< value_size >::{\b Int} (const wchar_t * {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBO}
{\bkmkend AAAAAAAFBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a constructor for converting string to this class (with the base=10) \par
}{
References ttmath::Int< value_size >::FromString().}\par
}
{\xe \v Int\:ttmath::Int}
{\xe \v ttmath::Int\:Int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::Int}< value_size >::{\b Int} (const std::string & {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBP}
{\bkmkend AAAAAAAFBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a constructor for converting a string to this class (with the base=10) \par
}{
References ttmath::Int< value_size >::FromString().}\par
}
{\xe \v Int\:ttmath::Int}
{\xe \v ttmath::Int\:Int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::Int}< value_size >::{\b Int} (const std::wstring & {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBQ}
{\bkmkend AAAAAAAFBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a constructor for converting a string to this class (with the base=10) \par
}{
References ttmath::Int< value_size >::FromString().}\par
}
{\xe \v Int\:ttmath::Int}
{\xe \v ttmath::Int\:Int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::Int}< value_size >::{\b Int} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBR}
{\bkmkend AAAAAAAFBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a default constructor\par
we don't clear table etc. \par
}}
{\xe \v ~Int\:ttmath::Int}
{\xe \v ttmath::Int\:~Int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::Int}< value_size >::~{\b Int} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBS}
{\bkmkend AAAAAAAFBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the destructor \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Abs\:ttmath::Int}
{\xe \v ttmath::Int\:Abs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::Abs (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBT}
{\bkmkend AAAAAAAFBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
it sets an absolute value\par
it can return carry (1) (look on {\b ChangeSign()} for details) \par
}{
References ttmath::Int< value_size >::ChangeSign(), and ttmath::Int< value_size >::IsSign().}\par
{
Referenced by ttmath::Int< value_size >::Div(), ttmath::Int< value_size >::DivInt(), and ttmath::Int< value_size >::Mul().}\par
}
{\xe \v Add\:ttmath::Int}
{\xe \v ttmath::Int\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::Add (const {\b Int}< value_size > & {\i ss2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBU}
{\bkmkend AAAAAAAFBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method adds two value with a sign and returns a carry\par
we're using methods from the base class because values are stored with U2 we must only make the carry correction\par
this = p1(=this) + p2\par
when p1>=0 i p2>=0 carry is set when the highest bit of value is set when p1<0 i p2<0 carry is set when the highest bit of value is clear when p1>=0 i p2<0 carry will never be set when p1<0  i p2>=0 carry will never be set \par
}{
References ttmath::Int< value_size >::IsSign().}\par
}
{\xe \v AddInt\:ttmath::Int}
{\xe \v ttmath::Int\:AddInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::AddInt ({\b uint} {\i value}, {\b uint} {\i index} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBV}
{\bkmkend AAAAAAAFBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method adds one {\i unsigned}  word (at a specific position) and returns a carry (if it was)\par
look at a description in UInt<>::AddInt(...) \par
}{
References ttmath::Int< value_size >::IsSign().}\par
}
{\xe \v AddOne\:ttmath::Int}
{\xe \v ttmath::Int\:AddOne}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::AddOne (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBW}
{\bkmkend AAAAAAAFBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method adds one to the value and returns carry \par
}{
References ttmath::UInt< value_size >::AddOne(), and ttmath::Int< value_size >::IsSign().}\par
{
Referenced by ttmath::Int< value_size >::operator++().}\par
}
{\xe \v AddTwoInts\:ttmath::Int}
{\xe \v ttmath::Int\:AddTwoInts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::AddTwoInts ({\b uint} {\i x2}, {\b uint} {\i x1}, {\b uint} {\i index}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBX}
{\bkmkend AAAAAAAFBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method adds two {\i unsigned}  words to the existing value and these words begin on the 'index' position\par
index should be equal or smaller than value_size-2 (index <= value_size-2) x1 - lower word, x2 - higher word\par
look at a description in UInt<>::AddTwoInts(...) \par
}{
References ttmath::Int< value_size >::IsSign().}\par
}
{\xe \v ChangeSign\:ttmath::Int}
{\xe \v ttmath::Int\:ChangeSign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::ChangeSign (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBY}
{\bkmkend AAAAAAAFBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
we change the sign of the value\par
if it isn't possible to change the sign this method returns 1 else return 0 and changing the sign \par
}{
References ttmath::Int< value_size >::operator=(), ttmath::Int< value_size >::SetMin(), and ttmath::UInt< value_size >::SetZero().}\par
{
Referenced by ttmath::Int< value_size >::Abs(), decimal::NValue::createStringFromDecimal(), ttmath::Int< value_size >::operator-(), ttmath::Int< value_size >::Pow(), and ttmath::Int< value_size >::SetSign().}\par
}
{\xe \v Div\:ttmath::Int}
{\xe \v ttmath::Int\:Div}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::Div ({\b Int}< value_size > {\i ss2}, {\b Int}< value_size > * {\i remainder} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFBZ}
{\bkmkend AAAAAAAFBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
division this = this / ss2 returned values: 0 - ok 1 - division by zero\par
for example: (result means 'this') 20 / 3 -> result: 6 remainder: 2 -20 / 3 -> result: -6 remainder: -2 20 / -3 -> result: -6 remainder: 2 -20 / -3 -> result: 6 remainder: -2\par
in other words: this(old) = ss2 * this(new)(result) + remainder \par
}{
References ttmath::Int< value_size >::Abs(), ttmath::UInt< value_size >::Div(), ttmath::Int< value_size >::IsSign(), and ttmath::Int< value_size >::SetSign().}\par
{
Referenced by ttmath::Int< value_size >::Pow().}\par
}
{\xe \v DivInt\:ttmath::Int}
{\xe \v ttmath::Int\:DivInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::DivInt (sint {\i ss2}, sint * {\i remainder} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCA}
{\bkmkend AAAAAAAFCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
division this = this / ss2 (ss2 is int) returned values: 0 - ok 1 - division by zero\par
for example: (result means 'this') 20 / 3 -> result: 6 remainder: 2 -20 / 3 -> result: -6 remainder: -2 20 / -3 -> result: -6 remainder: 2 -20 / -3 -> result: 6 remainder: -2\par
in other words: this(old) = ss2 * this(new)(result) + remainder \par
}{
References ttmath::Int< value_size >::Abs(), ttmath::UInt< value_size >::DivInt(), ttmath::Int< value_size >::IsSign(), and ttmath::Int< value_size >::SetSign().}\par
}
{\xe \v FromInt\:ttmath::Int}
{\xe \v ttmath::Int\:FromInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<uint argument_size> {\b uint} {\b ttmath::Int}< value_size >::FromInt (const {\b Int}< argument_size > & {\i p}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCB}
{\bkmkend AAAAAAAFCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts an Int<another_size> type into this class\par
this operation has mainly sense if the value from p can be held in this type\par
it returns a carry if the value 'p' is too big \par
}{
Referenced by ttmath::Int< value_size >::Int(), and ttmath::Int< value_size >::operator=().}\par
}
{\xe \v FromInt\:ttmath::Int}
{\xe \v ttmath::Int\:FromInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::FromInt (sint {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCC}
{\bkmkend AAAAAAAFCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts the sint type into this class \par
}{
References TTMATH_UINT_MAX_VALUE.}\par
}
{\xe \v FromString\:ttmath::Int}
{\xe \v ttmath::Int\:FromString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::FromString (const char * {\i s}, {\b uint} {\i b} = {\f2 10}, const char ** {\i after_source} = {\f2 0}, bool * {\i value_read} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCD}
{\bkmkend AAAAAAAFCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts a string into its value it returns carry=1 if the value will be too big or an incorrect base 'b' is given\par
string is ended with a non-digit value, for example: "-12" will be translated to -12 as well as: "- 12foo" will be translated to -12 too\par
existing first white characters will be ommited (between '-' and a first digit can be white characters too)\par
after_source (if exists) is pointing at the end of the parsed string\par
value_read (if exists) tells whether something has actually been read (at least one digit) \par
}{
Referenced by ttmath::Int< value_size >::FromString(), ttmath::Int< value_size >::Int(), and ttmath::Int< value_size >::operator=().}\par
}
{\xe \v FromString\:ttmath::Int}
{\xe \v ttmath::Int\:FromString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::FromString (const wchar_t * {\i s}, {\b uint} {\i b} = {\f2 10}, const wchar_t ** {\i after_source} = {\f2 0}, bool * {\i value_read} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCE}
{\bkmkend AAAAAAAFCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts a string into its value \par
}}
{\xe \v FromString\:ttmath::Int}
{\xe \v ttmath::Int\:FromString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::FromString (const std::string & {\i s}, {\b uint} {\i b} = {\f2 10}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCF}
{\bkmkend AAAAAAAFCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts a string into its value it returns carry=1 if the value will be too big or an incorrect base 'b' is given \par
}{
References ttmath::Int< value_size >::FromString().}\par
}
{\xe \v FromString\:ttmath::Int}
{\xe \v ttmath::Int\:FromString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::FromString (const std::wstring & {\i s}, {\b uint} {\i b} = {\f2 10}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCG}
{\bkmkend AAAAAAAFCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts a string into its value it returns carry=1 if the value will be too big or an incorrect base 'b' is given \par
}{
References ttmath::Int< value_size >::FromString().}\par
}
{\xe \v FromUInt\:ttmath::Int}
{\xe \v ttmath::Int\:FromUInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<uint argument_size> {\b uint} {\b ttmath::Int}< value_size >::FromUInt (const {\b UInt}< argument_size > & {\i p}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCH}
{\bkmkend AAAAAAAFCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts UInt<another_size> into this class \par
}{
Referenced by ttmath::Int< value_size >::Int(), and ttmath::Int< value_size >::operator=().}\par
}
{\xe \v FromUInt\:ttmath::Int}
{\xe \v ttmath::Int\:FromUInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::FromUInt ({\b uint} {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCI}
{\bkmkend AAAAAAAFCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts the uint type into this class \par
}{
References TTMATH_UINT_HIGHEST_BIT.}\par
}
{\xe \v IsSign\:ttmath::Int}
{\xe \v ttmath::Int\:IsSign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> bool {\b ttmath::Int}< value_size >::IsSign () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCJ}
{\bkmkend AAAAAAAFCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method returns true if there's the sign\par
(the highest bit will be converted to the bool) \par
}{
References ttmath::UInt< value_size >::IsTheHighestBitSet().}\par
{
Referenced by ttmath::Int< value_size >::Abs(), ttmath::Int< value_size >::Add(), ttmath::Int< value_size >::AddInt(), ttmath::Int< value_size >::AddOne(), ttmath::Int< value_size >::AddTwoInts(), decimal::NValue::createStringFromDecimal(), ttmath::Int< value_size >::Div(), ttmath::Int< value_size >::DivInt(), ttmath::Int< value_size >::Mul(), ttmath::Int< value_size >::Pow(), ttmath::Int< value_size >::SetSign(), ttmath::Int< value_size >::Sub(), ttmath::Int< value_size >::SubInt(), and ttmath::Int< value_size >::SubOne().}\par
}
{\xe \v Mul\:ttmath::Int}
{\xe \v ttmath::Int\:Mul}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::Mul ({\b Int}< value_size > {\i ss2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCK}
{\bkmkend AAAAAAAFCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
multiplication this = this * ss2\par
it returns carry if the result is too big (we're using the method from the base class but we have to make one correction in account of signs) \par
}{
References ttmath::Int< value_size >::Abs(), ttmath::Int< value_size >::IsSign(), ttmath::Int< value_size >::SetMin(), and ttmath::Int< value_size >::SetSign().}\par
}
{\xe \v operator++\:ttmath::Int}
{\xe \v ttmath::Int\:operator++}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b UInt}<value_size>& {\b ttmath::Int}< value_size >::operator++ (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCL}
{\bkmkend AAAAAAAFCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prefix operator e.g. ++variable \par
}{
References ttmath::Int< value_size >::AddOne().}\par
}
{\xe \v operator++\:ttmath::Int}
{\xe \v ttmath::Int\:operator++}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b UInt}<value_size> {\b ttmath::Int}< value_size >::operator++ (int ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCM}
{\bkmkend AAAAAAAFCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Postfix operator e.g. variable++ \par
}{
References ttmath::Int< value_size >::AddOne().}\par
}
{\xe \v operator-\:ttmath::Int}
{\xe \v ttmath::Int\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b Int}<value_size> {\b ttmath::Int}< value_size >::operator- () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCN}
{\bkmkend AAAAAAAFCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
standard mathematical operators\par
an operator for changing the sign\par
it's not changing 'this' but the changed value will be returned \par
}{
References ttmath::Int< value_size >::ChangeSign().}\par
}
{\xe \v operator=\:ttmath::Int}
{\xe \v ttmath::Int\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b Int}<value_size>& {\b ttmath::Int}< value_size >::operator= (const {\b Int}< value_size > & {\i p}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCO}
{\bkmkend AAAAAAAFCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the default assignment operator \par
}{
References ttmath::Int< value_size >::FromInt().}\par
{
Referenced by ttmath::Int< value_size >::ChangeSign().}\par
}
{\xe \v operator=\:ttmath::Int}
{\xe \v ttmath::Int\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<uint argument_size> {\b Int}<value_size>& {\b ttmath::Int}< value_size >::operator= (const {\b Int}< argument_size > & {\i p}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCP}
{\bkmkend AAAAAAAFCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this operator converts an Int<another_size> type to this class\par
it doesn't return a carry \par
}{
References ttmath::Int< value_size >::FromInt().}\par
}
{\xe \v operator=\:ttmath::Int}
{\xe \v ttmath::Int\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b Int}<value_size>& {\b ttmath::Int}< value_size >::operator= (sint {\i i}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCQ}
{\bkmkend AAAAAAAFCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts the sint type to this class \par
}{
References ttmath::Int< value_size >::FromInt().}\par
}
{\xe \v operator=\:ttmath::Int}
{\xe \v ttmath::Int\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<uint argument_size> {\b Int}<value_size>& {\b ttmath::Int}< value_size >::operator= (const {\b UInt}< argument_size > & {\i p}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCR}
{\bkmkend AAAAAAAFCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this operator converts an UInt<another_size> type to this class\par
it doesn't return a carry \par
}{
References ttmath::Int< value_size >::FromUInt().}\par
}
{\xe \v operator=\:ttmath::Int}
{\xe \v ttmath::Int\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b Int}<value_size>& {\b ttmath::Int}< value_size >::operator= ({\b uint} {\i i}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCS}
{\bkmkend AAAAAAAFCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts the Uint type to this class \par
}{
References ttmath::Int< value_size >::FromUInt().}\par
}
{\xe \v operator=\:ttmath::Int}
{\xe \v ttmath::Int\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b Int}<value_size>& {\b ttmath::Int}< value_size >::operator= (const char * {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCT}
{\bkmkend AAAAAAAFCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this operator converts a string into its value (with base = 10) \par
}{
References ttmath::Int< value_size >::FromString().}\par
}
{\xe \v operator=\:ttmath::Int}
{\xe \v ttmath::Int\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b Int}<value_size>& {\b ttmath::Int}< value_size >::operator= (const wchar_t * {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCU}
{\bkmkend AAAAAAAFCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this operator converts a string into its value (with base = 10) \par
}{
References ttmath::Int< value_size >::FromString().}\par
}
{\xe \v operator=\:ttmath::Int}
{\xe \v ttmath::Int\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b Int}<value_size>& {\b ttmath::Int}< value_size >::operator= (const std::string & {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCV}
{\bkmkend AAAAAAAFCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this operator converts a string into its value (with base = 10) \par
}{
References ttmath::Int< value_size >::FromString().}\par
}
{\xe \v operator=\:ttmath::Int}
{\xe \v ttmath::Int\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b Int}<value_size>& {\b ttmath::Int}< value_size >::operator= (const std::wstring & {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCW}
{\bkmkend AAAAAAAFCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this operator converts a string into its value (with base = 10) \par
}{
References ttmath::Int< value_size >::FromString().}\par
}
{\xe \v operator==\:ttmath::Int}
{\xe \v ttmath::Int\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> bool {\b ttmath::Int}< value_size >::operator== (const {\b Int}< value_size > & {\i l}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCX}
{\bkmkend AAAAAAAFCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
methods for comparing \par
}}
{\xe \v Pow\:ttmath::Int}
{\xe \v ttmath::Int\:Pow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::Pow ({\b Int}< value_size > {\i pow}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCY}
{\bkmkend AAAAAAAFCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
power this = this ^ pow\par
return values: 0 - ok 1 - carry 2 - incorrect arguments 0^0 or 0^(-something) \par
}{
References ttmath::Int< value_size >::ChangeSign(), ttmath::Int< value_size >::Div(), ttmath::Int< value_size >::IsSign(), and ttmath::UInt< value_size >::SetOne().}\par
}
{\xe \v SetMax\:ttmath::Int}
{\xe \v ttmath::Int\:SetMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::Int}< value_size >::SetMax (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCZ}
{\bkmkend AAAAAAAFCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method sets the max value which this class can hold (all bits will be one besides the last one) \par
}{
References ttmath::UInt< value_size >::SetMax(), and TTMATH_UINT_HIGHEST_BIT.}\par
}
{\xe \v SetMin\:ttmath::Int}
{\xe \v ttmath::Int\:SetMin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::Int}< value_size >::SetMin (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFDA}
{\bkmkend AAAAAAAFDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method sets the min value which this class can hold (all bits will be zero besides the last one which is one) \par
}{
References ttmath::UInt< value_size >::SetZero(), and TTMATH_UINT_HIGHEST_BIT.}\par
{
Referenced by ttmath::Int< value_size >::ChangeSign(), and ttmath::Int< value_size >::Mul().}\par
}
{\xe \v SetSign\:ttmath::Int}
{\xe \v ttmath::Int\:SetSign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::Int}< value_size >::SetSign (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFDB}
{\bkmkend AAAAAAAFDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method sets the sign\par
e.g. 1 -> -1 -2 -> -2\par
from a positive value we make a negative value, if the value is negative we do nothing \par
}{
References ttmath::Int< value_size >::ChangeSign(), and ttmath::Int< value_size >::IsSign().}\par
{
Referenced by decimal::NValue::createDecimalFromString(), ttmath::Int< value_size >::Div(), ttmath::Int< value_size >::DivInt(), and ttmath::Int< value_size >::Mul().}\par
}
{\xe \v SetSignOne\:ttmath::Int}
{\xe \v ttmath::Int\:SetSignOne}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::Int}< value_size >::SetSignOne (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFDC}
{\bkmkend AAAAAAAFDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method sets -1 as the value (-1 is equal the max value in an unsigned type) \par
}{
References ttmath::UInt< value_size >::SetMax().}\par
}
{\xe \v Sub\:ttmath::Int}
{\xe \v ttmath::Int\:Sub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::Sub (const {\b Int}< value_size > & {\i ss2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFDD}
{\bkmkend AAAAAAAFDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method subtracts two values with a sign\par
we don't use the previous Add because the method ChangeSign can sometimes return carry\par
this = p1(=this) - p2\par
when p1>=0 i p2>=0 carry will never be set when p1<0 i p2<0 carry will never be set when p1>=0 i p2<0 carry is set when the highest bit of value is set when p1<0  i p2>=0 carry is set when the highest bit of value is clear \par
}{
References ttmath::Int< value_size >::IsSign().}\par
}
{\xe \v SubInt\:ttmath::Int}
{\xe \v ttmath::Int\:SubInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::SubInt ({\b uint} {\i value}, {\b uint} {\i index} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFDE}
{\bkmkend AAAAAAAFDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method subtracts one {\i unsigned}  word (at a specific position) and returns a carry (if it was) \par
}{
References ttmath::Int< value_size >::IsSign().}\par
}
{\xe \v SubOne\:ttmath::Int}
{\xe \v ttmath::Int\:SubOne}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::Int}< value_size >::SubOne (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFDF}
{\bkmkend AAAAAAAFDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method subtracts one from the value and returns carry \par
}{
References ttmath::Int< value_size >::IsSign(), and ttmath::UInt< value_size >::SubOne().}\par
}
{\xe \v ToInt\:ttmath::Int}
{\xe \v ttmath::Int\:ToInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> sint {\b ttmath::Int}< value_size >::ToInt () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFDG}
{\bkmkend AAAAAAAFDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method returns the lowest value from table with a sign\par
we must be sure when we using this method whether the value will hold in an sint type or not (the rest value from table must be zero or -1) \par
}}
{\xe \v ToString\:ttmath::Int}
{\xe \v ttmath::Int\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::Int}< value_size >::ToString (std::string & {\i result}, {\b uint} {\i b} = {\f2 10}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFDH}
{\bkmkend AAAAAAAFDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts the value to a string with a base equal 'b' \par
}{
Referenced by decimal::NValue::createStringFromDecimal().}\par
}
{\xe \v ToString\:ttmath::Int}
{\xe \v ttmath::Int\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::Int}< value_size >::ToString (std::wstring & {\i result}, {\b uint} {\i b} = {\f2 10}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFDI}
{\bkmkend AAAAAAAFDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts the value to a string with a base equal 'b' \par
}}
{\xe \v ToString\:ttmath::Int}
{\xe \v ttmath::Int\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> std::string {\b ttmath::Int}< value_size >::ToString ({\b uint} {\i b} = {\f2 10}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFDJ}
{\bkmkend AAAAAAAFDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts the value to a string with a base equal 'b' \par
}}
{\xe \v ToWString\:ttmath::Int}
{\xe \v ttmath::Int\:ToWString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> std::wstring {\b ttmath::Int}< value_size >::ToWString ({\b uint} {\i b} = {\f2 10}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFDK}
{\bkmkend AAAAAAAFDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts the value to a string with a base equal 'b' \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v operator<<\:ttmath::Int}
{\xe \v ttmath::Int\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> std::ostream& operator<< (std::ostream & {\i s}, const {\b Int}< value_size > & {\i l}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAFDL}
{\bkmkend AAAAAAAFDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
output to standard streams \par
}}
{\xe \v operator<<\:ttmath::Int}
{\xe \v ttmath::Int\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> std::wostream& operator<< (std::wostream & {\i s}, const {\b Int}< value_size > & {\i l}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAFDM}
{\bkmkend AAAAAAAFDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
output to standard streams \par
}}
{\xe \v operator>>\:ttmath::Int}
{\xe \v ttmath::Int\:operator>>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> std::istream& operator>> (std::istream & {\i s}, {\b Int}< value_size > & {\i l}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAFDN}
{\bkmkend AAAAAAAFDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
input from standard streams \par
}}
{\xe \v operator>>\:ttmath::Int}
{\xe \v ttmath::Int\:operator>>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> std::wistream& operator>> (std::wistream & {\i s}, {\b Int}< value_size > & {\i l}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAFDO}
{\bkmkend AAAAAAAFDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
input from standard streams \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/types/ttmath/{\b ttmathint.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BasicHashTable::Iterator Class Reference\par \pard\plain 
{\tc\tcl2 \v BasicHashTable::Iterator}
{\xe \v BasicHashTable::Iterator}
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Iterator} (const unsigned &buck_actual_size, const unsigned &tuplesize){\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Iterator} (const {\b Iterator} &r){\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b readnext} (){\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b readCurrent} () const {\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b increase_cur_} (){\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BasicHashTable}{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hashtable.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hashtable.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DynamicBlockBuffer::Iterator Class Reference\par \pard\plain 
{\tc\tcl2 \v DynamicBlockBuffer::Iterator}
{\xe \v DynamicBlockBuffer::Iterator}
{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Iterator} (const {\b DynamicBlockBuffer} *dbb){\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Iterator} (const {\b Iterator} &){\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b nextBlock} (){\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b atomicNextBlock} (){\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/DynamicBlockBuffer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/DynamicBlockBuffer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IteratorExecutorMaster Class Reference\par \pard\plain 
{\tc\tcl2 \v IteratorExecutorMaster}
{\xe \v IteratorExecutorMaster}
{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b ExecuteBlockStreamIteratorsOnSites} ({\b BlockStreamIteratorBase} *it, std::vector< std::string > ip_list){\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b ExecuteBlockStreamIteratorsOnSite} ({\b BlockStreamIteratorBase} *it, NodeID target_ip){\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Propogation} (const int, std::string target){\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b IteratorExecutorMaster} * {\b getInstance} (){\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/IteratorExecutorMaster.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/IteratorExecutorMaster.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IteratorExecutorMasterLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v IteratorExecutorMasterLogging}
{\xe \v IteratorExecutorMasterLogging}
{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
Inheritance diagram for IteratorExecutorMasterLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classIteratorExecutorMasterLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b log} (const char *format,...){\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b elog} (const char *format,...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v elog\:IteratorExecutorMasterLogging}
{\xe \v IteratorExecutorMasterLogging\:elog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void IteratorExecutorMasterLogging::elog (const char * {\i format},  {\i ...}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
print the error information to stderr. \par
}{
Implements {\b Logging} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IteratorExecutorSlave Class Reference\par \pard\plain 
{\tc\tcl2 \v IteratorExecutorSlave}
{\xe \v IteratorExecutorSlave}
{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExecuteIteratorActor}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b createNewThreadAndRun} ({\b PhysicalQueryPlan} *){\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b executePhysicalQueryPlan} ({\b PhysicalQueryPlan} plan){\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Logging} * {\b logging_}{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ExecuteIteratorActor}{\bkmkstart AAAAAAACPS}
{\bkmkend AAAAAAACPS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/IteratorExecutorSlave.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/IteratorExecutorSlave.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IteratorExecutorSlaveLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v IteratorExecutorSlaveLogging}
{\xe \v IteratorExecutorSlaveLogging}
{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
Inheritance diagram for IteratorExecutorSlaveLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classIteratorExecutorSlaveLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b log} (const char *format,...){\bkmkstart AAAAAAACPW}
{\bkmkend AAAAAAACPW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b elog} (const char *format,...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v elog\:IteratorExecutorSlaveLogging}
{\xe \v IteratorExecutorSlaveLogging\:elog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void IteratorExecutorSlaveLogging::elog (const char * {\i format},  {\i ...}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
print the error information to stderr. \par
}{
Implements {\b Logging} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Join Struct Reference\par \pard\plain 
{\tc\tcl2 \v Join}
{\xe \v Join}
{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b jointype}{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b lnext}{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b rnext}{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b condition}{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamJoinIterator::join_thread_context Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamJoinIterator::join_thread_context}
{\xe \v BlockStreamJoinIterator::join_thread_context}
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
Inheritance diagram for BlockStreamJoinIterator::join_thread_context:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamJoinIterator_1_1join__thread__context.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b l_block_for_asking_}{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase::BlockStreamTraverseIterator} * {\b l_block_stream_iterator_}{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b r_block_for_asking_}{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase::BlockStreamTraverseIterator} * {\b r_block_stream_iterator_}{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BasicHashTable::Iterator} {\b hashtable_iterator_}{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamJoinIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamJoinIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamNestLoopJoinIterator::join_thread_context Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamNestLoopJoinIterator::join_thread_context}
{\xe \v BlockStreamNestLoopJoinIterator::join_thread_context}
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
Inheritance diagram for BlockStreamNestLoopJoinIterator::join_thread_context:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamNestLoopJoinIterator_1_1join__thread__context.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b block_for_asking_}{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase::BlockStreamTraverseIterator} * {\b block_stream_iterator_}{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b DynamicBlockBuffer::Iterator} {\b buffer_iterator_}{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase::BlockStreamTraverseIterator} * {\b buffer_stream_iterator_}{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamNestLoopJoinIterator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::LogicalEqualJoin::JoinPair Struct Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::LogicalEqualJoin::JoinPair}
{\xe \v claims::logical_operator::LogicalEqualJoin::JoinPair}
{\bkmkstart AAAAAAAEKS}
{\bkmkend AAAAAAAEKS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JoinPair} contains two attributes to be joined. }}\par
{
{\f2 #include <logical_equal_join.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b JoinPair} (const {\b Attribute} &left_join_attr, const {\b Attribute} &right_join_attr){\bkmkstart AAAAAAAEKT}
{\bkmkend AAAAAAAEKT}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} {\b left_join_attr_}{\bkmkstart AAAAAAAEKU}
{\bkmkend AAAAAAAEKU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} {\b right_join_attr_}{\bkmkstart AAAAAAAEKV}
{\bkmkend AAAAAAAEKV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JoinPair} contains two attributes to be joined. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_equal_join.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Length Struct Reference\par \pard\plain 
{\tc\tcl2 \v Length}
{\xe \v Length}
{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b data1}{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b data2}{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Limit_expr Struct Reference\par \pard\plain 
{\tc\tcl2 \v Limit_expr}
{\xe \v Limit_expr}
{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b offset}{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b row_count}{\bkmkstart AAAAAAACQL}
{\bkmkend AAAAAAACQL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::LimitConstraint Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::LimitConstraint}
{\xe \v claims::logical_operator::LimitConstraint}
{\bkmkstart AAAAAAAELE}
{\bkmkend AAAAAAAELE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description:limit operator is a simple operator. start_position_:the fault value is 0,it means the position where we should acquire data. return_tuples_:the fault value is -1, it means that all rows are needed. }}\par
{
{\f2 #include <logical_limit.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LimitConstraint} (unsigned long return_tuples){\bkmkstart AAAAAAAELF}
{\bkmkend AAAAAAAELF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LimitConstraint} (unsigned long return_tuples, unsigned long position){\bkmkstart AAAAAAAELG}
{\bkmkend AAAAAAAELG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b CanBeOmitted} () const {\bkmkstart AAAAAAAELH}
{\bkmkend AAAAAAAELH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b start_position_}{\bkmkstart AAAAAAAELI}
{\bkmkend AAAAAAAELI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b returned_tuples_}{\bkmkstart AAAAAAAELJ}
{\bkmkend AAAAAAAELJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description:limit operator is a simple operator. start_position_:the fault value is 0,it means the position where we should acquire data. return_tuples_:the fault value is -1, it means that all rows are needed. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_limit.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_limit.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Loadtable_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Loadtable_stmt}
{\xe \v Loadtable_stmt}
{\bkmkstart AAAAAAACQM}
{\bkmkend AAAAAAACQM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACQN}
{\bkmkend AAAAAAACQN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b table_name}{\bkmkstart AAAAAAACQO}
{\bkmkend AAAAAAACQO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b path}{\bkmkstart AAAAAAACQP}
{\bkmkend AAAAAAACQP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b column_separator}{\bkmkstart AAAAAAACQQ}
{\bkmkend AAAAAAACQQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b tuple_separator}{\bkmkstart AAAAAAACQR}
{\bkmkend AAAAAAACQR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b sample}{\bkmkstart AAAAAAACQS}
{\bkmkend AAAAAAACQS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b mode}{\bkmkstart AAAAAAACQT}
{\bkmkend AAAAAAACQT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
local_stage Struct Reference\par \pard\plain 
{\tc\tcl2 \v local_stage}
{\xe \v local_stage}
{\bkmkstart AAAAAAACQU}
{\bkmkend AAAAAAACQU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b type} \{ {\b from_buffer}, 
{\b buffer_to_buffer}, 
{\b to_buffer}, 
{\b no_buffer}, 
{\b incomplete}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b local_stage} (const {\b local_stage} &r){\bkmkstart AAAAAAACQV}
{\bkmkend AAAAAAACQV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b local_stage} ({\b LocalStageEndPoint} start, {\b LocalStageEndPoint} end){\bkmkstart AAAAAAACQW}
{\bkmkend AAAAAAACQW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b get_type_name} (type tp) const {\bkmkstart AAAAAAACQX}
{\bkmkend AAAAAAACQX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print} (){\bkmkstart AAAAAAACQY}
{\bkmkend AAAAAAACQY}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LocalStageEndPoint} {\b dataflow_src_}{\bkmkstart AAAAAAACQZ}
{\bkmkend AAAAAAACQZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LocalStageEndPoint} {\b dataflow_desc_}{\bkmkstart AAAAAAACRA}
{\bkmkend AAAAAAACRA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

type {\b type_}{\bkmkstart AAAAAAACRB}
{\bkmkend AAAAAAACRB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/ExpanderTracker.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LocalDiskConnector Class Reference\par \pard\plain 
{\tc\tcl2 \v LocalDiskConnector}
{\xe \v LocalDiskConnector}
{\bkmkstart AAAAAAACRC}
{\bkmkend AAAAAAACRC}
Inheritance diagram for LocalDiskConnector:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLocalDiskConnector.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LocalDiskConnector} (vector< vector< string > > hdfs_writepath){\bkmkstart AAAAAAACRD}
{\bkmkend AAAAAAACRD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b openFiles} (open_flag open_flag_){\bkmkstart AAAAAAACRE}
{\bkmkend AAAAAAACRE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b closeFiles} (){\bkmkstart AAAAAAACRF}
{\bkmkend AAAAAAACRF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b flush} (unsigned projection_offset, unsigned partition_offset, void *source, unsigned length){\bkmkstart AAAAAAACRG}
{\bkmkend AAAAAAACRG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< std::vector< int > > {\b file_handles_}{\bkmkstart AAAAAAACRH}
{\bkmkend AAAAAAACRH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Loader/LocalDiskConnector.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Loader/LocalDiskConnector.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LocalStageEndPoint Struct Reference\par \pard\plain 
{\tc\tcl2 \v LocalStageEndPoint}
{\xe \v LocalStageEndPoint}
{\bkmkstart AAAAAAACRI}
{\bkmkend AAAAAAACRI}
\par
{
{\f2 #include <ExpanderTracker.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LocalStageEndPoint} (endpoint_type tp, std::string name="Not Given", MonitorableBuffer *buffer_handle=0){\bkmkstart AAAAAAACRJ}
{\bkmkend AAAAAAACRJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LocalStageEndPoint} (const {\b LocalStageEndPoint} &r){\bkmkstart AAAAAAACRK}
{\bkmkend AAAAAAACRK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

endpoint_type {\b type}{\bkmkstart AAAAAAACRL}
{\bkmkend AAAAAAACRL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b MonitorableBuffer} * {\b monitorable_buffer}{\bkmkstart AAAAAAACRM}
{\bkmkend AAAAAAACRM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b end_point_name}{\bkmkstart AAAAAAACRN}
{\bkmkend AAAAAAACRN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Local {\b local_stage} endpoint refers to the start or the end of a stage within a segment. It could be either exchange, state, or expander. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/ExpanderTracker.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lock Class Reference\par \pard\plain 
{\tc\tcl2 \v Lock}
{\xe \v Lock}
{\bkmkstart AAAAAAACRO}
{\bkmkend AAAAAAACRO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b acquire} (){\bkmkstart AAAAAAACRP}
{\bkmkend AAAAAAACRP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b try_acquire} (){\bkmkstart AAAAAAACRQ}
{\bkmkend AAAAAAACRQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b release} (){\bkmkstart AAAAAAACRR}
{\bkmkend AAAAAAACRR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b destroy} (){\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/lock.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Logging Class Reference\par \pard\plain 
{\tc\tcl2 \v Logging}
{\xe \v Logging}
{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
Inheritance diagram for Logging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b log} (const char *format,...)=0{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b elog} (const char *format,...)=0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v elog\:Logging}
{\xe \v Logging\:elog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Logging::elog (const char * {\i format},  {\i ...}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
print the error information to stderr. \par
}{
Implemented in {\b ExpanderTrackerLogging} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACDZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ExchangeTrackerLogging} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CoordinatorLogging} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b AdaptiveEndPointLogging} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b EnvironmentLogging} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b IteratorExecutorSlaveLogging} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPX \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b IteratorExecutorMasterLogging} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACPN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by Coordinator::Coordinator(), Environment::Environment(), and ExpandableBlockStreamExchangeLowerEfficient::Open().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::common::Logging Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::common::Logging}
{\xe \v claims::common::Logging}
{\bkmkstart AAAAAAAEJZ}
{\bkmkend AAAAAAAEJZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Logging} (char *program){\bkmkstart AAAAAAAEKA}
{\bkmkend AAAAAAAEKA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/log/logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/log/logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::LogicalAggregation Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::LogicalAggregation}
{\xe \v claims::logical_operator::LogicalAggregation}
{\bkmkstart AAAAAAAEKB}
{\bkmkend AAAAAAAEKB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
class description: maintain operator property that results from executing aggregation operator, and generate corresponding physical operator. }}\par
{
{\f2 #include <logical_aggregation.h>}}\par
Inheritance diagram for claims::logical_operator::LogicalAggregation:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclaims_1_1logical__query__plan_1_1LogicalAggregation.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AggregationStyle} \{ {\b kAgg}, 
{\b kReparGlobalAgg}, 
{\b kLocalAggReparGlobalAgg}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LogicalAggregation} (std::vector< {\b Attribute} > group_by_attribute_list, std::vector< {\b Attribute} > aggregation_attribute_list, std::vector< BlockStreamAggregationIterator::State::aggregation > aggregation_function_list, {\b LogicalOperator} *child)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlanContext} {\b GetPlanContext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BlockStreamIteratorBase} * {\b GetPhysicalPlan} (const unsigned &block_size)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
class description: maintain operator property that results from executing aggregation operator, and generate corresponding physical operator. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
as for the implementation of avg() based on sum()/count(), so it's necessary to change the output_schema of private aggregation in kLocalAggReparGlobalAgg aggregation style. Note: kReparAndGlobalAgg node isn't implemented. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v AggregationStyle\:claims::logical_operator::LogicalAggregation}
{\xe \v claims::logical_operator::LogicalAggregation\:AggregationStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b claims::logical_operator::LogicalAggregation::AggregationStyle}}}
\par
{\bkmkstart AAAAAAAEKC}
{\bkmkend AAAAAAAEKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
AggregationStyle describe the implementation of aggregation judged from whether the data distribution agrees with the group by attributes or the data is local. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LogicalAggregation\:claims::logical_operator::LogicalAggregation}
{\xe \v claims::logical_operator::LogicalAggregation\:LogicalAggregation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
claims::logical_operator::LogicalAggregation::LogicalAggregation (std::vector< {\b Attribute} > {\i group_by_attribute_list}, std::vector< {\b Attribute} > {\i aggregation_attribute_list}, std::vector< BlockStreamAggregationIterator::State::aggregation > {\i aggregation_function_list}, {\b LogicalOperator} * {\i child})}}
\par
{\bkmkstart AAAAAAAEKD}
{\bkmkend AAAAAAAEKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the default construct method of Aggregation. This logical operator creates a new plan context. group_by_attribute can be empty if it is scalar aggregation. count(*) aggregation can be expressed as 'count' aggregation function along with {\b Attribute(ATTRIBUTE_ANY)} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetPhysicalPlan\:claims::logical_operator::LogicalAggregation}
{\xe \v claims::logical_operator::LogicalAggregation\:GetPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BlockStreamIteratorBase} * claims::logical_operator::LogicalAggregation::GetPhysicalPlan (const unsigned & {\i block_size}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEKE}
{\bkmkend AAAAAAAEKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
generate corresponding physical plan tree, mainly set necessary state.\par
Note: if group_by_attribute_list_ is empty, the partition key is ATTRIBUTE_NULL \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
scalar aggregation allows parallel partitions to be partitioned in any fashion. In the current implementation, we use the first aggregation attribute as the partition attribute.\par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::LogicalOperator::GetPhysicalPlan(), claims::logical_operator::LogicalOperator::GetPlanContext(), GetPlanContext(), and Config::initial_degree_of_parallelism.}\par
}
{\xe \v GetPlanContext\:claims::logical_operator::LogicalAggregation}
{\xe \v claims::logical_operator::LogicalAggregation\:GetPlanContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PlanContext} claims::logical_operator::LogicalAggregation::GetPlanContext (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEKF}
{\bkmkend AAAAAAAEKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get plan context resulting from executing aggregation operator. including corresponding attribute_list and property with partition info and communication cost. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
repartition aggregation is currently simplified.\par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::PlanContext::GetAggregatedDatasize(), and claims::logical_operator::LogicalOperator::GetPlanContext().}\par
{
Referenced by GetPhysicalPlan().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_aggregation.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_aggregation.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::LogicalCrossJoin Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::LogicalCrossJoin}
{\xe \v claims::logical_operator::LogicalCrossJoin}
{\bkmkstart AAAAAAAEKG}
{\bkmkend AAAAAAAEKG}
Inheritance diagram for claims::logical_operator::LogicalCrossJoin:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclaims_1_1logical__query__plan_1_1LogicalCrossJoin.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LogicalCrossJoin} ({\b LogicalOperator} *left_child, {\b LogicalOperator} *right_child){\bkmkstart AAAAAAAEKH}
{\bkmkend AAAAAAAEKH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlanContext} {\b GetPlanContext} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: return the output of the plan context of the dedicated operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BlockStreamIteratorBase} * {\b GetPhysicalPlan} (const unsigned &blocksize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: get the sub physical execution plan of the current local operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (int level=0) const {\bkmkstart AAAAAAAEKI}
{\bkmkend AAAAAAAEKI}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b JoinPolicy} \{ {\b kUninitialized}, 
{\b kLeftBroadcast}, 
{\b kRightBroadcast}, 
{\b kLocalJoin}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_join_policy_} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: get the decided join police. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v JoinPolicy\:claims::logical_operator::LogicalCrossJoin}
{\xe \v claims::logical_operator::LogicalCrossJoin\:JoinPolicy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b claims::logical_operator::LogicalCrossJoin::JoinPolicy}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEKJ}
{\bkmkend AAAAAAAEKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The enum JoinPolicy is to enumerate the join policy used in the Cartesian product, it includes: KLocalJoin: local join which joined on the local node leftbroadcast: which broadcast the left table to the nodes which contains the partitions of the right table rightbroadcast: which broadcast the right table to the nodes which contains the partitions of the left table \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_join_policy_\:claims::logical_operator::LogicalCrossJoin}
{\xe \v claims::logical_operator::LogicalCrossJoin\:get_join_policy_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int claims::logical_operator::LogicalCrossJoin::get_join_policy_ (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEKK}
{\bkmkend AAAAAAAEKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: get the decided join police. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i @return} \cell }{error no or the decided join police in the cross join\cell }
{\row }
}
\'A0 (additional) \par
}}
{\xe \v GetPhysicalPlan\:claims::logical_operator::LogicalCrossJoin}
{\xe \v claims::logical_operator::LogicalCrossJoin\:GetPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BlockStreamIteratorBase} * claims::logical_operator::LogicalCrossJoin::GetPhysicalPlan (const unsigned & {\i block_size}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEKL}
{\bkmkend AAAAAAAEKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: get the sub physical execution plan of the current local operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i @return} \cell }{\cell }
{\row }
}
\'A0 (additional) \par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References GetPlanContext(), and claims::logical_operator::LogicalOperator::GetPlanContext().}\par
}
{\xe \v GetPlanContext\:claims::logical_operator::LogicalCrossJoin}
{\xe \v claims::logical_operator::LogicalCrossJoin\:GetPlanContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PlanContext} claims::logical_operator::LogicalCrossJoin::GetPlanContext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEKM}
{\bkmkend AAAAAAAEKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: return the output of the plan context of the dedicated operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i @return} \cell }{\cell }
{\row }
}
\'A0 (additional) \par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::PlanContext::GetAggregatedDatasize(), and claims::logical_operator::LogicalOperator::GetPlanContext().}\par
{
Referenced by GetPhysicalPlan().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_cross_join.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_cross_join.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LogicalCSBIndexBuilding Class Reference\par \pard\plain 
{\tc\tcl2 \v LogicalCSBIndexBuilding}
{\xe \v LogicalCSBIndexBuilding}
{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
Inheritance diagram for LogicalCSBIndexBuilding:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLogicalCSBIndexBuilding.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LogicalCSBIndexBuilding} ({\b ProjectionID} projection_id, {\b Attribute} index_attr, std::string index_name){\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlanContext} {\b GetPlanContext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BlockStreamIteratorBase} * {\b GetPhysicalPlan} (const unsigned &)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetOptimalPhysicalPlan} ({\b Requirement} requirement, {\b PhysicalPlanDescriptor} &physical_plan_descriptor, const unsigned &block_size=4096 *1024)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetOptimalPhysicalPlan\:LogicalCSBIndexBuilding}
{\xe \v LogicalCSBIndexBuilding\:GetOptimalPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LogicalCSBIndexBuilding::GetOptimalPhysicalPlan ({\b Requirement} {\i requirement}, {\b PhysicalPlanDescriptor} & {\i physical_plan_descriptor}, const unsigned & {\i block_size} = {\f2 4096*1024}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get the optimal Physical plan that meets the requirement. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if find physical plan that meets the requirement and store the physical plan and its corresponding information in physical_plan_descriptor. \par
}}{
Reimplemented from {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetPhysicalPlan\:LogicalCSBIndexBuilding}
{\xe \v LogicalCSBIndexBuilding\:GetPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BlockStreamIteratorBase} * LogicalCSBIndexBuilding::GetPhysicalPlan (const unsigned & ){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
generate the iterator tree based on the computed plan_context. Hence, this function can only be called after the calling of {\b GetPlanContext()}. \par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetPlanContext\:LogicalCSBIndexBuilding}
{\xe \v LogicalCSBIndexBuilding\:GetPlanContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PlanContext} LogicalCSBIndexBuilding::GetPlanContext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get the plan context which describes the property of the data after having executed corresponding operator. \par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References ProjectionBinding::BindingEntireProjection().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/LogicalCSBIndexBuilding.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/LogicalCSBIndexBuilding.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::LogicalEqualJoin Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::LogicalEqualJoin}
{\xe \v claims::logical_operator::LogicalEqualJoin}
{\bkmkstart AAAAAAAEKN}
{\bkmkend AAAAAAAEKN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate equal join logical plan. }}\par
{
{\f2 #include <logical_equal_join.h>}}\par
Inheritance diagram for claims::logical_operator::LogicalEqualJoin:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclaims_1_1logical__query__plan_1_1LogicalEqualJoin.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b JoinPair}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b JoinPair} contains two attributes to be joined. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b JoinPolicy} \{ {\b kNull}, 
{\b kNoRepartition}, 
{\b kLeftRepartition}, 
{\b kRightRepartition}, 
{\b kCompleteRepartition}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LogicalEqualJoin} (std::vector< {\b JoinPair} >, {\b LogicalOperator} *left_input, {\b LogicalOperator} *right_input)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description:Create a EqualJoin implement. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlanContext} {\b GetPlanContext} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Get the child information. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BlockStreamIteratorBase} * {\b GetPhysicalPlan} (const unsigned &blocksize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetOptimalPhysicalPlan} ({\b Requirement} requirement, {\b PhysicalPlanDescriptor} &physical_plan_descriptor, const unsigned &block_size=4096 *1024)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate equal join logical plan. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EqualJoin operator achieves the join statement tables.It requires equivalent conditions.As for implementation, one is to send all data to a same machine.But the generated table will be too big to store and it is inefficient.So we partition the data to several machines.Each of them does some join and return. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LogicalEqualJoin\:claims::logical_operator::LogicalEqualJoin}
{\xe \v claims::logical_operator::LogicalEqualJoin\:LogicalEqualJoin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
claims::logical_operator::LogicalEqualJoin::LogicalEqualJoin (std::vector< {\b JoinPair} > {\i joinpair_list}, {\b LogicalOperator} * {\i left_input}, {\b LogicalOperator} * {\i right_input})}}
\par
{\bkmkstart AAAAAAAEKO}
{\bkmkend AAAAAAAEKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description:Create a EqualJoin implement. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::vector<JoinPair>} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i LogicalOperator*} \cell }{left_input \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i LogicalOperator*} \cell }{right_input \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetOptimalPhysicalPlan\:claims::logical_operator::LogicalEqualJoin}
{\xe \v claims::logical_operator::LogicalEqualJoin\:GetOptimalPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool claims::logical_operator::LogicalEqualJoin::GetOptimalPhysicalPlan ({\b Requirement} {\i requirement}, {\b PhysicalPlanDescriptor} & {\i physical_plan_descriptor}, const unsigned & {\i block_size} = {\f2 4096\~ *\~ 1024}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEKP}
{\bkmkend AAAAAAAEKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get the optimal Physical plan that meets the requirement. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if find physical plan that meets the requirement and store the physical plan and its corresponding information in physical_plan_descriptor. \par
}}{
Reimplemented from {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetPhysicalPlan\:claims::logical_operator::LogicalEqualJoin}
{\xe \v claims::logical_operator::LogicalEqualJoin\:GetPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BlockStreamIteratorBase} * claims::logical_operator::LogicalEqualJoin::GetPhysicalPlan (const unsigned & ){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEKQ}
{\bkmkend AAAAAAAEKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
generate the iterator tree based on the computed plan_context. Hence, this function can only be called after the calling of {\b GetPlanContext()}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In the initial implementation, I set the bucket size to be up round to cache line size, e.g., 64Bytes. Finally, I realized that different from aggregation,the hash table bucket in the build phase of hash join is filled very quickly and hence a * a relatively large bucket size could reduce the number of overflowing buckets and avoid the random memory access caused by acceesing overflowing buckets.\par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::LogicalOperator::GetPhysicalPlan(), claims::logical_operator::LogicalOperator::GetPlanContext(), GetPlanContext(), and Config::initial_degree_of_parallelism.}\par
}
{\xe \v GetPlanContext\:claims::logical_operator::LogicalEqualJoin}
{\xe \v claims::logical_operator::LogicalEqualJoin\:GetPlanContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PlanContext} claims::logical_operator::LogicalEqualJoin::GetPlanContext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEKR}
{\bkmkend AAAAAAAEKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Get the child information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The mostly important member is "property" and "attributes
list". When getting data from child, we make some choices according to JoinPolice. JoinPolice is generated from canLeverageHashPartition(), isEqualCondition(), hasSamePartition(). If all of them is true, it means partition_key in the join_list and two partition_keys in the same join_pair.Besides, it they have partitioned to the same machine.So we don't need repartition, and JoinPolice = kNodeRepartition. If both canLeverageHashPartition()s are true, but isEqualCondition() or hasSamePartition() is false, the machine which has smaller data will send its data to another according to decideLeftOrRightRepartition(). If canLeverageHashPartition(left) is true but canLeverageHashPartition (right) is false, right nodes will be repartitioned. join_police_ = kRightRepartition If canLeverageHashPartition(left) is false but canLeverageHashPartition (right) is true, left nodes will be repartitioned. oin_police_ = kLeftRepartition If both canLeverageHashPartition()s are false, left and right nodes will be repartitioned. join_police_ = kCompleteRepartition \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
in the current implementation, only the hash join is considered\par
finally, construct the output data flow according to the join police\par
Use the left partitioner as the output dataflow partitioner. TODO(admin): In fact, the output dataflow partitioner should contains both left partitioner and right partitioner.\par
Set the generated data size. Currently, we assume the generated data size is the sum of input data volume. TODO(admin): Some reasonable output size estimation is needed.\par
set the generated data size\par
TODO(admin): the repartition strategy (e.g., the degree of parallelism and the partition function) in such case is not decided by any child data flow. Additional optimization can be made by adopting the partition strategy which benefits the remaining work.\par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::LogicalOperator::GetPlanContext(), and claims::logical_operator::PlanPartitioner::HasSamePartitionLocation().}\par
{
Referenced by GetPhysicalPlan().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_equal_join.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_equal_join.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::LogicalFilter Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::LogicalFilter}
{\xe \v claims::logical_operator::LogicalFilter}
{\bkmkstart AAAAAAAEKW}
{\bkmkend AAAAAAAEKW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Logical Operator "filter", is used to screen out the info we don't need, so as to lessen time cost. }}\par
{
{\f2 #include <logical_filter.h>}}\par
Inheritance diagram for claims::logical_operator::LogicalFilter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclaims_1_1logical__query__plan_1_1LogicalFilter.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LogicalFilter} ({\b LogicalOperator} *child, vector< {\b QNode} * > qual)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Construction. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\b ~LogicalFilter} (){\bkmkstart AAAAAAAEKX}
{\bkmkend AAAAAAAEKX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Destruction. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlanContext} {\b GetPlanContext} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: To get the plan context from its child logical operator, operates on it, thus give it to its father logical operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BlockStreamIteratorBase} * {\b GetPhysicalPlan} (const unsigned &blocksize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: To get the Iterator Tree from its child logical operator, generates a state for establishing a physical execution plan, finally give it to its father logical operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetOptimalPhysicalPlan} ({\b Requirement} requirement, {\b PhysicalPlanDescriptor} &physical_plan_descriptor, const unsigned &block_size=4096 *1024)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Print} (int level=0) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: To print information of qual_. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Logical Operator "filter", is used to screen out the info we don't need, so as to lessen time cost. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LogicalFilter\:claims::logical_operator::LogicalFilter}
{\xe \v claims::logical_operator::LogicalFilter\:LogicalFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
claims::logical_operator::LogicalFilter::LogicalFilter ({\b LogicalOperator} * {\i child}, vector< {\b QNode} * > {\i qual})}}
\par
{\bkmkstart AAAAAAAEKY}
{\bkmkend AAAAAAAEKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Construction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i child} \cell }{: Its child logical operator. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i qual,:} \cell }{Pointing to the root of the expression tree. \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetOptimalPhysicalPlan\:claims::logical_operator::LogicalFilter}
{\xe \v claims::logical_operator::LogicalFilter\:GetOptimalPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool claims::logical_operator::LogicalFilter::GetOptimalPhysicalPlan ({\b Requirement} {\i requirement}, {\b PhysicalPlanDescriptor} & {\i physical_plan_descriptor}, const unsigned & {\i block_size} = {\f2 4096\~ *\~ 1024}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEKZ}
{\bkmkend AAAAAAAEKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get the optimal Physical plan that meets the requirement. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if find physical plan that meets the requirement and store the physical plan and its corresponding information in physical_plan_descriptor. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The input plan context should be transfered in the network to meet the requirement. TODO(wangli): Implement OneToOne Exchange\par
}{
Reimplemented from {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::PlanContext::GetAggregatedDatasize(), claims::logical_operator::LogicalOperator::GetOptimalPhysicalPlan(), GetPlanContext(), and claims::logical_operator::Requirement::requireNetworkTransfer().}\par
}
{\xe \v GetPhysicalPlan\:claims::logical_operator::LogicalFilter}
{\xe \v claims::logical_operator::LogicalFilter\:GetPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BlockStreamIteratorBase} * claims::logical_operator::LogicalFilter::GetPhysicalPlan (const unsigned & {\i blocksize}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELA}
{\bkmkend AAAAAAAELA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: To get the Iterator Tree from its child logical operator, generates a state for establishing a physical execution plan, finally give it to its father logical operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i blocksize,:} \cell }{The size of block in the CLAIMS project. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid BlockStreamIteratorBase*: A block stream iterator pointer, pointing to the root node of filter's iterator tree. \par
}}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::LogicalOperator::GetPhysicalPlan(), and GetPlanContext().}\par
}
{\xe \v GetPlanContext\:claims::logical_operator::LogicalFilter}
{\xe \v claims::logical_operator::LogicalFilter\:GetPlanContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PlanContext} claims::logical_operator::LogicalFilter::GetPlanContext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELB}
{\bkmkend AAAAAAAELB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: To get the plan context from its child logical operator, operates on it, thus give it to its father logical operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b PlanContext} \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In the currently implementation, we assume that the boolean operator between each {\b AttributeComparator} is "AND".\par
Should predict the volume of data that passes the filter. TODO(wangli): A precious prediction is needed based on the statistic of the input data, which may be maintained in the catalog module.\par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::LogicalOperator::GetPlanContext().}\par
{
Referenced by GetOptimalPhysicalPlan(), and GetPhysicalPlan().}\par
}
{\xe \v Print\:claims::logical_operator::LogicalFilter}
{\xe \v claims::logical_operator::LogicalFilter\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void claims::logical_operator::LogicalFilter::Print (int {\i level} = {\f2 0}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELC}
{\bkmkend AAAAAAAELC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: To print information of qual_. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i level,:} \cell }{As an index. \cell }
{\row }
}
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_filter.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_filter.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LogicalIndexScan Class Reference\par \pard\plain 
{\tc\tcl2 \v LogicalIndexScan}
{\xe \v LogicalIndexScan}
{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
Inheritance diagram for LogicalIndexScan:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classLogicalIndexScan.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LogicalIndexScan} ({\b ProjectionID} projection_id, {\b Attribute} index_attr, vector< {\b IndexScanIterator::query_range} > q_range){\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlanContext} {\b GetPlanContext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BlockStreamIteratorBase} * {\b GetPhysicalPlan} (const unsigned &blocksize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetOptimalPhysicalPlan} ({\b Requirement} requirement, {\b PhysicalPlanDescriptor} &physical_plan_descriptor, const unsigned &block_size=4096 *1024)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (int level=0) const {\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetOptimalPhysicalPlan\:LogicalIndexScan}
{\xe \v LogicalIndexScan\:GetOptimalPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LogicalIndexScan::GetOptimalPhysicalPlan ({\b Requirement} {\i requirement}, {\b PhysicalPlanDescriptor} & {\i physical_plan_descriptor}, const unsigned & {\i block_size} = {\f2 4096*1024}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get the optimal Physical plan that meets the requirement. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if find physical plan that meets the requirement and store the physical plan and its corresponding information in physical_plan_descriptor. \par
}}{
Reimplemented from {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetPhysicalPlan\:LogicalIndexScan}
{\xe \v LogicalIndexScan\:GetPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BlockStreamIteratorBase} * LogicalIndexScan::GetPhysicalPlan (const unsigned & ){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
generate the iterator tree based on the computed plan_context. Hence, this function can only be called after the calling of {\b GetPlanContext()}. \par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetPlanContext\:LogicalIndexScan}
{\xe \v LogicalIndexScan\:GetPlanContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PlanContext} LogicalIndexScan::GetPlanContext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get the plan context which describes the property of the data after having executed corresponding operator. \par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References ProjectionBinding::BindingEntireProjection().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/LogicalIndexScan.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/LogicalIndexScan.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::LogicalOperator Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::LogicalOperator}
{\xe \v claims::logical_operator::LogicalOperator}
{\bkmkstart AAAAAAAELD}
{\bkmkend AAAAAAAELD}
\par
{
{\f2 #include <logical_operator.h>}}\par
Inheritance diagram for claims::logical_operator::LogicalOperator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclaims_1_1logical__query__plan_1_1LogicalOperator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b PlanContext} {\b GetPlanContext} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b BlockStreamIteratorBase} * {\b GetPhysicalPlan} (const unsigned &)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b GetOptimalPhysicalPlan} ({\b Requirement} requirement, {\b PhysicalPlanDescriptor} &physical_plan_descriptor, const unsigned &block_size=4096 *1024)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b Print} (int level=0) const =0{\bkmkstart AAAAAAAELO}
{\bkmkend AAAAAAAELO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b GetSchema} (const std::vector< {\b Attribute} > &) const {\bkmkstart AAAAAAAELP}
{\bkmkend AAAAAAAELP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b GetSchema} (const std::vector< {\b Attribute} > &, const std::vector< {\b Attribute} > &) const {\bkmkstart AAAAAAAELQ}
{\bkmkend AAAAAAAELQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< NodeID > {\b GetInvolvedNodeID} (const {\b PlanPartitioner} &) const {\bkmkstart AAAAAAAELR}
{\bkmkend AAAAAAAELR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< NodeIP > {\b ConvertNodeIDListToNodeIPList} (const std::vector< NodeID > &) const {\bkmkstart AAAAAAAELS}
{\bkmkend AAAAAAAELS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PhysicalPlanDescriptor} {\b GetBestPhysicalPlanDescriptor} (const std::vector< {\b PhysicalPlanDescriptor} >) const {\bkmkstart AAAAAAAELT}
{\bkmkend AAAAAAAELT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b GetIdInAttributeList} (const std::vector< {\b Attribute} > &attributes, const {\b Attribute} &attribute) const {\bkmkstart AAAAAAAELU}
{\bkmkend AAAAAAAELU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_operator_type} (OperatorType operator_type){\bkmkstart AAAAAAAELV}
{\bkmkend AAAAAAAELV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b LogicalOperator} is the base class of all logical operator. {\b GetPlanContext()} aims at maintaining the property of the data after completing every operator of plan. the property contains the output attributes, partition key, cardinality and communication cost. {\b GetPhysicalPlan()} adds current physical operator into the whole plan, result into a plan tree. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetOptimalPhysicalPlan\:claims::logical_operator::LogicalOperator}
{\xe \v claims::logical_operator::LogicalOperator\:GetOptimalPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool claims::logical_operator::LogicalOperator::GetOptimalPhysicalPlan ({\b Requirement} {\i requirement}, {\b PhysicalPlanDescriptor} & {\i physical_plan_descriptor}, const unsigned & {\i block_size} = {\f2 4096\~ *\~ 1024}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get the optimal Physical plan that meets the requirement. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if find physical plan that meets the requirement and store the physical plan and its corresponding information in physical_plan_descriptor. \par
}}{
Reimplemented in {\b claims::logical_operator::LogicalSort} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalEqualJoin} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalQueryPlanRoot} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalFilter} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalProject} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalScan} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b LogicalCSBIndexBuilding} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRX \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b LogicalIndexScan} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by claims::logical_operator::LogicalFilter::GetOptimalPhysicalPlan(), and claims::logical_operator::LogicalQueryPlanRoot::GetOptimalPhysicalPlan().}\par
}
{\xe \v GetPhysicalPlan\:claims::logical_operator::LogicalOperator}
{\xe \v claims::logical_operator::LogicalOperator\:GetPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b BlockStreamIteratorBase}* claims::logical_operator::LogicalOperator::GetPhysicalPlan (const unsigned & ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
generate the iterator tree based on the computed plan_context. Hence, this function can only be called after the calling of {\b GetPlanContext()}. \par
}{
Implemented in {\b claims::logical_operator::LogicalEqualJoin} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalSort} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalAggregation} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalFilter} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalQueryPlanRoot} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalProject} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalScan} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalCrossJoin} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b LogicalCSBIndexBuilding} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b LogicalIndexScan} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by claims::logical_operator::LogicalProject::GetPhysicalPlan(), claims::logical_operator::LogicalQueryPlanRoot::GetPhysicalPlan(), claims::logical_operator::LogicalFilter::GetPhysicalPlan(), claims::logical_operator::LogicalAggregation::GetPhysicalPlan(), claims::logical_operator::LogicalSort::GetPhysicalPlan(), and claims::logical_operator::LogicalEqualJoin::GetPhysicalPlan().}\par
}
{\xe \v GetPlanContext\:claims::logical_operator::LogicalOperator}
{\xe \v claims::logical_operator::LogicalOperator\:GetPlanContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b PlanContext} claims::logical_operator::LogicalOperator::GetPlanContext (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get the plan context which describes the property of the data after having executed corresponding operator. \par
}{
Implemented in {\b claims::logical_operator::LogicalEqualJoin} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalAggregation} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalSort} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEME \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalQueryPlanRoot} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalFilter} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalProject} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalScan} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b claims::logical_operator::LogicalCrossJoin} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEKM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b LogicalCSBIndexBuilding} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSB \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b LogicalIndexScan} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by claims::logical_operator::LogicalCrossJoin::GetPhysicalPlan(), claims::logical_operator::LogicalProject::GetPhysicalPlan(), claims::logical_operator::LogicalAggregation::GetPhysicalPlan(), claims::logical_operator::LogicalEqualJoin::GetPhysicalPlan(), claims::logical_operator::LogicalCrossJoin::GetPlanContext(), claims::logical_operator::LogicalProject::GetPlanContext(), claims::logical_operator::LogicalFilter::GetPlanContext(), claims::logical_operator::LogicalQueryPlanRoot::GetPlanContext(), claims::logical_operator::LogicalSort::GetPlanContext(), claims::logical_operator::LogicalAggregation::GetPlanContext(), and claims::logical_operator::LogicalEqualJoin::GetPlanContext().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_operator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_operator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::LogicalProject Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::LogicalProject}
{\xe \v claims::logical_operator::LogicalProject}
{\bkmkstart AAAAAAAEMI}
{\bkmkend AAAAAAAEMI}
Inheritance diagram for claims::logical_operator::LogicalProject:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclaims_1_1logical__query__plan_1_1LogicalProject.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LogicalProject} ({\b LogicalOperator} *child, vector< {\b QNode} * > expression_tree){\bkmkstart AAAAAAAEMJ}
{\bkmkend AAAAAAAEMJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlanContext} {\b GetPlanContext} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description : construct a {\b PlanContext} from child. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BlockStreamIteratorBase} * {\b GetPhysicalPlan} (const unsigned &kBlockSize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: generate a few physical operations according to this logical operation. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b GetOptimalPhysicalPlan} ({\b Requirement} requirement, {\b PhysicalPlanDescriptor} &physical_plan_descriptor, const unsigned &kBlockSize=4096 *1024)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Print} (int level=0) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description:Print the schema. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetOptimalPhysicalPlan\:claims::logical_operator::LogicalProject}
{\xe \v claims::logical_operator::LogicalProject\:GetOptimalPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool claims::logical_operator::LogicalProject::GetOptimalPhysicalPlan ({\b Requirement} {\i requirement}, {\b PhysicalPlanDescriptor} & {\i physical_plan_descriptor}, const unsigned & {\i block_size} = {\f2 4096\~ *\~ 1024}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELY}
{\bkmkend AAAAAAAELY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get the optimal Physical plan that meets the requirement. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if find physical plan that meets the requirement and store the physical plan and its corresponding information in physical_plan_descriptor. \par
}}{
Reimplemented from {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetPhysicalPlan\:claims::logical_operator::LogicalProject}
{\xe \v claims::logical_operator::LogicalProject\:GetPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BlockStreamIteratorBase} * claims::logical_operator::LogicalProject::GetPhysicalPlan (const unsigned & {\i kBlockSize}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEMC}
{\bkmkend AAAAAAAEMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: generate a few physical operations according to this logical operation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i block_size} \cell }{: give the size of block in physical plan \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the total physical plan include the physical plan generated by child operation \par
}}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::LogicalOperator::GetPhysicalPlan(), GetPlanContext(), and claims::logical_operator::LogicalOperator::GetPlanContext().}\par
}
{\xe \v GetPlanContext\:claims::logical_operator::LogicalProject}
{\xe \v claims::logical_operator::LogicalProject\:GetPlanContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PlanContext} claims::logical_operator::LogicalProject::GetPlanContext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEMG}
{\bkmkend AAAAAAAEMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description : construct a {\b PlanContext} from child. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid : constructed plan_context \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
set commnication_cost and partitioner of the {\b PlanContext} to be returned from {\b PlanContext} of child\par
if the expression type is compare,then the new column will be boolean type, else will be it's actual type according to the variable\par
if the return type is a String value,then we have to calculate the length of the string else just construct a column having the same type as the return type\par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::LogicalOperator::GetPlanContext().}\par
{
Referenced by GetPhysicalPlan().}\par
}
{\xe \v Print\:claims::logical_operator::LogicalProject}
{\xe \v claims::logical_operator::LogicalProject\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void claims::logical_operator::LogicalProject::Print (int {\i level} = {\f2 0}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEMK}
{\bkmkend AAAAAAAEMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description:Print the schema. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i level:initialized} \cell }{to zero \cell }
{\row }
}
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_project.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_project.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::LogicalQueryPlanRoot Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::LogicalQueryPlanRoot}
{\xe \v claims::logical_operator::LogicalQueryPlanRoot}
{\bkmkstart AAAAAAAEML}
{\bkmkend AAAAAAAEML}
Inheritance diagram for claims::logical_operator::LogicalQueryPlanRoot:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclaims_1_1logical__query__plan_1_1LogicalQueryPlanRoot.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b OutputStyle} \{ {\b kPrint}, 
{\b kPerformance}, 
{\b kResultCollector}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LogicalQueryPlanRoot} (NodeID collecter_node_id, {\b LogicalOperator} *child, const {\b OutputStyle} &fashion=kPerformance, {\b LimitConstraint} limit_constraint={\b LimitConstraint}())\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlanContext} {\b GetPlanContext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BlockStreamIteratorBase} * {\b GetPhysicalPlan} (const unsigned &)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: generate a few physical operators according to this logical operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetOptimalPhysicalPlan} ({\b Requirement} requirement, {\b PhysicalPlanDescriptor} &physical_plan_descriptor, const unsigned &block_size=4096 *1024)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: NOT USED NOW !!! get the optimal physical plan. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Print} (int level=0) const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: print the limit info and call child to print their logical operator info. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v OutputStyle\:claims::logical_operator::LogicalQueryPlanRoot}
{\xe \v claims::logical_operator::LogicalQueryPlanRoot\:OutputStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b claims::logical_operator::LogicalQueryPlanRoot::OutputStyle}}}
\par
{\bkmkstart AAAAAAAEMM}
{\bkmkend AAAAAAAEMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
three styles decide which one the top physical operator is: 1) {\b BlockStreamPrint}: print result on console directly 2) {\b BlockStreamPerformanceMonitorTop}: calculate the real-time performance and print 3) {\b BlockStreamResultCollector} : collect result and store it in block buffer, then return to client \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LogicalQueryPlanRoot\:claims::logical_operator::LogicalQueryPlanRoot}
{\xe \v claims::logical_operator::LogicalQueryPlanRoot\:LogicalQueryPlanRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
claims::logical_operator::LogicalQueryPlanRoot::LogicalQueryPlanRoot (NodeID {\i collecter_node_id}, {\b LogicalOperator} * {\i child}, const {\b OutputStyle} & {\i fashion} = {\f2 kPerformance}, {\b LimitConstraint} {\i limit_constraint} = {\f2 {\b LimitConstraint}()})}}
\par
{\bkmkstart AAAAAAAEMN}
{\bkmkend AAAAAAAEMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i collecter_node_id} \cell }{: specify the id of node that return result to client, which is called master \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i child} \cell }{: the child logical operator of this operator \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fashion} \cell }{: decide the top physical operator ({\b BlockStreamPrint},{\b BlockStreamPerformanceMonitorTop},{\b BlockStreamResultCollector}) generated from this logical operator limit_constraint : apply the necessary info about limit, default value is no limit \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetOptimalPhysicalPlan\:claims::logical_operator::LogicalQueryPlanRoot}
{\xe \v claims::logical_operator::LogicalQueryPlanRoot\:GetOptimalPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool claims::logical_operator::LogicalQueryPlanRoot::GetOptimalPhysicalPlan ({\b Requirement} {\i requirement}, {\b PhysicalPlanDescriptor} & {\i physical_plan_descriptor}, const unsigned & {\i block_size} = {\f2 4096\~ *\~ 1024}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELX}
{\bkmkend AAAAAAAELX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: NOT USED NOW !!! get the optimal physical plan. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
no requirement\par
with requirement \par
}{
Reimplemented from {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::PlanContext::GetAggregatedDatasize(), claims::logical_operator::LogicalOperator::GetOptimalPhysicalPlan(), claims::logical_operator::Requirement::requireNetworkTransfer(), and claims::logical_operator::Requirement::tryMerge().}\par
}
{\xe \v GetPhysicalPlan\:claims::logical_operator::LogicalQueryPlanRoot}
{\xe \v claims::logical_operator::LogicalQueryPlanRoot\:GetPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BlockStreamIteratorBase} * claims::logical_operator::LogicalQueryPlanRoot::GetPhysicalPlan (const unsigned & {\i block_size}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEMB}
{\bkmkend AAAAAAAEMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: generate a few physical operators according to this logical operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i block_size} \cell }{: give the size of block in physical plan \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the total physical plan include the physical plan generated by child operator\par
}get {\b PlanContext} and child physical plan from child , consider {\b PlanContext}'s partitioner's location and collector, decide whether add expander and exchange operator in physical plan.\par
choose one of three top physical operators depend on fashion_, return complete physical plan \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the number of partitions in the child {\b PlanContext} is 1 and the the location is right in the collector, then exchange is not necessary.\par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::LogicalOperator::GetPhysicalPlan(), GetPlanContext(), and Config::initial_degree_of_parallelism.}\par
}
{\xe \v GetPlanContext\:claims::logical_operator::LogicalQueryPlanRoot}
{\xe \v claims::logical_operator::LogicalQueryPlanRoot\:GetPlanContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PlanContext} claims::logical_operator::LogicalQueryPlanRoot::GetPlanContext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEMF}
{\bkmkend AAAAAAAEMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get {\b PlanContext} from child and return \par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::LogicalOperator::GetPlanContext().}\par
{
Referenced by GetPhysicalPlan().}\par
}
{\xe \v Print\:claims::logical_operator::LogicalQueryPlanRoot}
{\xe \v claims::logical_operator::LogicalQueryPlanRoot\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void claims::logical_operator::LogicalQueryPlanRoot::Print (int {\i level} = {\f2 0}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEMO}
{\bkmkend AAAAAAAEMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: print the limit info and call child to print their logical operator info. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i level} \cell }{: specify the level of this operator, the top level is 0. so this class's level is always 0. level means level*8 space indentation at the begin of line \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_query_plan_root.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_query_plan_root.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::LogicalScan Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::LogicalScan}
{\xe \v claims::logical_operator::LogicalScan}
{\bkmkstart AAAAAAAEMP}
{\bkmkend AAAAAAAEMP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description:This is the implementation of Scan operator in logical layer. Currently, we only choose the third of constructor functions. Through the method of {\b LogicalScan}, we can get data context and a physical operator. }}\par
{
{\f2 #include <logical_scan.h>}}\par
Inheritance diagram for claims::logical_operator::LogicalScan:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclaims_1_1logical__query__plan_1_1LogicalScan.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LogicalScan} (std::vector< {\b Attribute} > attribute_list){\bkmkstart AAAAAAAEMQ}
{\bkmkend AAAAAAAEMQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LogicalScan} (const TableID &){\bkmkstart AAAAAAAEMR}
{\bkmkend AAAAAAAEMR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LogicalScan} ({\b ProjectionDescriptor} *projection, const float sample_rate_=1){\bkmkstart AAAAAAAEMS}
{\bkmkend AAAAAAAEMS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b LogicalScan} (const TableID &, const std::vector< unsigned > &selected_attribute_index_list){\bkmkstart AAAAAAAEMT}
{\bkmkend AAAAAAAEMT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlanContext} {\b GetPlanContext} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
It can generate many projection. We need the smallest cost of projections, so we should choose the best one what we need with traversing scan_attribute_list_. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b GetPhysicalPlan} (const unsigned &){\bkmkstart AAAAAAAEMD}
{\bkmkend AAAAAAAEMD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the value of class state and get instantiation of physical operator to transform logical operator. In the current implementation, all the attributes within the involved projection are read. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetOptimalPhysicalPlan} ({\b Requirement} requirement, {\b PhysicalPlanDescriptor} &physical_plan_descriptor, const unsigned &kBlock_size=4096 *1024)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description:This is the implementation of Scan operator in logical layer. Currently, we only choose the third of constructor functions. Through the method of {\b LogicalScan}, we can get data context and a physical operator. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetOptimalPhysicalPlan\:claims::logical_operator::LogicalScan}
{\xe \v claims::logical_operator::LogicalScan\:GetOptimalPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool claims::logical_operator::LogicalScan::GetOptimalPhysicalPlan ({\b Requirement} {\i requirement}, {\b PhysicalPlanDescriptor} & {\i physical_plan_descriptor}, const unsigned & {\i block_size} = {\f2 4096\~ *\~ 1024}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELZ}
{\bkmkend AAAAAAAELZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get the optimal Physical plan that meets the requirement. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if find physical plan that meets the requirement and store the physical plan and its corresponding information in physical_plan_descriptor. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Currently, the join output size cannot be predicted due to the absence of data statistics. We just use the magic number as following\par
}{
Reimplemented from {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::PlanContext::GetAggregatedDatasize(), GetPlanContext(), and claims::logical_operator::Requirement::requireNetworkTransfer().}\par
}
{\xe \v GetPlanContext\:claims::logical_operator::LogicalScan}
{\xe \v claims::logical_operator::LogicalScan\:GetPlanContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PlanContext} claims::logical_operator::LogicalScan::GetPlanContext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEMH}
{\bkmkend AAAAAAAEMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
It can generate many projection. We need the smallest cost of projections, so we should choose the best one what we need with traversing scan_attribute_list_. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
build the {\b PlanContext}\par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References ProjectionBinding::BindingEntireProjection(), and ProjectionDescriptor::getProjectionCost().}\par
{
Referenced by GetOptimalPhysicalPlan().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_scan.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_scan.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::LogicalSort Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::LogicalSort}
{\xe \v claims::logical_operator::LogicalSort}
{\bkmkstart AAAAAAAEMU}
{\bkmkend AAAAAAAEMU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b LogicalSort} contains the information of attributes to be sorted. And it describe how to generate Sort Operator. }}\par
{
{\f2 #include <logical_sort.h>}}\par
Inheritance diagram for claims::logical_operator::LogicalSort:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclaims_1_1logical__query__plan_1_1LogicalSort.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b OrderByAttr}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description: {\b OrderByAttr} contains the table information and its sort direction.We use ASC as default. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LogicalSort} ({\b LogicalOperator} *child, vector< {\b LogicalSort::OrderByAttr} * > order_by_attr)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Create a Sort operator. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlanContext} {\b GetPlanContext} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Get the schema and child information. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BlockStreamIteratorBase} * {\b GetPhysicalPlan} (const unsigned &blocksize)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Generate logical query plan and return physical operator instance. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetOrderByKey} (const char *, const char *)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Get the column number of the given table name and attributes name. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b GetOrderByKey} (const char *){\bkmkstart AAAAAAAEMV}
{\bkmkend AAAAAAAEMV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b PrintOrderByAttr} () const {\bkmkstart AAAAAAAEMW}
{\bkmkend AAAAAAAEMW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Print} (int level=0) const {\bkmkstart AAAAAAAEMX}
{\bkmkend AAAAAAAEMX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b GetOptimalPhysicalPlan} ({\b Requirement} requirement, {\b PhysicalPlanDescriptor} &physical_plan_descriptor, const unsigned &block_size=4096 *1024)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b LogicalSort} contains the information of attributes to be sorted. And it describe how to generate Sort Operator. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b LogicalSort} have inner struct '{\b OrderByAttr}' which contains the tablename and direction of sort(ASC or DESC). getIteratorTree() generates the logical plan.getIteratorTree() uses getPlanContext() to get the data from its child. When we achieve sort logical plan, getOrderKey() help us return the column number of the attributes we need to sort. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LogicalSort\:claims::logical_operator::LogicalSort}
{\xe \v claims::logical_operator::LogicalSort\:LogicalSort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
claims::logical_operator::LogicalSort::LogicalSort ({\b LogicalOperator} * {\i child}, vector< {\b LogicalSort::OrderByAttr} * > {\i order_by_attr})}}
\par
{\bkmkstart AAAAAAAEMY}
{\bkmkend AAAAAAAEMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Create a Sort operator. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b LogicalOperator}} \cell }{*child_. The pointer of its child. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vector<LogicalSort::OrderByAttr} \cell }{*> order_by_attr_. This contains the attributes list to be sorted. \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetOptimalPhysicalPlan\:claims::logical_operator::LogicalSort}
{\xe \v claims::logical_operator::LogicalSort\:GetOptimalPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool claims::logical_operator::LogicalSort::GetOptimalPhysicalPlan ({\b Requirement} {\i requirement}, {\b PhysicalPlanDescriptor} & {\i physical_plan_descriptor}, const unsigned & {\i block_size} = {\f2 4096\~ *\~ 1024}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELW}
{\bkmkend AAAAAAAELW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
get the optimal Physical plan that meets the requirement. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if find physical plan that meets the requirement and store the physical plan and its corresponding information in physical_plan_descriptor. \par
}}{
Reimplemented from {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetOrderByKey\:claims::logical_operator::LogicalSort}
{\xe \v claims::logical_operator::LogicalSort\:GetOrderByKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int claims::logical_operator::LogicalSort::GetOrderByKey (const char * {\i table_name}, const char * {\i attr})}}
\par
{\bkmkstart AAAAAAAEMZ}
{\bkmkend AAAAAAAEMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Get the column number of the given table name and attributes name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i const} \cell }{char* \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i const} \cell }{char* \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid int \par
}}{
Referenced by GetPhysicalPlan().}\par
}
{\xe \v GetPhysicalPlan\:claims::logical_operator::LogicalSort}
{\xe \v claims::logical_operator::LogicalSort\:GetPhysicalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BlockStreamIteratorBase} * claims::logical_operator::LogicalSort::GetPhysicalPlan (const unsigned & {\i blocksize}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEMA}
{\bkmkend AAAAAAAEMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Generate logical query plan and return physical operator instance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i const} \cell }{unsigned &blocksize. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b BlockStreamIteratorBase} *\par
}\'A0Besides do these initialization we notice that "Sort" is a block operator, so we need to get all data from other nodes. \par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References GetOrderByKey(), claims::logical_operator::LogicalOperator::GetPhysicalPlan(), GetPlanContext(), and Config::initial_degree_of_parallelism.}\par
}
{\xe \v GetPlanContext\:claims::logical_operator::LogicalSort}
{\xe \v claims::logical_operator::LogicalSort\:GetPlanContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PlanContext} claims::logical_operator::LogicalSort::GetPlanContext (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEME}
{\bkmkend AAAAAAAEME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: Get the schema and child information. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The mostly important member is "property" and "attributes
list". \par
}{
Implements {\b claims::logical_operator::LogicalOperator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References claims::logical_operator::LogicalOperator::GetPlanContext().}\par
{
Referenced by GetPhysicalPlan().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_sort.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_sort.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Mapping Class Reference\par \pard\plain 
{\tc\tcl2 \v Mapping}
{\xe \v Mapping}
{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b atomicPushExpressionMapping} (ExpressionMapping &expression_mapping){\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ExpressionMapping {\b atomicPopExpressionMapping} (int i){\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< ExpressionMapping > {\b getMapping} (){\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Mapping.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Mapping.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MatcherMessage Struct Reference\par \pard\plain 
{\tc\tcl2 \v MatcherMessage}
{\xe \v MatcherMessage}
{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b MatcherMessage} (const char *const filename, const char *const bmi){\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\b filenameText} [MATCHER_MESSAGE_FILENAME_LEN]{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\b bmiText} [MATCHER_MESSAGE_BMI_LEN]{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MatcherRespond Struct Reference\par \pard\plain 
{\tc\tcl2 \v MatcherRespond}
{\xe \v MatcherRespond}
{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b MatcherRespond} (const char *const text){\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\b mText} [MATCHER_MESSAGE_PROJECT_LEN]{\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
memory_info Struct Reference\par \pard\plain 
{\tc\tcl2 \v memory_info}
{\xe \v memory_info}
{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b memory_info} (int allo, int used){\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b initialize} (int capacity){\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b take} (int buget){\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b put} (int size){\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b allocated_capacity}{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b used_capacity}{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/ResourceInfo.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MemoryChunkStore Class Reference\par \pard\plain 
{\tc\tcl2 \v MemoryChunkStore}
{\xe \v MemoryChunkStore}
{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b putValue} (string chunkId, void *value){\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b applyChunk} ({\b ChunkID} chunk_id, void *&start_address){\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b returnChunk} (const {\b ChunkID} &chunk_id){\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b updateChunkInfo} (const {\b ChunkID} &chunk_id, const {\b HdfsInMemoryChunk} &chunk_info){\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b getChunk} (string blockId){\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b getChunk} (const {\b ChunkID} &chunk_id, {\b HdfsInMemoryChunk} &chunk_info){\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b putChunk} (const {\b ChunkID} &chunk_id, {\b HdfsInMemoryChunk} &chunk_info){\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b remove} (string blockId){\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b contains} (string blockId){\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getSize} (string blockId){\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b tryToPut} (string chunkId, void *value){\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b ensureFreeSpace} (){\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< string > {\b getFileLocation} (string partition_file_name){\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b MemoryChunkStore} * {\b getInstance} (){\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/MemoryStore.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/MemoryStore.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Message256 Struct Reference\par \pard\plain 
{\tc\tcl2 \v Message256}
{\xe \v Message256}
{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static unsigned {\b Capacity} (){\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b length}{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\b message} [256-sizeof(unsigned)]{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Message4K Struct Reference\par \pard\plain 
{\tc\tcl2 \v Message4K}
{\xe \v Message4K}
{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static unsigned {\b Capacity} (){\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b length}{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\b message} [4096 *50-sizeof(unsigned)]{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InsertOptimizedHashTable::meta_data Struct Reference\par \pard\plain 
{\tc\tcl2 \v InsertOptimizedHashTable::meta_data}
{\xe \v InsertOptimizedHashTable::meta_data}
{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SpineLock} {\b lock}{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint32_t {\b tuple_count}{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b bucket} * {\b next}{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/InsertOptimizedHashTable.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ttmath::Misc Class Reference\par \pard\plain 
{\tc\tcl2 \v ttmath::Misc}
{\xe \v ttmath::Misc}
{\bkmkstart AAAAAAAFDP}
{\bkmkend AAAAAAAFDP}
\par
{
{\f2 #include <ttmathmisc.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b AssignString} (std::string &result, const char *str)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b AssignString} (std::wstring &result, const char *str)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b AssignString} (std::wstring &result, const std::string &str)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b AssignString} (std::string &result, const wchar_t *str)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b AssignString} (std::string &result, const std::wstring &str)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b AddString} (std::string &result, const char *str)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b AddString} (std::wstring &result, const char *str)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class char_type > static void {\b SkipWhiteCharacters} (const char_type *&c){\bkmkstart AAAAAAAFDQ}
{\bkmkend AAAAAAAFDQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b uint} {\b CharToDigit} ({\b uint} c)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static sint {\b CharToDigit} ({\b uint} c, {\b uint} base)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b uint} {\b DigitToChar} ({\b uint} digit)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
some helpful functions \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddString\:ttmath::Misc}
{\xe \v ttmath::Misc\:AddString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void ttmath::Misc::AddString (std::string & {\i result}, const char * {\i str}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFDR}
{\bkmkend AAAAAAAFDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
result += str \par
}}
{\xe \v AddString\:ttmath::Misc}
{\xe \v ttmath::Misc\:AddString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void ttmath::Misc::AddString (std::wstring & {\i result}, const char * {\i str}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFDS}
{\bkmkend AAAAAAAFDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
result += str \par
}}
{\xe \v AssignString\:ttmath::Misc}
{\xe \v ttmath::Misc\:AssignString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void ttmath::Misc::AssignString (std::string & {\i result}, const char * {\i str}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFDT}
{\bkmkend AAAAAAAFDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
result = str \par
}{
Referenced by AssignString().}\par
}
{\xe \v AssignString\:ttmath::Misc}
{\xe \v ttmath::Misc\:AssignString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void ttmath::Misc::AssignString (std::wstring & {\i result}, const char * {\i str}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFDU}
{\bkmkend AAAAAAAFDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
result = str \par
}}
{\xe \v AssignString\:ttmath::Misc}
{\xe \v ttmath::Misc\:AssignString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void ttmath::Misc::AssignString (std::wstring & {\i result}, const std::string & {\i str}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFDV}
{\bkmkend AAAAAAAFDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
result = str \par
}{
References AssignString().}\par
}
{\xe \v AssignString\:ttmath::Misc}
{\xe \v ttmath::Misc\:AssignString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void ttmath::Misc::AssignString (std::string & {\i result}, const wchar_t * {\i str}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFDW}
{\bkmkend AAAAAAAFDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
result = str \par
}}
{\xe \v AssignString\:ttmath::Misc}
{\xe \v ttmath::Misc\:AssignString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void ttmath::Misc::AssignString (std::string & {\i result}, const std::wstring & {\i str}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFDX}
{\bkmkend AAAAAAAFDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
result = str \par
}{
References AssignString().}\par
}
{\xe \v CharToDigit\:ttmath::Misc}
{\xe \v ttmath::Misc\:CharToDigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b uint} ttmath::Misc::CharToDigit ({\b uint} {\i c}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFDY}
{\bkmkend AAAAAAAFDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this static method converts one character into its value\par
for example: 1 -> 1 8 -> 8 A -> 10 f -> 15\par
this method don't check whether c is correct or not \par
}}
{\xe \v CharToDigit\:ttmath::Misc}
{\xe \v ttmath::Misc\:CharToDigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static sint ttmath::Misc::CharToDigit ({\b uint} {\i c}, {\b uint} {\i base}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFDZ}
{\bkmkend AAAAAAAFDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method changes a character 'c' into its value (if there can't be a correct value it returns -1)\par
for example: c=2, base=10 -> function returns 2 c=A, base=10 -> function returns -1 c=A, base=16 -> function returns 10 \par
}}
{\xe \v DigitToChar\:ttmath::Misc}
{\xe \v ttmath::Misc\:DigitToChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b uint} ttmath::Misc::DigitToChar ({\b uint} {\i digit}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFEA}
{\bkmkend AAAAAAAFEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts a digit into a char digit should be from <0,F> (we don't have to get a base)\par
for example: 1 -> 1 8 -> 8 10 -> A 15 -> F \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/types/ttmath/{\b ttmathmisc.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ModuloHashFunction Class Reference\par \pard\plain 
{\tc\tcl2 \v ModuloHashFunction}
{\xe \v ModuloHashFunction}
{\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
Inheritance diagram for ModuloHashFunction:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classModuloHashFunction.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ModuloHashFunction} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ModuloHashFunction} (int min, unsigned int range, unsigned int skipbits){\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b get_partition_value} (const int &value) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned int {\b get_partition_value} (const double &value) const {\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned int {\b get_partition_value} (const unsigned long &value) const {\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

PartitionStyle {\b getPartitionFashion} () const {\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned int {\b getNumberOfPartitions} () const {\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ModuloHashFunction\:ModuloHashFunction}
{\xe \v ModuloHashFunction\:ModuloHashFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ModuloHashFunction::ModuloHashFunction (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Skipbits parameter defines number of least-significant bits which will be discarded before computing the hash. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_partition_value\:ModuloHashFunction}
{\xe \v ModuloHashFunction\:get_partition_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int ModuloHashFunction::get_partition_value (const int & {\i value}) const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACUH}
{\bkmkend AAAAAAACUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return h(x) = x mod k. \par
}{
Implements {\b PartitionFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References PartitionFunction::k_.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hash.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hash.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MonitorableBuffer Class Reference\par \pard\plain 
{\tc\tcl2 \v MonitorableBuffer}
{\xe \v MonitorableBuffer}
{\bkmkstart AAAAAAACUI}
{\bkmkend AAAAAAACUI}
Inheritance diagram for MonitorableBuffer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classMonitorableBuffer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual double {\b getBufferUsage} ()=0{\bkmkstart AAAAAAACUJ}
{\bkmkend AAAAAAACUJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual long {\b getReceivedDataSizeInKbytes} ()=0{\bkmkstart AAAAAAACUK}
{\bkmkend AAAAAAACUK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setInputComplete} (){\bkmkstart AAAAAAACUL}
{\bkmkend AAAAAAACUL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b inputComplete} () const {\bkmkstart AAAAAAACUM}
{\bkmkend AAAAAAACUM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/MonitorableBuffer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/MonitorableBuffer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Node Struct Reference\par \pard\plain 
{\tc\tcl2 \v Node}
{\xe \v Node}
{\bkmkstart AAAAAAACUN}
{\bkmkend AAAAAAACUN}
Inheritance diagram for Node:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structNode.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAACUO}
{\bkmkend AAAAAAACUO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NodeAddress Struct Reference\par \pard\plain 
{\tc\tcl2 \v NodeAddress}
{\xe \v NodeAddress}
{\bkmkstart AAAAAAACUP}
{\bkmkend AAAAAAACUP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b NodeAddress} (std::string ip, std::string port){\bkmkstart AAAAAAACUQ}
{\bkmkend AAAAAAACUQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} (const {\b NodeAddress} &r) const {\bkmkstart AAAAAAACUR}
{\bkmkend AAAAAAACUR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b ip}{\bkmkstart AAAAAAACUS}
{\bkmkend AAAAAAACUS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b port}{\bkmkstart AAAAAAACUT}
{\bkmkend AAAAAAACUT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ids.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NodeConnectionMessage Class Reference\par \pard\plain 
{\tc\tcl2 \v NodeConnectionMessage}
{\xe \v NodeConnectionMessage}
{\bkmkstart AAAAAAACUU}
{\bkmkend AAAAAAACUU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b NodeConnectionMessage} (std::string ip, std::string port){\bkmkstart AAAAAAACUV}
{\bkmkend AAAAAAACUV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b NodeConnectionMessage} {\b deserialize} ({\b Message256} message){\bkmkstart AAAAAAACUW}
{\bkmkend AAAAAAACUW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b Message256} {\b serialize} ({\b NodeConnectionMessage} input){\bkmkstart AAAAAAACUX}
{\bkmkend AAAAAAACUX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b NodeConnectionMessage} {\b deserialize4K} ({\b Message4K} message){\bkmkstart AAAAAAACUY}
{\bkmkend AAAAAAACUY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b Message4K} {\b serialize4K} ({\b NodeConnectionMessage} input){\bkmkstart AAAAAAACUZ}
{\bkmkend AAAAAAACUZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b ip}{\bkmkstart AAAAAAACVA}
{\bkmkend AAAAAAACVA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b port}{\bkmkstart AAAAAAACVB}
{\bkmkend AAAAAAACVB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACVC}
{\bkmkend AAAAAAACVC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NodeRegisterMessage Struct Reference\par \pard\plain 
{\tc\tcl2 \v NodeRegisterMessage}
{\xe \v NodeRegisterMessage}
{\bkmkstart AAAAAAACVD}
{\bkmkend AAAAAAACVD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b NodeRegisterMessage} (std::string node_ip, unsigned node_port){\bkmkstart AAAAAAACVE}
{\bkmkend AAAAAAACVE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_ip} (std::string _ip){\bkmkstart AAAAAAACVF}
{\bkmkend AAAAAAACVF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b get_ip} () const {\bkmkstart AAAAAAACVG}
{\bkmkend AAAAAAACVG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b ip}{\bkmkstart AAAAAAACVH}
{\bkmkend AAAAAAACVH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b port}{\bkmkstart AAAAAAACVI}
{\bkmkend AAAAAAACVI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NodeTracker Class Reference\par \pard\plain 
{\tc\tcl2 \v NodeTracker}
{\xe \v NodeTracker}
{\bkmkstart AAAAAAACVJ}
{\bkmkend AAAAAAACVJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b RegisterNode} ({\b NodeAddress}){\bkmkstart AAAAAAACVK}
{\bkmkend AAAAAAACVK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b GetNodeIP} (const NodeID &) const {\bkmkstart AAAAAAACVL}
{\bkmkend AAAAAAACVL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< NodeID > {\b GetNodeIDList} () const {\bkmkstart AAAAAAACVM}
{\bkmkend AAAAAAACVM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b NodeTracker} * {\b GetInstance} (){\bkmkstart AAAAAAACVN}
{\bkmkend AAAAAAACVN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/NodeTracker.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/NodeTracker.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
decimal::NValue Class Reference\par \pard\plain 
{\tc\tcl2 \v decimal::NValue}
{\xe \v decimal::NValue}
{\bkmkstart AAAAAAAEPT}
{\bkmkend AAAAAAAEPT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createDecimalFromString} (const std::string &txt)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b createStringFromDecimal} (unsigned number_of_fractinal_digits=12) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b NValue} {\b opMultiplyDecimals} (const {\b NValue} &lhs, const {\b NValue} &rhs) const {\bkmkstart AAAAAAAEPU}
{\bkmkend AAAAAAAEPU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b NValue} {\b opDivideDecimals} (const {\b NValue} lhs, const {\b NValue} rhs) const {\bkmkstart AAAAAAAEPV}
{\bkmkend AAAAAAAEPV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNull} () const {\bkmkstart AAAAAAAEPW}
{\bkmkend AAAAAAAEPW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b serializeToExport} ({\b ExportSerializeOutput} &, void *para=0) const {\bkmkstart AAAAAAAEPX}
{\bkmkend AAAAAAAEPX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b NValue} {\b op_add} (const {\b NValue} rhs) const {\bkmkstart AAAAAAAEPY}
{\bkmkend AAAAAAAEPY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b NValue} {\b op_subtract} (const {\b NValue} rhs) const {\bkmkstart AAAAAAAEPZ}
{\bkmkend AAAAAAAEPZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b NValue} {\b op_multiply} (const {\b NValue} rhs) const {\bkmkstart AAAAAAAEQA}
{\bkmkend AAAAAAAEQA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b NValue} {\b op_divide} (const {\b NValue} rhs) const {\bkmkstart AAAAAAAEQB}
{\bkmkend AAAAAAAEQB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b NValue} {\b op_max} (const {\b NValue} rhs) const {\bkmkstart AAAAAAAEQC}
{\bkmkend AAAAAAAEQC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b NValue} {\b op_min} (const {\b NValue} rhs) const {\bkmkstart AAAAAAAEQD}
{\bkmkend AAAAAAAEQD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b op_equals} (const {\b NValue} rhs) const {\bkmkstart AAAAAAAEQE}
{\bkmkend AAAAAAAEQE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b op_not_equals} (const {\b NValue} rhs) const {\bkmkstart AAAAAAAEQF}
{\bkmkend AAAAAAAEQF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b op_less} (const {\b NValue} rhs) const {\bkmkstart AAAAAAAEQG}
{\bkmkend AAAAAAAEQG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b op_less_equals} (const {\b NValue} rhs) const {\bkmkstart AAAAAAAEQH}
{\bkmkend AAAAAAAEQH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b op_great} (const {\b NValue} rhs) const {\bkmkstart AAAAAAAEQI}
{\bkmkend AAAAAAAEQI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b op_great_equals} (const {\b NValue} rhs) const {\bkmkstart AAAAAAAEQJ}
{\bkmkend AAAAAAAEQJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b compare} (const {\b NValue} rhs) const {\bkmkstart AAAAAAAEQK}
{\bkmkend AAAAAAAEQK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b TTInt} & {\b getDecimal} (){\bkmkstart AAAAAAAEQL}
{\bkmkend AAAAAAAEQL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const {\b TTInt} & {\b getDecimal} () const {\bkmkstart AAAAAAAEQM}
{\bkmkend AAAAAAAEQM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b NValue} {\b opAddDecimals} (const {\b NValue} lhs, const {\b NValue} rhs) const {\bkmkstart AAAAAAAEQN}
{\bkmkend AAAAAAAEQN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b NValue} {\b opSubtractDecimals} (const {\b NValue} lhs, const {\b NValue} rhs) const {\bkmkstart AAAAAAAEQO}
{\bkmkend AAAAAAAEQO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compareDecimalValue} (const {\b NValue} rhs) const \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b NValue} {\b getDecimalValueFromString} (const std::string &value){\bkmkstart AAAAAAAEQP}
{\bkmkend AAAAAAAEQP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b NValue} {\b getDecimalValue} ({\b TTInt} value){\bkmkstart AAAAAAAEQQ}
{\bkmkend AAAAAAAEQQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b m_data} [16]\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const int64_t {\b kMaxScaleFactor} = 1000000000000{\bkmkstart AAAAAAAEQR}
{\bkmkend AAAAAAAEQR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const uint16_t {\b kMaxDecScale} = 12{\bkmkstart AAAAAAAEQS}
{\bkmkend AAAAAAAEQS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b TTInt} {\b s_maxDecimalValue}{\bkmkstart AAAAAAAEQT}
{\bkmkend AAAAAAAEQT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b TTInt} {\b s_minDecimalValue}{\bkmkstart AAAAAAAEQU}
{\bkmkend AAAAAAAEQU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v compareDecimalValue\:decimal::NValue}
{\xe \v decimal::NValue\:compareDecimalValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int decimal::NValue::compareDecimalValue (const {\b NValue} {\i rhs}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEQV}
{\bkmkend AAAAAAAEQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the type of the value. This information is private to prevent code outside of {\b NValue} from branching based on the type of a value. \par
}}
{\xe \v createDecimalFromString\:decimal::NValue}
{\xe \v decimal::NValue\:createDecimalFromString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decimal::NValue::createDecimalFromString (const std::string & {\i txt})}}
\par
{\bkmkstart AAAAAAAEQW}
{\bkmkend AAAAAAAEQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
set a decimal value from a serialized representation \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check for invalid characters\par
}{
References ttmath::Int< value_size >::SetSign().}\par
}
{\xe \v createStringFromDecimal\:decimal::NValue}
{\xe \v decimal::NValue\:createStringFromDecimal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string decimal::NValue::createStringFromDecimal (unsigned {\i number_of_fractinal_digits} = {\f2 12}) const}}
\par
{\bkmkstart AAAAAAAEQX}
{\bkmkend AAAAAAAEQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serialize sign and value using radix point (no exponent). \par
}{
References ttmath::Int< value_size >::ChangeSign(), ttmath::Int< value_size >::IsSign(), and ttmath::Int< value_size >::ToString().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_data\:decimal::NValue}
{\xe \v decimal::NValue\:m_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char decimal::NValue::m_data[16]}}
\par
{\bkmkstart AAAAAAAEQY}
{\bkmkend AAAAAAAEQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
16 bytes of storage for {\b NValue} data. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/types/NValue.hpp\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/types/NValue.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OneToManyPartitionInfo Class Reference\par \pard\plain 
{\tc\tcl2 \v OneToManyPartitionInfo}
{\xe \v OneToManyPartitionInfo}
{\bkmkstart AAAAAAACVO}
{\bkmkend AAAAAAACVO}
Inheritance diagram for OneToManyPartitionInfo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOneToManyPartitionInfo.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OneToManyPartitionInfo} ({\b PartitionID} pid, string file_name){\bkmkstart AAAAAAACVP}
{\bkmkend AAAAAAACVP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OneToManyPartitionInfo} ({\b PartitionID} pid, string file_name, unsigned number_of_blocks, unsigned long number_of_tuples){\bkmkstart AAAAAAACVQ}
{\bkmkend AAAAAAACVQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

binding_mode {\b get_mode} () const {\bkmkstart AAAAAAACVR}
{\bkmkend AAAAAAACVR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add_one_block} (){\bkmkstart AAAAAAACVS}
{\bkmkend AAAAAAACVS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add_mutiple_block} (unsigned number_of_new_blocks){\bkmkstart AAAAAAACVT}
{\bkmkend AAAAAAACVT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b bind_one_block} (BlockID blockid, NodeID target){\bkmkstart AAAAAAACVU}
{\bkmkend AAAAAAACVU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b bind_all_blocks} (NodeID target){\bkmkstart AAAAAAACVV}
{\bkmkend AAAAAAACVV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b is_all_blocks_bound} (){\bkmkstart AAAAAAACVW}
{\bkmkend AAAAAAACVW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b unbind_all_blocks} (){\bkmkstart AAAAAAACVX}
{\bkmkend AAAAAAACVX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b is_colocated} (const {\b PartitionInfo} &) const {\bkmkstart AAAAAAACVY}
{\bkmkend AAAAAAACVY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

NodeID {\b get_location} () const {\bkmkstart AAAAAAACVZ}
{\bkmkend AAAAAAACVZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACWA}
{\bkmkend AAAAAAACWA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/Partitioner.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/Partitioner.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OneToOnePartitionInfo Class Reference\par \pard\plain 
{\tc\tcl2 \v OneToOnePartitionInfo}
{\xe \v OneToOnePartitionInfo}
{\bkmkstart AAAAAAACWB}
{\bkmkend AAAAAAACWB}
Inheritance diagram for OneToOnePartitionInfo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOneToOnePartitionInfo.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OneToOnePartitionInfo} ({\b PartitionID} pid){\bkmkstart AAAAAAACWC}
{\bkmkend AAAAAAACWC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OneToOnePartitionInfo} ({\b PartitionID} pid, string file_name){\bkmkstart AAAAAAACWD}
{\bkmkend AAAAAAACWD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OneToOnePartitionInfo} ({\b PartitionID} pid, string file_name, unsigned number_of_blocks, unsigned number_of_tuples){\bkmkstart AAAAAAACWE}
{\bkmkend AAAAAAACWE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

binding_mode {\b get_mode} () const {\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add_one_block} (){\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add_mutiple_block} (unsigned number_of_new_blocks){\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b bind_one_block} (BlockID blockid, NodeID target){\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b bind_all_blocks} (NodeID target){\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b is_all_blocks_bound} (){\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b unbind_all_blocks} (){\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b is_colocated} (const {\b PartitionInfo} &) const {\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

NodeID {\b get_location} () const {\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/Partitioner.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/Partitioner.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Operate Class Reference\par \pard\plain 
{\tc\tcl2 \v Operate}
{\xe \v Operate}
{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
Inheritance diagram for Operate:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOperate.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} (bool _nullable=true){\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ass} (void *src, void *desc){\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b assignment} (const void *const &src, void *const &desc) const =0{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned {\b getPartitionValue} (const void *key, const {\b PartitionFunction} *partition_function) const =0{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned {\b getPartitionValue} (const void *key, const unsigned long &mod) const =0{\bkmkstart AAAAAAACWU}
{\bkmkend AAAAAAACWU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned {\b getPartitionValue} (const void *key) const =0{\bkmkstart AAAAAAACWV}
{\bkmkend AAAAAAACWV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual std::string {\b toString} (void *value)=0{\bkmkstart AAAAAAACWW}
{\bkmkend AAAAAAACWW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b toValue} (void *target, const char *string)=0{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b equal} (const void *const &a, const void *const &b) const =0{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b less} (const void *&a, const void *&b) const =0{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b greate} (const void *&a, const void *&b) const =0{\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b add} (void *target, void *increment)=0{\bkmkstart AAAAAAACXB}
{\bkmkend AAAAAAACXB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b multiple} (void *target, void *increment)=0{\bkmkstart AAAAAAACXC}
{\bkmkend AAAAAAACXC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual int {\b compare} (const void *a, const void *b) const =0{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual fun {\b GetADDFunction} ()=0{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual fun {\b GetMINFunction} ()=0{\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual fun {\b GetMAXFunction} ()=0{\bkmkstart AAAAAAACXG}
{\bkmkend AAAAAAACXG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual fun {\b GetIncreateByOneFunction} ()=0{\bkmkstart AAAAAAACXH}
{\bkmkend AAAAAAACXH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual fun {\b GetAVGFunction} ()=0{\bkmkstart AAAAAAACXI}
{\bkmkend AAAAAAACXI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\b Operate} * {\b duplicateOperator} () const =0{\bkmkstart AAAAAAACXJ}
{\bkmkend AAAAAAACXJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b setNull} (void *value)=0{\bkmkstart AAAAAAACXK}
{\bkmkend AAAAAAACXK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b isNull} (void *value) const =0{\bkmkstart AAAAAAACXL}
{\bkmkend AAAAAAACXL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void(* {\b assign} )(const void *const &src, void *const &desc){\bkmkstart AAAAAAACXM}
{\bkmkend AAAAAAACXM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b nullable}{\bkmkstart AAAAAAACXN}
{\bkmkend AAAAAAACXN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/data_type.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OperateBool Class Reference\par \pard\plain 
{\tc\tcl2 \v OperateBool}
{\xe \v OperateBool}
{\bkmkstart AAAAAAACXO}
{\bkmkend AAAAAAACXO}
Inheritance diagram for OperateBool:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOperateBool.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OperateBool} (bool _nullable=true){\bkmkstart AAAAAAACXP}
{\bkmkend AAAAAAACXP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b assignment} (const void *const &src, void *const &desc) const {\bkmkstart AAAAAAACXQ}
{\bkmkend AAAAAAACXQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b toString} (void *value){\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b toValue} (void *target, const char *string){\bkmkstart AAAAAAACXS}
{\bkmkend AAAAAAACXS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b equal} (const void *const &a, const void *const &b) const {\bkmkstart AAAAAAACXT}
{\bkmkend AAAAAAACXT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b less} (const void *&a, const void *&b) const {\bkmkstart AAAAAAACXU}
{\bkmkend AAAAAAACXU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b greate} (const void *&a, const void *&b) const {\bkmkstart AAAAAAACXV}
{\bkmkend AAAAAAACXV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b compare} (const void *a, const void *b) const {\bkmkstart AAAAAAACXW}
{\bkmkend AAAAAAACXW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add} (void *target, void *increment){\bkmkstart AAAAAAACXX}
{\bkmkend AAAAAAACXX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b multiple} (void *target, void *increment){\bkmkstart AAAAAAACXY}
{\bkmkend AAAAAAACXY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetADDFunction} (){\bkmkstart AAAAAAACXZ}
{\bkmkend AAAAAAACXZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMINFunction} (){\bkmkstart AAAAAAACYA}
{\bkmkend AAAAAAACYA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMAXFunction} (){\bkmkstart AAAAAAACYB}
{\bkmkend AAAAAAACYB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetIncreateByOneFunction} (){\bkmkstart AAAAAAACYC}
{\bkmkend AAAAAAACYC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetAVGFunction} (){\bkmkstart AAAAAAACYD}
{\bkmkend AAAAAAACYD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const {\b PartitionFunction} *partition_function) const {\bkmkstart AAAAAAACYE}
{\bkmkend AAAAAAACYE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key) const {\bkmkstart AAAAAAACYF}
{\bkmkend AAAAAAACYF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const unsigned long &mod) const {\bkmkstart AAAAAAACYG}
{\bkmkend AAAAAAACYG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b duplicateOperator} () const {\bkmkstart AAAAAAACYH}
{\bkmkend AAAAAAACYH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setNull} (void *value){\bkmkstart AAAAAAACYI}
{\bkmkend AAAAAAACYI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNull} (void *value) const {\bkmkstart AAAAAAACYJ}
{\bkmkend AAAAAAACYJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/data_type.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OperateDate Class Reference\par \pard\plain 
{\tc\tcl2 \v OperateDate}
{\xe \v OperateDate}
{\bkmkstart AAAAAAACYK}
{\bkmkend AAAAAAACYK}
Inheritance diagram for OperateDate:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOperateDate.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OperateDate} (bool _nullable=true){\bkmkstart AAAAAAACYL}
{\bkmkend AAAAAAACYL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b assignment} (const void *const &src, void *const &desc) const {\bkmkstart AAAAAAACYM}
{\bkmkend AAAAAAACYM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b toString} (void *value){\bkmkstart AAAAAAACYN}
{\bkmkend AAAAAAACYN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b toValue} (void *target, const char *string){\bkmkstart AAAAAAACYO}
{\bkmkend AAAAAAACYO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b equal} (const void *const &a, const void *const &b) const {\bkmkstart AAAAAAACYP}
{\bkmkend AAAAAAACYP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b less} (const void *&a, const void *&b) const {\bkmkstart AAAAAAACYQ}
{\bkmkend AAAAAAACYQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b greate} (const void *&a, const void *&b) const {\bkmkstart AAAAAAACYR}
{\bkmkend AAAAAAACYR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b compare} (const void *a, const void *b) const {\bkmkstart AAAAAAACYS}
{\bkmkend AAAAAAACYS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add} (void *target, void *increment){\bkmkstart AAAAAAACYT}
{\bkmkend AAAAAAACYT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b multiple} (void *target, void *increment){\bkmkstart AAAAAAACYU}
{\bkmkend AAAAAAACYU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetADDFunction} (){\bkmkstart AAAAAAACYV}
{\bkmkend AAAAAAACYV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMINFunction} (){\bkmkstart AAAAAAACYW}
{\bkmkend AAAAAAACYW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMAXFunction} (){\bkmkstart AAAAAAACYX}
{\bkmkend AAAAAAACYX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetIncreateByOneFunction} (){\bkmkstart AAAAAAACYY}
{\bkmkend AAAAAAACYY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetAVGFunction} (){\bkmkstart AAAAAAACYZ}
{\bkmkend AAAAAAACYZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const {\b PartitionFunction} *partition_function) const {\bkmkstart AAAAAAACZA}
{\bkmkend AAAAAAACZA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key) const {\bkmkstart AAAAAAACZB}
{\bkmkend AAAAAAACZB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const unsigned long &mod) const {\bkmkstart AAAAAAACZC}
{\bkmkend AAAAAAACZC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b duplicateOperator} () const {\bkmkstart AAAAAAACZD}
{\bkmkend AAAAAAACZD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setNull} (void *value){\bkmkstart AAAAAAACZE}
{\bkmkend AAAAAAACZE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNull} (void *value) const {\bkmkstart AAAAAAACZF}
{\bkmkend AAAAAAACZF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/data_type.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OperateDatetime Class Reference\par \pard\plain 
{\tc\tcl2 \v OperateDatetime}
{\xe \v OperateDatetime}
{\bkmkstart AAAAAAACZG}
{\bkmkend AAAAAAACZG}
Inheritance diagram for OperateDatetime:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOperateDatetime.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OperateDatetime} (bool _nullable=true){\bkmkstart AAAAAAACZH}
{\bkmkend AAAAAAACZH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b assignment} (const void *const &src, void *const &desc) const {\bkmkstart AAAAAAACZI}
{\bkmkend AAAAAAACZI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b toString} (void *value){\bkmkstart AAAAAAACZJ}
{\bkmkend AAAAAAACZJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b toValue} (void *target, const char *string){\bkmkstart AAAAAAACZK}
{\bkmkend AAAAAAACZK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b equal} (const void *const &a, const void *const &b) const {\bkmkstart AAAAAAACZL}
{\bkmkend AAAAAAACZL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b less} (const void *&a, const void *&b) const {\bkmkstart AAAAAAACZM}
{\bkmkend AAAAAAACZM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b greate} (const void *&a, const void *&b) const {\bkmkstart AAAAAAACZN}
{\bkmkend AAAAAAACZN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b compare} (const void *a, const void *b) const {\bkmkstart AAAAAAACZO}
{\bkmkend AAAAAAACZO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add} (void *target, void *increment){\bkmkstart AAAAAAACZP}
{\bkmkend AAAAAAACZP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b multiple} (void *target, void *increment){\bkmkstart AAAAAAACZQ}
{\bkmkend AAAAAAACZQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetADDFunction} (){\bkmkstart AAAAAAACZR}
{\bkmkend AAAAAAACZR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMINFunction} (){\bkmkstart AAAAAAACZS}
{\bkmkend AAAAAAACZS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMAXFunction} (){\bkmkstart AAAAAAACZT}
{\bkmkend AAAAAAACZT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetIncreateByOneFunction} (){\bkmkstart AAAAAAACZU}
{\bkmkend AAAAAAACZU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetAVGFunction} (){\bkmkstart AAAAAAACZV}
{\bkmkend AAAAAAACZV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const {\b PartitionFunction} *partition_function) const {\bkmkstart AAAAAAACZW}
{\bkmkend AAAAAAACZW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const unsigned long &mod) const {\bkmkstart AAAAAAACZX}
{\bkmkend AAAAAAACZX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key) const {\bkmkstart AAAAAAACZY}
{\bkmkend AAAAAAACZY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b duplicateOperator} () const {\bkmkstart AAAAAAACZZ}
{\bkmkend AAAAAAACZZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setNull} (void *value){\bkmkstart AAAAAAADAA}
{\bkmkend AAAAAAADAA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNull} (void *value) const {\bkmkstart AAAAAAADAB}
{\bkmkend AAAAAAADAB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/data_type.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OperateDecimal Class Reference\par \pard\plain 
{\tc\tcl2 \v OperateDecimal}
{\xe \v OperateDecimal}
{\bkmkstart AAAAAAADAC}
{\bkmkend AAAAAAADAC}
Inheritance diagram for OperateDecimal:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOperateDecimal.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OperateDecimal} (unsigned number_of_decimal_digits=12, bool _nullable=true){\bkmkstart AAAAAAADAD}
{\bkmkend AAAAAAADAD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b assignment} (const void *const &src, void *const &desc) const {\bkmkstart AAAAAAADAE}
{\bkmkend AAAAAAADAE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b toString} (void *value){\bkmkstart AAAAAAADAF}
{\bkmkend AAAAAAADAF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b toValue} (void *target, const char *string){\bkmkstart AAAAAAADAG}
{\bkmkend AAAAAAADAG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b equal} (const void *const &a, const void *const &b) const {\bkmkstart AAAAAAADAH}
{\bkmkend AAAAAAADAH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b less} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADAI}
{\bkmkend AAAAAAADAI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b greate} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADAJ}
{\bkmkend AAAAAAADAJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b compare} (const void *a, const void *b) const {\bkmkstart AAAAAAADAK}
{\bkmkend AAAAAAADAK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add} (void *target, void *increment){\bkmkstart AAAAAAADAL}
{\bkmkend AAAAAAADAL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b multiple} (void *target, void *increment){\bkmkstart AAAAAAADAM}
{\bkmkend AAAAAAADAM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetADDFunction} (){\bkmkstart AAAAAAADAN}
{\bkmkend AAAAAAADAN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMINFunction} (){\bkmkstart AAAAAAADAO}
{\bkmkend AAAAAAADAO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMAXFunction} (){\bkmkstart AAAAAAADAP}
{\bkmkend AAAAAAADAP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetIncreateByOneFunction} (){\bkmkstart AAAAAAADAQ}
{\bkmkend AAAAAAADAQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetAVGFunction} (){\bkmkstart AAAAAAADAR}
{\bkmkend AAAAAAADAR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const {\b PartitionFunction} *partition_function) const {\bkmkstart AAAAAAADAS}
{\bkmkend AAAAAAADAS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key) const {\bkmkstart AAAAAAADAT}
{\bkmkend AAAAAAADAT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const unsigned long &mod) const {\bkmkstart AAAAAAADAU}
{\bkmkend AAAAAAADAU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b duplicateOperator} () const {\bkmkstart AAAAAAADAV}
{\bkmkend AAAAAAADAV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setNull} (void *value){\bkmkstart AAAAAAADAW}
{\bkmkend AAAAAAADAW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNull} (void *value) const {\bkmkstart AAAAAAADAX}
{\bkmkend AAAAAAADAX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static std::string {\b toString} (const {\b NValue} v, unsigned n_o_d_d=12){\bkmkstart AAAAAAADAY}
{\bkmkend AAAAAAADAY}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b number_of_decimal_digits_}{\bkmkstart AAAAAAADAZ}
{\bkmkend AAAAAAADAZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/data_type.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OperateDouble Class Reference\par \pard\plain 
{\tc\tcl2 \v OperateDouble}
{\xe \v OperateDouble}
{\bkmkstart AAAAAAADBA}
{\bkmkend AAAAAAADBA}
Inheritance diagram for OperateDouble:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOperateDouble.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OperateDouble} (bool _nullable=true){\bkmkstart AAAAAAADBB}
{\bkmkend AAAAAAADBB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b assignment} (const void *const &src, void *const &desc) const {\bkmkstart AAAAAAADBC}
{\bkmkend AAAAAAADBC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b toString} (void *value){\bkmkstart AAAAAAADBD}
{\bkmkend AAAAAAADBD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b toValue} (void *target, const char *string){\bkmkstart AAAAAAADBE}
{\bkmkend AAAAAAADBE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b equal} (const void *const &a, const void *const &b) const {\bkmkstart AAAAAAADBF}
{\bkmkend AAAAAAADBF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b less} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADBG}
{\bkmkend AAAAAAADBG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b greate} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADBH}
{\bkmkend AAAAAAADBH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b compare} (const void *a, const void *b) const {\bkmkstart AAAAAAADBI}
{\bkmkend AAAAAAADBI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add} (void *target, void *increment){\bkmkstart AAAAAAADBJ}
{\bkmkend AAAAAAADBJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b multiple} (void *target, void *increment){\bkmkstart AAAAAAADBK}
{\bkmkend AAAAAAADBK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetADDFunction} (){\bkmkstart AAAAAAADBL}
{\bkmkend AAAAAAADBL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMINFunction} (){\bkmkstart AAAAAAADBM}
{\bkmkend AAAAAAADBM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMAXFunction} (){\bkmkstart AAAAAAADBN}
{\bkmkend AAAAAAADBN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetIncreateByOneFunction} (){\bkmkstart AAAAAAADBO}
{\bkmkend AAAAAAADBO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetAVGFunction} (){\bkmkstart AAAAAAADBP}
{\bkmkend AAAAAAADBP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const {\b PartitionFunction} *partition_function) const {\bkmkstart AAAAAAADBQ}
{\bkmkend AAAAAAADBQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key) const {\bkmkstart AAAAAAADBR}
{\bkmkend AAAAAAADBR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const unsigned long &mod) const {\bkmkstart AAAAAAADBS}
{\bkmkend AAAAAAADBS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b duplicateOperator} () const {\bkmkstart AAAAAAADBT}
{\bkmkend AAAAAAADBT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setNull} (void *value){\bkmkstart AAAAAAADBU}
{\bkmkend AAAAAAADBU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNull} (void *value) const {\bkmkstart AAAAAAADBV}
{\bkmkend AAAAAAADBV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/data_type.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OperateFloat Class Reference\par \pard\plain 
{\tc\tcl2 \v OperateFloat}
{\xe \v OperateFloat}
{\bkmkstart AAAAAAADBW}
{\bkmkend AAAAAAADBW}
Inheritance diagram for OperateFloat:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOperateFloat.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OperateFloat} (bool _nullable=true){\bkmkstart AAAAAAADBX}
{\bkmkend AAAAAAADBX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b assignment} (const void *const &src, void *const &desc) const {\bkmkstart AAAAAAADBY}
{\bkmkend AAAAAAADBY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b toString} (void *value){\bkmkstart AAAAAAADBZ}
{\bkmkend AAAAAAADBZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b toValue} (void *target, const char *string){\bkmkstart AAAAAAADCA}
{\bkmkend AAAAAAADCA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b equal} (const void *const &a, const void *const &b) const {\bkmkstart AAAAAAADCB}
{\bkmkend AAAAAAADCB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b less} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADCC}
{\bkmkend AAAAAAADCC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b greate} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADCD}
{\bkmkend AAAAAAADCD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b compare} (const void *a, const void *b) const {\bkmkstart AAAAAAADCE}
{\bkmkend AAAAAAADCE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add} (void *target, void *increment){\bkmkstart AAAAAAADCF}
{\bkmkend AAAAAAADCF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b multiple} (void *target, void *increment){\bkmkstart AAAAAAADCG}
{\bkmkend AAAAAAADCG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetADDFunction} (){\bkmkstart AAAAAAADCH}
{\bkmkend AAAAAAADCH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMINFunction} (){\bkmkstart AAAAAAADCI}
{\bkmkend AAAAAAADCI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMAXFunction} (){\bkmkstart AAAAAAADCJ}
{\bkmkend AAAAAAADCJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetIncreateByOneFunction} (){\bkmkstart AAAAAAADCK}
{\bkmkend AAAAAAADCK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetAVGFunction} (){\bkmkstart AAAAAAADCL}
{\bkmkend AAAAAAADCL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const {\b PartitionFunction} *partition_function) const {\bkmkstart AAAAAAADCM}
{\bkmkend AAAAAAADCM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key) const {\bkmkstart AAAAAAADCN}
{\bkmkend AAAAAAADCN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const unsigned long &mod) const {\bkmkstart AAAAAAADCO}
{\bkmkend AAAAAAADCO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b duplicateOperator} () const {\bkmkstart AAAAAAADCP}
{\bkmkend AAAAAAADCP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setNull} (void *value){\bkmkstart AAAAAAADCQ}
{\bkmkend AAAAAAADCQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNull} (void *value) const {\bkmkstart AAAAAAADCR}
{\bkmkend AAAAAAADCR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/data_type.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OperateInt Class Reference\par \pard\plain 
{\tc\tcl2 \v OperateInt}
{\xe \v OperateInt}
{\bkmkstart AAAAAAADCS}
{\bkmkend AAAAAAADCS}
Inheritance diagram for OperateInt:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOperateInt.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OperateInt} (bool _nullable=true){\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b assignment} (const void *const &src, void *const &desc) const {\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b toString} (void *value){\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b toValue} (void *target, const char *string){\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b equal} (const void *const &a, const void *const &b) const {\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b less} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b greate} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b compare} (const void *a, const void *b) const {\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add} (void *target, void *increment){\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b multiple} (void *target, void *increment){\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetADDFunction} (){\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMINFunction} (){\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMAXFunction} (){\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetIncreateByOneFunction} (){\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetAVGFunction} (){\bkmkstart AAAAAAADDH}
{\bkmkend AAAAAAADDH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const {\b PartitionFunction} *partition_function) const {\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key) const {\bkmkstart AAAAAAADDJ}
{\bkmkend AAAAAAADDJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const unsigned long &mod) const {\bkmkstart AAAAAAADDK}
{\bkmkend AAAAAAADDK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setNull} (void *value){\bkmkstart AAAAAAADDL}
{\bkmkend AAAAAAADDL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNull} (void *value) const {\bkmkstart AAAAAAADDM}
{\bkmkend AAAAAAADDM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b duplicateOperator} () const {\bkmkstart AAAAAAADDN}
{\bkmkend AAAAAAADDN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/data_type.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OperateSmallInt Class Reference\par \pard\plain 
{\tc\tcl2 \v OperateSmallInt}
{\xe \v OperateSmallInt}
{\bkmkstart AAAAAAADDO}
{\bkmkend AAAAAAADDO}
Inheritance diagram for OperateSmallInt:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOperateSmallInt.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OperateSmallInt} (bool _nullable=true){\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b assignment} (const void *const &src, void *const &desc) const {\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b toString} (void *value){\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b toValue} (void *target, const char *string){\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b equal} (const void *const &a, const void *const &b) const {\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b less} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b greate} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b compare} (const void *a, const void *b) const {\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add} (void *target, void *increment){\bkmkstart AAAAAAADDX}
{\bkmkend AAAAAAADDX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b multiple} (void *target, void *increment){\bkmkstart AAAAAAADDY}
{\bkmkend AAAAAAADDY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetADDFunction} (){\bkmkstart AAAAAAADDZ}
{\bkmkend AAAAAAADDZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMINFunction} (){\bkmkstart AAAAAAADEA}
{\bkmkend AAAAAAADEA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMAXFunction} (){\bkmkstart AAAAAAADEB}
{\bkmkend AAAAAAADEB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetIncreateByOneFunction} (){\bkmkstart AAAAAAADEC}
{\bkmkend AAAAAAADEC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetAVGFunction} (){\bkmkstart AAAAAAADED}
{\bkmkend AAAAAAADED}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const {\b PartitionFunction} *partition_function) const {\bkmkstart AAAAAAADEE}
{\bkmkend AAAAAAADEE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key) const {\bkmkstart AAAAAAADEF}
{\bkmkend AAAAAAADEF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const unsigned long &mod) const {\bkmkstart AAAAAAADEG}
{\bkmkend AAAAAAADEG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b duplicateOperator} () const {\bkmkstart AAAAAAADEH}
{\bkmkend AAAAAAADEH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setNull} (void *value){\bkmkstart AAAAAAADEI}
{\bkmkend AAAAAAADEI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNull} (void *value) const {\bkmkstart AAAAAAADEJ}
{\bkmkend AAAAAAADEJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/data_type.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OperateString Class Reference\par \pard\plain 
{\tc\tcl2 \v OperateString}
{\xe \v OperateString}
{\bkmkstart AAAAAAADEK}
{\bkmkend AAAAAAADEK}
Inheritance diagram for OperateString:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOperateString.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OperateString} (bool _nullable=true){\bkmkstart AAAAAAADEL}
{\bkmkend AAAAAAADEL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b assignment} (const void *const &src, void *const &desc) const {\bkmkstart AAAAAAADEM}
{\bkmkend AAAAAAADEM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b toString} (void *value){\bkmkstart AAAAAAADEN}
{\bkmkend AAAAAAADEN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b toValue} (void *target, const char *string){\bkmkstart AAAAAAADEO}
{\bkmkend AAAAAAADEO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b equal} (const void *const &a, const void *const &b) const {\bkmkstart AAAAAAADEP}
{\bkmkend AAAAAAADEP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b less} (const void *&a, const void *&b) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b greate} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADEQ}
{\bkmkend AAAAAAADEQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b compare} (const void *a, const void *b) const {\bkmkstart AAAAAAADER}
{\bkmkend AAAAAAADER}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add} (void *target, void *increment){\bkmkstart AAAAAAADES}
{\bkmkend AAAAAAADES}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b multiple} (void *target, void *increment){\bkmkstart AAAAAAADET}
{\bkmkend AAAAAAADET}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetADDFunction} (){\bkmkstart AAAAAAADEU}
{\bkmkend AAAAAAADEU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMINFunction} (){\bkmkstart AAAAAAADEV}
{\bkmkend AAAAAAADEV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMAXFunction} (){\bkmkstart AAAAAAADEW}
{\bkmkend AAAAAAADEW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetIncreateByOneFunction} (){\bkmkstart AAAAAAADEX}
{\bkmkend AAAAAAADEX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetAVGFunction} (){\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const {\b PartitionFunction} *partition_function) const {\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key) const {\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const unsigned long &mod) const {\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b duplicateOperator} () const {\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setNull} (void *value){\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNull} (void *value) const {\bkmkstart AAAAAAADFE}
{\bkmkend AAAAAAADFE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v less\:OperateString}
{\xe \v OperateString\:less}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool OperateString::less (const void *& {\i a}, const void *& {\i b}) const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADFF}
{\bkmkend AAAAAAADFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The following function may return a wrong value \par
}{
Implements {\b Operate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACWP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/data_type.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OperateTime Class Reference\par \pard\plain 
{\tc\tcl2 \v OperateTime}
{\xe \v OperateTime}
{\bkmkstart AAAAAAADFG}
{\bkmkend AAAAAAADFG}
Inheritance diagram for OperateTime:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOperateTime.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OperateTime} (bool _nullable=true){\bkmkstart AAAAAAADFH}
{\bkmkend AAAAAAADFH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b assignment} (const void *const &src, void *const &desc) const {\bkmkstart AAAAAAADFI}
{\bkmkend AAAAAAADFI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b toString} (void *value){\bkmkstart AAAAAAADFJ}
{\bkmkend AAAAAAADFJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b toValue} (void *target, const char *string){\bkmkstart AAAAAAADFK}
{\bkmkend AAAAAAADFK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b equal} (const void *const &a, const void *const &b) const {\bkmkstart AAAAAAADFL}
{\bkmkend AAAAAAADFL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b less} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADFM}
{\bkmkend AAAAAAADFM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b greate} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADFN}
{\bkmkend AAAAAAADFN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b compare} (const void *a, const void *b) const {\bkmkstart AAAAAAADFO}
{\bkmkend AAAAAAADFO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add} (void *target, void *increment){\bkmkstart AAAAAAADFP}
{\bkmkend AAAAAAADFP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b multiple} (void *target, void *increment){\bkmkstart AAAAAAADFQ}
{\bkmkend AAAAAAADFQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetADDFunction} (){\bkmkstart AAAAAAADFR}
{\bkmkend AAAAAAADFR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMINFunction} (){\bkmkstart AAAAAAADFS}
{\bkmkend AAAAAAADFS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMAXFunction} (){\bkmkstart AAAAAAADFT}
{\bkmkend AAAAAAADFT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetIncreateByOneFunction} (){\bkmkstart AAAAAAADFU}
{\bkmkend AAAAAAADFU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetAVGFunction} (){\bkmkstart AAAAAAADFV}
{\bkmkend AAAAAAADFV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const {\b PartitionFunction} *partition_function) const {\bkmkstart AAAAAAADFW}
{\bkmkend AAAAAAADFW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key) const {\bkmkstart AAAAAAADFX}
{\bkmkend AAAAAAADFX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const unsigned long &mod) const {\bkmkstart AAAAAAADFY}
{\bkmkend AAAAAAADFY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b duplicateOperator} () const {\bkmkstart AAAAAAADFZ}
{\bkmkend AAAAAAADFZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setNull} (void *value){\bkmkstart AAAAAAADGA}
{\bkmkend AAAAAAADGA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNull} (void *value) const {\bkmkstart AAAAAAADGB}
{\bkmkend AAAAAAADGB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/data_type.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OperateULong Class Reference\par \pard\plain 
{\tc\tcl2 \v OperateULong}
{\xe \v OperateULong}
{\bkmkstart AAAAAAADGC}
{\bkmkend AAAAAAADGC}
Inheritance diagram for OperateULong:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOperateULong.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OperateULong} (bool _nullable=true){\bkmkstart AAAAAAADGD}
{\bkmkend AAAAAAADGD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b assignment} (const void *const &src, void *const &desc) const {\bkmkstart AAAAAAADGE}
{\bkmkend AAAAAAADGE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b toString} (void *value){\bkmkstart AAAAAAADGF}
{\bkmkend AAAAAAADGF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b toValue} (void *target, const char *string){\bkmkstart AAAAAAADGG}
{\bkmkend AAAAAAADGG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b equal} (const void *const &a, const void *const &b) const {\bkmkstart AAAAAAADGH}
{\bkmkend AAAAAAADGH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b less} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADGI}
{\bkmkend AAAAAAADGI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b greate} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADGJ}
{\bkmkend AAAAAAADGJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b compare} (const void *a, const void *b) const {\bkmkstart AAAAAAADGK}
{\bkmkend AAAAAAADGK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add} (void *target, void *increment){\bkmkstart AAAAAAADGL}
{\bkmkend AAAAAAADGL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b multiple} (void *target, void *increment){\bkmkstart AAAAAAADGM}
{\bkmkend AAAAAAADGM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetADDFunction} (){\bkmkstart AAAAAAADGN}
{\bkmkend AAAAAAADGN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMINFunction} (){\bkmkstart AAAAAAADGO}
{\bkmkend AAAAAAADGO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMAXFunction} (){\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetIncreateByOneFunction} (){\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetAVGFunction} (){\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const {\b PartitionFunction} *partition_function) const {\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key) const {\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const unsigned long &mod) const {\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b duplicateOperator} () const {\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setNull} (void *value){\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNull} (void *value) const {\bkmkstart AAAAAAADGX}
{\bkmkend AAAAAAADGX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/data_type.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OperateUSmallInt Class Reference\par \pard\plain 
{\tc\tcl2 \v OperateUSmallInt}
{\xe \v OperateUSmallInt}
{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
Inheritance diagram for OperateUSmallInt:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classOperateUSmallInt.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OperateUSmallInt} (bool _nullable=true){\bkmkstart AAAAAAADGZ}
{\bkmkend AAAAAAADGZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b assignment} (const void *const &src, void *const &desc) const {\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b toString} (void *value){\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b toValue} (void *target, const char *string){\bkmkstart AAAAAAADHC}
{\bkmkend AAAAAAADHC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b equal} (const void *const &a, const void *const &b) const {\bkmkstart AAAAAAADHD}
{\bkmkend AAAAAAADHD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b less} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADHE}
{\bkmkend AAAAAAADHE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b greate} (const void *&a, const void *&b) const {\bkmkstart AAAAAAADHF}
{\bkmkend AAAAAAADHF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b compare} (const void *a, const void *b) const {\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add} (void *target, void *increment){\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b multiple} (void *target, void *increment){\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetADDFunction} (){\bkmkstart AAAAAAADHJ}
{\bkmkend AAAAAAADHJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMINFunction} (){\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetMAXFunction} (){\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetIncreateByOneFunction} (){\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

fun {\b GetAVGFunction} (){\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const {\b PartitionFunction} *partition_function) const {\bkmkstart AAAAAAADHO}
{\bkmkend AAAAAAADHO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key) const {\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionValue} (const void *key, const unsigned long &mod) const {\bkmkstart AAAAAAADHQ}
{\bkmkend AAAAAAADHQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b duplicateOperator} () const {\bkmkstart AAAAAAADHR}
{\bkmkend AAAAAAADHR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b setNull} (void *value){\bkmkstart AAAAAAADHS}
{\bkmkend AAAAAAADHS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNull} (void *value) const {\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/data_type.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Opt_csc Struct Reference\par \pard\plain 
{\tc\tcl2 \v Opt_csc}
{\xe \v Opt_csc}
{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAADHV}
{\bkmkend AAAAAAADHV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b datatype}{\bkmkstart AAAAAAADHW}
{\bkmkend AAAAAAADHW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b s1}{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b s2}{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Orderby_expr Struct Reference\par \pard\plain 
{\tc\tcl2 \v Orderby_expr}
{\xe \v Orderby_expr}
{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b args}{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b sorttype}{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Orderby_list Struct Reference\par \pard\plain 
{\tc\tcl2 \v Orderby_list}
{\xe \v Orderby_list}
{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b orderbystring}{\bkmkstart AAAAAAADIG}
{\bkmkend AAAAAAADIG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::LogicalSort::OrderByAttr Struct Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::LogicalSort::OrderByAttr}
{\xe \v claims::logical_operator::LogicalSort::OrderByAttr}
{\bkmkstart AAAAAAAENA}
{\bkmkend AAAAAAAENA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description: {\b OrderByAttr} contains the table information and its sort direction.We use ASC as default. }}\par
{
{\f2 #include <logical_sort.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OrderByAttr} (const char *table_name, int direction){\bkmkstart AAAAAAAENB}
{\bkmkend AAAAAAAENB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OrderByAttr} (const char *table_name, const char *attribute_name){\bkmkstart AAAAAAAENC}
{\bkmkend AAAAAAAENC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const char * {\b table_name_}{\bkmkstart AAAAAAAEND}
{\bkmkend AAAAAAAEND}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b direction_}{\bkmkstart AAAAAAAENE}
{\bkmkend AAAAAAAENE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Description: {\b OrderByAttr} contains the table information and its sort direction.We use ASC as default. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_sort.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Comparator::Pair Struct Reference\par \pard\plain 
{\tc\tcl2 \v Comparator::Pair}
{\xe \v Comparator::Pair}
{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Pair} ({\b column_type} first, {\b column_type} second){\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} (const struct {\b Comparator::Pair} &p) const {\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator<} (const struct {\b Comparator::Pair} &p) const {\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b column_type} {\b first}{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b column_type} {\b second}{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Comparator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
parallel_insert_args Struct Reference\par \pard\plain 
{\tc\tcl2 \v parallel_insert_args}
{\xe \v parallel_insert_args}
{\bkmkstart AAAAAAADII}
{\bkmkend AAAAAAADII}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int32_t {\b pid}{\bkmkstart AAAAAAADIJ}
{\bkmkend AAAAAAADIJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b DynamicBlockBuffer::Iterator} * {\b buffer_it}{\bkmkstart AAAAAAADIK}
{\bkmkend AAAAAAADIK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b InsertOptimizedHashTable} * {\b hashtable}{\bkmkstart AAAAAAADIL}
{\bkmkend AAAAAAADIL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b nbuckets}{\bkmkstart AAAAAAADIM}
{\bkmkend AAAAAAADIM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Barrier} * {\b barrier}{\bkmkstart AAAAAAADIN}
{\bkmkend AAAAAAADIN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Test/common/insert_optimized_hash_table_test.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ParseResult Struct Reference\par \pard\plain 
{\tc\tcl2 \v ParseResult}
{\xe \v ParseResult}
{\bkmkstart AAAAAAADIO}
{\bkmkend AAAAAAADIO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b yyscan_info_}{\bkmkstart AAAAAAADIP}
{\bkmkend AAAAAAADIP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b ast}{\bkmkstart AAAAAAADIQ}
{\bkmkend AAAAAAADIQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const char * {\b sql_clause}{\bkmkstart AAAAAAADIR}
{\bkmkend AAAAAAADIR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b error_number}{\bkmkstart AAAAAAADIS}
{\bkmkend AAAAAAADIS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b Node} * > * {\b node_pointer}{\bkmkstart AAAAAAADIT}
{\bkmkend AAAAAAADIT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
partition_schema Struct Reference\par \pard\plain 
{\tc\tcl2 \v partition_schema}
{\xe \v partition_schema}
{\bkmkstart AAAAAAADIU}
{\bkmkend AAAAAAADIU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b partition_mode} \{ {\b hash}, 
{\b broadcase}, 
{\b range}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isHashPartition} () const {\bkmkstart AAAAAAADIV}
{\bkmkend AAAAAAADIV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isBoardcastPartition} () const {\bkmkstart AAAAAAADIW}
{\bkmkend AAAAAAADIW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAADIX}
{\bkmkend AAAAAAADIX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b partition_schema} {\b set_hash_partition} (int _partition_key_index=0){\bkmkstart AAAAAAADIY}
{\bkmkend AAAAAAADIY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b partition_schema} {\b set_broadcast_partition} (){\bkmkstart AAAAAAADIZ}
{\bkmkend AAAAAAADIZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b partition_schema} {\b set_range_partition} (int _number_of_ranges){\bkmkstart AAAAAAADJA}
{\bkmkend AAAAAAADJA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

partition_mode {\b mode}{\bkmkstart AAAAAAADJB}
{\bkmkend AAAAAAADJB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b partition_key_index}{\bkmkstart AAAAAAADJC}
{\bkmkend AAAAAAADJC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADJD}
{\bkmkend AAAAAAADJD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/partition_functions.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PartitionBindingMessage Struct Reference\par \pard\plain 
{\tc\tcl2 \v PartitionBindingMessage}
{\xe \v PartitionBindingMessage}
{\bkmkstart AAAAAAADJE}
{\bkmkend AAAAAAADJE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionBindingMessage} (const {\b PartitionID} &pid, const unsigned &num, const StorageLevel &level){\bkmkstart AAAAAAADJF}
{\bkmkend AAAAAAADJF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionID} {\b partition_id}{\bkmkstart AAAAAAADJG}
{\bkmkend AAAAAAADJG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b number_of_chunks}{\bkmkstart AAAAAAADJH}
{\bkmkend AAAAAAADJH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

StorageLevel {\b storage_level}{\bkmkstart AAAAAAADJI}
{\bkmkend AAAAAAADJI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PartitionedBlockBuffer Class Reference\par \pard\plain 
{\tc\tcl2 \v PartitionedBlockBuffer}
{\xe \v PartitionedBlockBuffer}
{\bkmkstart AAAAAAADJJ}
{\bkmkend AAAAAAADJJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionedBlockBuffer} (unsigned nPartitions, unsigned block_size, unsigned nBlocks){\bkmkstart AAAAAAADJK}
{\bkmkend AAAAAAADJK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionedBlockBuffer} (unsigned nPartitions, unsigned block_size){\bkmkstart AAAAAAADJL}
{\bkmkend AAAAAAADJL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b hasEmptyBlock} () const {\bkmkstart AAAAAAADJM}
{\bkmkend AAAAAAADJM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isEmpty} (){\bkmkstart AAAAAAADJN}
{\bkmkend AAAAAAADJN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b insertBlockToPartitionedList} ({\b Block} *src, unsigned partition_id)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b getBlock} ({\b Block} &desc){\bkmkstart AAAAAAADJO}
{\bkmkend AAAAAAADJO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b getBlock} ({\b Block} &desc, unsigned partition_id){\bkmkstart AAAAAAADJP}
{\bkmkend AAAAAAADJP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getBlockInBuffer} (){\bkmkstart AAAAAAADJQ}
{\bkmkend AAAAAAADJQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b inserted}{\bkmkstart AAAAAAADJR}
{\bkmkend AAAAAAADJR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b removed}{\bkmkstart AAAAAAADJS}
{\bkmkend AAAAAAADJS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v insertBlockToPartitionedList\:PartitionedBlockBuffer}
{\xe \v PartitionedBlockBuffer\:insertBlockToPartitionedList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool PartitionedBlockBuffer::insertBlockToPartitionedList ({\b Block} * {\i src}, unsigned {\i partition_id})}}
\par
{\bkmkstart AAAAAAADJT}
{\bkmkend AAAAAAADJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
'copy' a block into the corresponding partitioned block list. In fact, the swap of pointer is used rather than actually coping the content for performance concern. \par
}{
Referenced by ExpandableBlockStreamExchangeLowerMaterialized::Next().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/PartitionedBlockBuffer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/PartitionedBlockBuffer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PartitionedBlockContainer Class Reference\par \pard\plain 
{\tc\tcl2 \v PartitionedBlockContainer}
{\xe \v PartitionedBlockContainer}
{\bkmkstart AAAAAAADJU}
{\bkmkend AAAAAAADJU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionedBlockContainer} (unsigned partitions, unsigned block_size){\bkmkstart AAAAAAADJV}
{\bkmkend AAAAAAADJV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b getBlockForSending} ({\b BlockContainer} *&block){\bkmkstart AAAAAAADJW}
{\bkmkend AAAAAAADJW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insert} (unsigned partition_id, {\b BlockContainer} *&block)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Initialized} (){\bkmkstart AAAAAAADJX}
{\bkmkend AAAAAAADJX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v insert\:PartitionedBlockContainer}
{\xe \v PartitionedBlockContainer\:insert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PartitionedBlockContainer::insert (unsigned {\i partition_id}, {\b BlockContainer} *& {\i block})}}
\par
{\bkmkstart AAAAAAADJY}
{\bkmkend AAAAAAADJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
swap the block container \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/PartitionedBlockContainer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/PartitionedBlockContainer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Partitioner Class Reference\par \pard\plain 
{\tc\tcl2 \v Partitioner}
{\xe \v Partitioner}
{\bkmkstart AAAAAAADJZ}
{\bkmkend AAAAAAADJZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Partitioner} ({\b ProjectionID} projection_id, unsigned number_of_partitions, {\b PartitionFunction} *partition_functin){\bkmkstart AAAAAAADKA}
{\bkmkend AAAAAAADKA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Partitioner} ({\b ProjectionID} projection_id, unsigned number_of_partitions, const {\b Attribute} &partition_key, {\b PartitionFunction} *partition_functin){\bkmkstart AAAAAAADKB}
{\bkmkend AAAAAAADKB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getNumberOfPartitions} () const {\bkmkstart AAAAAAADKC}
{\bkmkend AAAAAAADKC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b bindPartitionToNode} (PartitionOffset partition_id, NodeID target_node){\bkmkstart AAAAAAADKD}
{\bkmkend AAAAAAADKD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b unbindPartitionToNode} (PartitionOffset partition_id){\bkmkstart AAAAAAADKE}
{\bkmkend AAAAAAADKE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b RegisterPartition} (unsigned partitoin_key, unsigned number_of_chunks){\bkmkstart AAAAAAADKF}
{\bkmkend AAAAAAADKF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b RegisterPartitionWithNumberOfBlocks} (unsigned partitoin_key, unsigned long number_of_blocks){\bkmkstart AAAAAAADKG}
{\bkmkend AAAAAAADKG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b UpdatePartitionWithNumberOfChunksToBlockManager} (unsigned partitoin_offset, unsigned long number_of_blocks){\bkmkstart AAAAAAADKH}
{\bkmkend AAAAAAADKH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionDataSize} (unsigned partitoin_index) const {\bkmkstart AAAAAAADKI}
{\bkmkend AAAAAAADKI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b getPartitionCardinality} (unsigned partitoin_index) const {\bkmkstart AAAAAAADKJ}
{\bkmkend AAAAAAADKJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionBlocks} (unsigned partitoin_index) const {\bkmkstart AAAAAAADKK}
{\bkmkend AAAAAAADKK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getPartitionChunks} (unsigned partition_index) const {\bkmkstart AAAAAAADKL}
{\bkmkend AAAAAAADKL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

NodeID {\b getPartitionLocation} (unsigned partition_offset) const {\bkmkstart AAAAAAADKM}
{\bkmkend AAAAAAADKM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print} (){\bkmkstart AAAAAAADKN}
{\bkmkend AAAAAAADKN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasSamePartitionLocation} (const {\b Partitioner} &target_partition) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

binding_mode {\b get_binding_mode_} () const {\bkmkstart AAAAAAADKO}
{\bkmkend AAAAAAADKO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

PartitionFunction::PartitionStyle {\b getPartitionFashion} () const {\bkmkstart AAAAAAADKP}
{\bkmkend AAAAAAADKP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} {\b getPartitionKey} () const {\bkmkstart AAAAAAADKQ}
{\bkmkend AAAAAAADKQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionFunction} * {\b getPartitionFunction} () const {\bkmkstart AAAAAAADKR}
{\bkmkend AAAAAAADKR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionID} {\b getProejctionID} () const {\bkmkstart AAAAAAADKS}
{\bkmkend AAAAAAADKS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b allPartitionBound} () const {\bkmkstart AAAAAAADKT}
{\bkmkend AAAAAAADKT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b PartitionID} > {\b getPartitionIDList} (){\bkmkstart AAAAAAADKU}
{\bkmkend AAAAAAADKU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADKV}
{\bkmkend AAAAAAADKV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v hasSamePartitionLocation\:Partitioner}
{\xe \v Partitioner\:hasSamePartitionLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Partitioner::hasSamePartitionLocation (const {\b Partitioner} & {\i target_partition}) const}}
\par
{\bkmkstart AAAAAAADKW}
{\bkmkend AAAAAAADKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
in the current version, any the location detection in OneToMany mode is ommited. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/Partitioner.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/Partitioner.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PartitionFunction Class Reference\par \pard\plain 
{\tc\tcl2 \v PartitionFunction}
{\xe \v PartitionFunction}
{\bkmkstart AAAAAAADKX}
{\bkmkend AAAAAAADKX}
Inheritance diagram for PartitionFunction:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPartitionFunction.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b PartitionStyle} \{ {\b hash_f}, 
{\b range_f}, 
{\b round_robin_f}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PartitionFunction} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionFunction} (int min, int max, unsigned int k){\bkmkstart AAAAAAADKY}
{\bkmkend AAAAAAADKY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual PartitionStyle {\b getPartitionFashion} () const =0{\bkmkstart AAAAAAADKZ}
{\bkmkend AAAAAAADKZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual unsigned int {\b get_partition_value} (const int &value) const =0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned int {\b get_partition_value} (const double &value) const =0{\bkmkstart AAAAAAADLA}
{\bkmkend AAAAAAADLA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned int {\b get_partition_value} (const unsigned long &) const =0{\bkmkstart AAAAAAADLB}
{\bkmkend AAAAAAADLB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned int {\b getNumberOfPartitions} () const =0{\bkmkstart AAAAAAADLC}
{\bkmkend AAAAAAADLC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b equal} ({\b PartitionFunction} *function_) const {\bkmkstart AAAAAAADLD}
{\bkmkend AAAAAAADLD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAADLE}
{\bkmkend AAAAAAADLE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b min_}{\bkmkstart AAAAAAADLF}
{\bkmkend AAAAAAADLF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b max_}{\bkmkstart AAAAAAADLG}
{\bkmkend AAAAAAADLG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long int {\b k_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADLH}
{\bkmkend AAAAAAADLH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PartitionFunction\:PartitionFunction}
{\xe \v PartitionFunction\:PartitionFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PartitionFunction::PartitionFunction (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADLI}
{\bkmkend AAAAAAADLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a new hashing object, rounding the number of buckets {\i k}  to the next power of two. Formally {\i k}  will become $ k = 2^{\lceil{\log_2{k}}\rceil} $ {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min} \cell }{Minimum hash value \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max} \cell }{Maximum hash value \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i k} \cell }{Number of buckets. Value will be rounded to the next higher power of two. \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_partition_value\:PartitionFunction}
{\xe \v PartitionFunction\:get_partition_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual unsigned int PartitionFunction::get_partition_value (const int & {\i value}) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the bucket number $n\in[0,k)$ for this {\i value} . {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{Value to hash. Must be within bounds. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Bucket number. \par
}}{
Implemented in {\b BoostHashFunctin} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b GeneralModuloFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACHT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ModuloHashFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACUH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b UniformRangePartitionFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADLJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b RoundRobinPartitionFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADLK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v k_\:PartitionFunction}
{\xe \v PartitionFunction\:k_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long int PartitionFunction::k_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADLL}
{\bkmkend AAAAAAADLL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
$ \_k=log_2(k) $, where $k$ is number of buckets \par
}{
Referenced by UniformRangePartitionFunction::get_partition_value(), and ModuloHashFunction::get_partition_value().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hash.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hash.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PartitionFunctionFactory Class Reference\par \pard\plain 
{\tc\tcl2 \v PartitionFunctionFactory}
{\xe \v PartitionFunctionFactory}
{\bkmkstart AAAAAAADLM}
{\bkmkend AAAAAAADLM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b PartitionFunction} * {\b createGeneralModuloFunction} (const int &range, const int &min=0, const int &skipbits=0){\bkmkstart AAAAAAADLN}
{\bkmkend AAAAAAADLN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b PartitionFunction} * {\b createModuloFunction} (const int &range, const int &min=0, const int &skipbits=0){\bkmkstart AAAAAAADLO}
{\bkmkend AAAAAAADLO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b PartitionFunction} * {\b createUniformRangeHashFunction} (const int &range, const int &min, const int &max){\bkmkstart AAAAAAADLP}
{\bkmkend AAAAAAADLP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b PartitionFunction} * {\b createRoundRobinPartitionHashFunction} (int range){\bkmkstart AAAAAAADLQ}
{\bkmkend AAAAAAADLQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b PartitionFunction} * {\b createBoostHashFunction} (const int &range){\bkmkstart AAAAAAADLR}
{\bkmkend AAAAAAADLR}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hash.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hash.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PartitionID Struct Reference\par \pard\plain 
{\tc\tcl2 \v PartitionID}
{\xe \v PartitionID}
{\bkmkstart AAAAAAADLS}
{\bkmkend AAAAAAADLS}
\par
{
{\f2 #include <ids.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionID} ({\b ProjectionID} projection_id, PartitionOffset off){\bkmkstart AAAAAAADLT}
{\bkmkend AAAAAAADLT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} (const {\b PartitionID} &r) const {\bkmkstart AAAAAAADLU}
{\bkmkend AAAAAAADLU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator<} (const {\b PartitionID} &r) const {\bkmkstart AAAAAAADLV}
{\bkmkend AAAAAAADLV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionID} (const {\b PartitionID} &r){\bkmkstart AAAAAAADLW}
{\bkmkend AAAAAAADLW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b getName} () const {\bkmkstart AAAAAAADLX}
{\bkmkend AAAAAAADLX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b getPathAndName} () const {\bkmkstart AAAAAAADLY}
{\bkmkend AAAAAAADLY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAADLZ}
{\bkmkend AAAAAAADLZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionID} {\b projection_id}{\bkmkstart AAAAAAADMA}
{\bkmkend AAAAAAADMA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

PartitionOffset {\b partition_off}{\bkmkstart AAAAAAADMB}
{\bkmkend AAAAAAADMB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADMC}
{\bkmkend AAAAAAADMC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b PartitionID}: a partition corresponds to one projection. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ids.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ids.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PartitionInfo Class Reference\par \pard\plain 
{\tc\tcl2 \v PartitionInfo}
{\xe \v PartitionInfo}
{\bkmkstart AAAAAAADMD}
{\bkmkend AAAAAAADMD}
Inheritance diagram for PartitionInfo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPartitionInfo.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionInfo} ({\b PartitionID} partition_id){\bkmkstart AAAAAAADME}
{\bkmkend AAAAAAADME}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionInfo} ({\b PartitionID} partition_id, string file_name){\bkmkstart AAAAAAADMF}
{\bkmkend AAAAAAADMF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionInfo} ({\b PartitionID} partition_id, string file_name, int number_of_blocks, unsigned long number_of_tuples){\bkmkstart AAAAAAADMG}
{\bkmkend AAAAAAADMG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual binding_mode {\b get_mode} () const =0{\bkmkstart AAAAAAADMH}
{\bkmkend AAAAAAADMH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b add_one_block} ()=0{\bkmkstart AAAAAAADMI}
{\bkmkend AAAAAAADMI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b add_mutiple_block} (unsigned number_of_new_blocks)=0{\bkmkstart AAAAAAADMJ}
{\bkmkend AAAAAAADMJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b bind_one_block} (BlockID blockid, NodeID target)=0{\bkmkstart AAAAAAADMK}
{\bkmkend AAAAAAADMK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b bind_all_blocks} (NodeID target)=0{\bkmkstart AAAAAAADML}
{\bkmkend AAAAAAADML}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b unbind_all_blocks} ()=0{\bkmkstart AAAAAAADMM}
{\bkmkend AAAAAAADMM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b is_all_blocks_bound} ()=0{\bkmkstart AAAAAAADMN}
{\bkmkend AAAAAAADMN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b is_colocated} (const {\b PartitionInfo} &) const =0{\bkmkstart AAAAAAADMO}
{\bkmkend AAAAAAADMO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b get_number_of_blocks} () const {\bkmkstart AAAAAAADMP}
{\bkmkend AAAAAAADMP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual NodeID {\b get_location} () const =0{\bkmkstart AAAAAAADMQ}
{\bkmkend AAAAAAADMQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAADMR}
{\bkmkend AAAAAAADMR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b hdfs_file_name}{\bkmkstart AAAAAAADMS}
{\bkmkend AAAAAAADMS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int long {\b number_of_blocks}{\bkmkstart AAAAAAADMT}
{\bkmkend AAAAAAADMT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionID} {\b partition_id_}{\bkmkstart AAAAAAADMU}
{\bkmkend AAAAAAADMU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int long {\b number_of_tuples_}{\bkmkstart AAAAAAADMV}
{\bkmkend AAAAAAADMV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b Partitioner}{\bkmkstart AAAAAAADMW}
{\bkmkend AAAAAAADMW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADMX}
{\bkmkend AAAAAAADMX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/Partitioner.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PartitionStorage::PartitionReaderItetaor Class Reference\par \pard\plain 
{\tc\tcl2 \v PartitionStorage::PartitionReaderItetaor}
{\xe \v PartitionStorage::PartitionReaderItetaor}
{\bkmkstart AAAAAAADNO}
{\bkmkend AAAAAAADNO}
Inheritance diagram for PartitionStorage::PartitionReaderItetaor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPartitionStorage_1_1PartitionReaderItetaor.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionReaderItetaor} ({\b PartitionStorage} *partition_storage){\bkmkstart AAAAAAADNP}
{\bkmkend AAAAAAADNP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\b ChunkReaderIterator} * {\b nextChunk} (){\bkmkstart AAAAAAADNQ}
{\bkmkend AAAAAAADNQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b nextBlock} ({\b BlockStreamBase} *&block){\bkmkstart AAAAAAADNR}
{\bkmkend AAAAAAADNR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionStorage} * {\b ps}{\bkmkstart AAAAAAADNS}
{\bkmkend AAAAAAADNS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b chunk_cur_}{\bkmkstart AAAAAAADNT}
{\bkmkend AAAAAAADNT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ChunkReaderIterator} * {\b chunk_it_}{\bkmkstart AAAAAAADNU}
{\bkmkend AAAAAAADNU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/PartitionStorage.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/PartitionStorage.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PartitionStorage Class Reference\par \pard\plain 
{\tc\tcl2 \v PartitionStorage}
{\xe \v PartitionStorage}
{\bkmkstart AAAAAAADMY}
{\bkmkend AAAAAAADMY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AtomicPartitionReaderIterator}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PartitionReaderItetaor}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionStorage} (const {\b PartitionID} &partition_id, const unsigned &number_of_chunks, const StorageLevel &){\bkmkstart AAAAAAADMZ}
{\bkmkend AAAAAAADMZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addNewChunk} (){\bkmkstart AAAAAAADNA}
{\bkmkend AAAAAAADNA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b updateChunksWithInsertOrAppend} (const {\b PartitionID} &partition_id, const unsigned &number_of_chunks, const StorageLevel &storage_level){\bkmkstart AAAAAAADNB}
{\bkmkend AAAAAAADNB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b removeAllChunks} (const {\b PartitionID} &partition_id){\bkmkstart AAAAAAADNC}
{\bkmkend AAAAAAADNC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionReaderItetaor} * {\b createReaderIterator} (){\bkmkstart AAAAAAADND}
{\bkmkend AAAAAAADND}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionReaderItetaor} * {\b createAtomicReaderIterator} (){\bkmkstart AAAAAAADNE}
{\bkmkend AAAAAAADNE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionID} {\b partition_id_}{\bkmkstart AAAAAAADNF}
{\bkmkend AAAAAAADNF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b number_of_chunks_}{\bkmkstart AAAAAAADNG}
{\bkmkend AAAAAAADNG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\b ChunkStorage} * > {\b chunk_list_}{\bkmkstart AAAAAAADNH}
{\bkmkend AAAAAAADNH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

StorageLevel {\b desirable_storage_level_}{\bkmkstart AAAAAAADNI}
{\bkmkend AAAAAAADNI}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b PartitionReaderItetaor}{\bkmkstart AAAAAAADNJ}
{\bkmkend AAAAAAADNJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/PartitionStorage.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
storage/PartitionStorage.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PartitionUnbindingMessage Struct Reference\par \pard\plain 
{\tc\tcl2 \v PartitionUnbindingMessage}
{\xe \v PartitionUnbindingMessage}
{\bkmkstart AAAAAAADNV}
{\bkmkend AAAAAAADNV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionUnbindingMessage} (const {\b PartitionID} &pid){\bkmkstart AAAAAAADNW}
{\bkmkend AAAAAAADNW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionID} {\b partition_id}{\bkmkstart AAAAAAADNX}
{\bkmkend AAAAAAADNX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::Path Class Reference\par \pard\plain 
{\tc\tcl2 \v Json::Path}
{\xe \v Json::Path}
{\bkmkstart AAAAAAAEXB}
{\bkmkend AAAAAAAEXB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Experimental and untested: represents a "path" to access a node. }}\par
{
{\f2 #include <json.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Path} (const std::string &path, const {\b PathArgument} &a1={\b PathArgument}(), const {\b PathArgument} &a2={\b PathArgument}(), const {\b PathArgument} &a3={\b PathArgument}(), const {\b PathArgument} &a4={\b PathArgument}(), const {\b PathArgument} &a5={\b PathArgument}()){\bkmkstart AAAAAAAEXC}
{\bkmkend AAAAAAAEXC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const {\b Value} & {\b resolve} (const {\b Value} &root) const {\bkmkstart AAAAAAAEXD}
{\bkmkend AAAAAAAEXD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} {\b resolve} (const {\b Value} &root, const {\b Value} &defaultValue) const {\bkmkstart AAAAAAAEXE}
{\bkmkend AAAAAAAEXE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} & {\b make} ({\b Value} &root) const \par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Experimental and untested: represents a "path" to access a node. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Syntax:{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
"." => root node\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
".[n]" => elements at index 'n' of root node (an array value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
".name" => member named 'name' of root node (an object value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
".name1.name2.name3"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
".[0][1][2].name1[3]"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
".%" => member name is provided as parameter\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
".[%]" => index is provied as parameter \par}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v make\:Json::Path}
{\xe \v Json::Path\:make}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} & Json::Path::make ({\b Value} & {\i root}) const}}
\par
{\bkmkstart AAAAAAAEXF}
{\bkmkend AAAAAAAEXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the "path" to access the specified node and returns a reference on the node. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/json/json.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/jsoncpp.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::PathArgument Class Reference\par \pard\plain 
{\tc\tcl2 \v Json::PathArgument}
{\xe \v Json::PathArgument}
{\bkmkstart AAAAAAAEWW}
{\bkmkend AAAAAAAEWW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Experimental and untested: represents an element of the "path" to access a node. }}\par
{
{\f2 #include <json.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PathArgument} (ArrayIndex index){\bkmkstart AAAAAAAEWX}
{\bkmkend AAAAAAAEWX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PathArgument} (const char *key){\bkmkstart AAAAAAAEWY}
{\bkmkend AAAAAAAEWY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PathArgument} (const std::string &key){\bkmkstart AAAAAAAEWZ}
{\bkmkend AAAAAAAEWZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b Path}{\bkmkstart AAAAAAAEXA}
{\bkmkend AAAAAAAEXA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Experimental and untested: represents an element of the "path" to access a node. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/json/json.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/jsoncpp.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PerformanceInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v PerformanceInfo}
{\xe \v PerformanceInfo}
{\bkmkstart AAAAAAADNY}
{\bkmkend AAAAAAADNY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b entry}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PerformanceInfo} ({\b ExpandabilityShrinkability} *expand_shrink){\bkmkstart AAAAAAADNZ}
{\bkmkend AAAAAAADNZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b processed_one_block} (){\bkmkstart AAAAAAADOA}
{\bkmkend AAAAAAADOA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b report_instance_performance_in_millibytes} (){\bkmkstart AAAAAAADOB}
{\bkmkend AAAAAAADOB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b initialize} (){\bkmkstart AAAAAAADOC}
{\bkmkend AAAAAAADOC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b eclipseTimeSlices} (unsigned offset){\bkmkstart AAAAAAADOD}
{\bkmkend AAAAAAADOD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b hitCurrentSlice} (){\bkmkstart AAAAAAADOE}
{\bkmkend AAAAAAADOE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b updateTimeSlicesToCurrentTicks} (){\bkmkstart AAAAAAADOF}
{\bkmkend AAAAAAADOF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b getBlockSumInAllSlices} (){\bkmkstart AAAAAAADOG}
{\bkmkend AAAAAAADOG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ticks {\b current_time_slice_start_}{\bkmkstart AAAAAAADOH}
{\bkmkend AAAAAAADOH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b nblocks_in_current_slice_}{\bkmkstart AAAAAAADOI}
{\bkmkend AAAAAAADOI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SpineLock} {\b lock_}{\bkmkstart AAAAAAADOJ}
{\bkmkend AAAAAAADOJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned * {\b slices}{\bkmkstart AAAAAAADOK}
{\bkmkend AAAAAAADOK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long long int {\b init_ticks_}{\bkmkstart AAAAAAADOL}
{\bkmkend AAAAAAADOL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\b entry} > {\b scalability_vector_}{\bkmkstart AAAAAAADOM}
{\bkmkend AAAAAAADOM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ExpandabilityShrinkability} * {\b expand_shrink_}{\bkmkstart AAAAAAADON}
{\bkmkend AAAAAAADON}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

timestamp {\b last_update_}{\bkmkstart AAAAAAADOO}
{\bkmkend AAAAAAADOO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ExpandedThreadTracker.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ExpandedThreadTracker.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PerformanceTopLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v PerformanceTopLogging}
{\xe \v PerformanceTopLogging}
{\bkmkstart AAAAAAADOT}
{\bkmkend AAAAAAADOT}
Inheritance diagram for PerformanceTopLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPerformanceTopLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PhysicalOperator Class Reference\par \pard\plain 
{\tc\tcl2 \v PhysicalOperator}
{\xe \v PhysicalOperator}
{\bkmkstart AAAAAAADOU}
{\bkmkend AAAAAAADOU}
Inheritance diagram for PhysicalOperator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classPhysicalOperator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b context_reuse_mode} \{ {\b crm_no_reuse}, 
{\b crm_core_sensitive}, 
{\b crm_numa_sensitive}, 
{\b crm_anyway}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PhysicalOperator} (unsigned number_of_barrier=1, unsigned number_of_seriliazed_section=1){\bkmkstart AAAAAAADOV}
{\bkmkend AAAAAAADOV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b Open} (const PartitionOffset &part_off=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Next} ({\b BlockStreamBase} *){\bkmkstart AAAAAAADOW}
{\bkmkend AAAAAAADOW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b Close} (){\bkmkstart AAAAAAADOX}
{\bkmkend AAAAAAADOX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b Print} (){\bkmkstart AAAAAAADOY}
{\bkmkend AAAAAAADOY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ThreadContext} * {\b CreateContext} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ThreadContext} * {\b CreateOrReuseContext} (context_reuse_mode crm){\bkmkstart AAAAAAADOZ}
{\bkmkend AAAAAAADOZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b InitExpandedStatus} (){\bkmkstart AAAAAAADPA}
{\bkmkend AAAAAAADPA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b TryEntryIntoSerializedSection} (unsigned serialized_section_id=0){\bkmkstart AAAAAAADPB}
{\bkmkend AAAAAAADPB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b RegisterExpandedThreadToAllBarriers} (){\bkmkstart AAAAAAADPC}
{\bkmkend AAAAAAADPC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b UnregisterExpandedThreadToAllBarriers} (unsigned barrier_index=0){\bkmkstart AAAAAAADPD}
{\bkmkend AAAAAAADPD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b BarrierArrive} (unsigned barrier_index=0){\bkmkstart AAAAAAADPE}
{\bkmkend AAAAAAADPE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b InitContext} ({\b ThreadContext} *tc){\bkmkstart AAAAAAADPF}
{\bkmkend AAAAAAADPF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ThreadContext} * {\b GetContext} (){\bkmkstart AAAAAAADPG}
{\bkmkend AAAAAAADPG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DestoryAllContext} (){\bkmkstart AAAAAAADPH}
{\bkmkend AAAAAAADPH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b CheckTerminateRequest} (){\bkmkstart AAAAAAADPI}
{\bkmkend AAAAAAADPI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b SetReturnStatus} (bool ret){\bkmkstart AAAAAAADPJ}
{\bkmkend AAAAAAADPJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b GetReturnStatus} () const {\bkmkstart AAAAAAADPK}
{\bkmkend AAAAAAADPK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b number_of_registered_expanded_threads_}{\bkmkstart AAAAAAADPL}
{\bkmkend AAAAAAADPL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADPM}
{\bkmkend AAAAAAADPM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateContext\:PhysicalOperator}
{\xe \v PhysicalOperator\:CreateContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b ThreadContext}* PhysicalOperator::CreateContext (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPN}
{\bkmkend AAAAAAADPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
As different elastic iterators differs from each other in the structure of the context and the way to construct the context, this function should be implemented explicitly by each elastic iterator.. \par
}}
{\xe \v Open\:PhysicalOperator}
{\xe \v PhysicalOperator\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool PhysicalOperator::Open (const PartitionOffset & {\i part_off} = {\f2 0}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Because that boost::serialization will allocate an instance of this class when deserializing, and hence the following three virtual method cannot be pure. \par
}{
Implements {\b BlockStreamIteratorBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAND \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b bottomLayerSorting} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b IndexScanIterator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACLF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b BlockStreamJoinIterator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b BlockStreamProjectIterator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ExpandableBlockStreamProjectionScan} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ExpandableBlockStreamFilter} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b BlockStreamAggregationIterator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b BlockStreamNestLoopJoinIterator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ExpandableBlockStreamExchangeEpoll} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABWD \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b bottomLayerCollecting} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/physical_operator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/physical_operator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::PhysicalPlanDescriptor Struct Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::PhysicalPlanDescriptor}
{\xe \v claims::logical_operator::PhysicalPlanDescriptor}
{\bkmkstart AAAAAAAELK}
{\bkmkend AAAAAAAELK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PhysicalPlan} {\b plan}{\bkmkstart AAAAAAAELL}
{\bkmkend AAAAAAAELL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PlanContext} {\b plan_context_}{\bkmkstart AAAAAAAELM}
{\bkmkend AAAAAAAELM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b cost}{\bkmkstart AAAAAAAELN}
{\bkmkend AAAAAAAELN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/logical_operator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PhysicalQueryPlan Class Reference\par \pard\plain 
{\tc\tcl2 \v PhysicalQueryPlan}
{\xe \v PhysicalQueryPlan}
{\bkmkstart AAAAAAADPO}
{\bkmkend AAAAAAADPO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PhysicalQueryPlan} ({\b BlockStreamIteratorBase} *it){\bkmkstart AAAAAAADPP}
{\bkmkend AAAAAAADPP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PhysicalQueryPlan} (const {\b PhysicalQueryPlan} &r){\bkmkstart AAAAAAADPQ}
{\bkmkend AAAAAAADPQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b destory} (){\bkmkstart AAAAAAADPR}
{\bkmkend AAAAAAADPR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b run} (){\bkmkstart AAAAAAADPS}
{\bkmkend AAAAAAADPS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b PhysicalQueryPlan} {\b deserialize} ({\b Message256} message){\bkmkstart AAAAAAADPT}
{\bkmkend AAAAAAADPT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b Message256} {\b serialize} ({\b PhysicalQueryPlan} input){\bkmkstart AAAAAAADPU}
{\bkmkend AAAAAAADPU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b PhysicalQueryPlan} {\b deserialize4K} ({\b Message4K} message){\bkmkstart AAAAAAADPV}
{\bkmkend AAAAAAADPV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b Message4K} {\b serialize4K} ({\b PhysicalQueryPlan} &input){\bkmkstart AAAAAAADPW}
{\bkmkend AAAAAAADPW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADPX}
{\bkmkend AAAAAAADPX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::PlanContext Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::PlanContext}
{\xe \v claims::logical_operator::PlanContext}
{\bkmkstart AAAAAAAENF}
{\bkmkend AAAAAAAENF}
\par
{
{\f2 #include <plan_context.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PlanContext} (const {\b PlanContext} &plan_context){\bkmkstart AAAAAAAENG}
{\bkmkend AAAAAAAENG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b GetAggregatedDatasize} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b GetAggregatedDataCardinality} () const {\bkmkstart AAAAAAAENH}
{\bkmkend AAAAAAAENH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b IsHashPartitioned} () const {\bkmkstart AAAAAAAENI}
{\bkmkend AAAAAAAENI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Schema} * {\b GetSchema} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b GetTupleSize} () const {\bkmkstart AAAAAAAENJ}
{\bkmkend AAAAAAAENJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} {\b GetAttribute} (std::string name) const {\bkmkstart AAAAAAAENK}
{\bkmkend AAAAAAAENK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} {\b GetAttribute} (std::string tbname, std::string colname) const {\bkmkstart AAAAAAAENL}
{\bkmkend AAAAAAAENL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\b Attribute} > {\b attribute_list_}{\bkmkstart AAAAAAAENM}
{\bkmkend AAAAAAAENM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b commu_cost_}{\bkmkstart AAAAAAAENN}
{\bkmkend AAAAAAAENN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PlanPartitioner} {\b plan_partitioner_}{\bkmkstart AAAAAAAENO}
{\bkmkend AAAAAAAENO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b LogcalOperator}{\bkmkstart AAAAAAAENP}
{\bkmkend AAAAAAAENP}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maintain the data property of the plan after having completed current operator, mainly include the attribute_list_, commu_cost_ and plan_partitioner_. the {\b PlanContext} originates the leaf of the plan (i.e. scan operator), the {\b PlanContext} of current operator generates from it's children. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetAggregatedDatasize\:claims::logical_operator::PlanContext}
{\xe \v claims::logical_operator::PlanContext\:GetAggregatedDatasize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long claims::logical_operator::PlanContext::GetAggregatedDatasize () const}}
\par
{\bkmkstart AAAAAAAENQ}
{\bkmkend AAAAAAAENQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
after having executing current operator, the data size could be changed, the data size = total tuples * tuple size. \par
}{
Referenced by claims::logical_operator::LogicalScan::GetOptimalPhysicalPlan(), claims::logical_operator::LogicalFilter::GetOptimalPhysicalPlan(), claims::logical_operator::LogicalQueryPlanRoot::GetOptimalPhysicalPlan(), claims::logical_operator::LogicalCrossJoin::GetPlanContext(), and claims::logical_operator::LogicalAggregation::GetPlanContext().}\par
}
{\xe \v GetSchema\:claims::logical_operator::PlanContext}
{\xe \v claims::logical_operator::PlanContext\:GetSchema}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Schema} * claims::logical_operator::PlanContext::GetSchema () const}}
\par
{\bkmkstart AAAAAAAENR}
{\bkmkend AAAAAAAENR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only fixed schema is supported now. TODO(wangli): support other schemas.\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/plan_context.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/plan_context.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::PlanPartitioner Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::PlanPartitioner}
{\xe \v claims::logical_operator::PlanPartitioner}
{\bkmkstart AAAAAAAEOF}
{\bkmkend AAAAAAAEOF}
\par
{
{\f2 #include <plan_partitioner.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PlanPartitioner} (const {\b Partitioner} &partitoiner){\bkmkstart AAAAAAAEOG}
{\bkmkend AAAAAAAEOG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PlanPartitioner} (const {\b PlanPartitioner} &){\bkmkstart AAAAAAAEOH}
{\bkmkend AAAAAAAEOH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasSamePartitionLocation} (const {\b PlanPartitioner} &target) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b GetAggregatedDataSize} () const {\bkmkstart AAAAAAAEOI}
{\bkmkend AAAAAAAEOI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b GetAggregatedDataCardinality} () const {\bkmkstart AAAAAAAEOJ}
{\bkmkend AAAAAAAEOJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

PartitionFunction::PartitionStyle {\b GetPartitionStyle} () const {\bkmkstart AAAAAAAEOK}
{\bkmkend AAAAAAAEOK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b GetNumberOfPartitions} () const {\bkmkstart AAAAAAAEOL}
{\bkmkend AAAAAAAEOL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PlanPartitionInfo} * {\b GetPartition} (unsigned id) const {\bkmkstart AAAAAAAEOM}
{\bkmkend AAAAAAAEOM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\b PlanPartitionInfo} > {\b get_partition_list} () const {\bkmkstart AAAAAAAEON}
{\bkmkend AAAAAAAEON}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_partition_list} (const std::vector< {\b PlanPartitionInfo} > &){\bkmkstart AAAAAAAEOO}
{\bkmkend AAAAAAAEOO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_partition_func} ({\b PartitionFunction} *partition_function){\bkmkstart AAAAAAAEOP}
{\bkmkend AAAAAAAEOP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionFunction} * {\b get_partition_func} () const {\bkmkstart AAAAAAAEOQ}
{\bkmkend AAAAAAAEOQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} {\b get_partition_key} () const {\bkmkstart AAAAAAAEOR}
{\bkmkend AAAAAAAEOR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_partition_key} (const {\b Attribute} &partitionkey){\bkmkstart AAAAAAAEOS}
{\bkmkend AAAAAAAEOS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b AddShadowPartitionKey} (const {\b Attribute} &partitionkey){\bkmkstart AAAAAAAEOT}
{\bkmkend AAAAAAAEOT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b HasShadowPartitionKey} () const {\bkmkstart AAAAAAAEOU}
{\bkmkend AAAAAAAEOU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\b Attribute} > {\b get_shadow_partition_keys} () const {\bkmkstart AAAAAAAEOV}
{\bkmkend AAAAAAAEOV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
describe how the {\b PlanContext} are partitioned and the partition property between them. I think that, in the current design, the {\b PlanContext} descriptor fails to contain the information describing how the data is processed since it is release from the source, i.e., Scan operator. the information of every partition is described by the {\b PlanPartitionInfo}. all this information originates from the partition information of the raw dataset. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v HasSamePartitionLocation\:claims::logical_operator::PlanPartitioner}
{\xe \v claims::logical_operator::PlanPartitioner\:HasSamePartitionLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool claims::logical_operator::PlanPartitioner::HasSamePartitionLocation (const {\b PlanPartitioner} & {\i target}) const}}
\par
{\bkmkstart AAAAAAAEOW}
{\bkmkend AAAAAAAEOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
if no party is filtered.\par
}{
Referenced by claims::logical_operator::LogicalEqualJoin::GetPlanContext().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/plan_partitioner.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/plan_partitioner.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::PlanPartitionInfo Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::PlanPartitionInfo}
{\xe \v claims::logical_operator::PlanPartitionInfo}
{\bkmkstart AAAAAAAENS}
{\bkmkend AAAAAAAENS}
\par
{
{\f2 #include <plan_partition_info.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PlanPartitionInfo} (unsigned partitoin_id, int cardinality, NodeID location){\bkmkstart AAAAAAAENT}
{\bkmkend AAAAAAAENT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PlanPartitionInfo} (const {\b PlanPartitionInfo} &part){\bkmkstart AAAAAAAENU}
{\bkmkend AAAAAAAENU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b get_cardinality} () const {\bkmkstart AAAAAAAENV}
{\bkmkend AAAAAAAENV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_cardinality} (const unsigned &){\bkmkstart AAAAAAAENW}
{\bkmkend AAAAAAAENW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b IsAvaliable} () const {\bkmkstart AAAAAAAENX}
{\bkmkend AAAAAAAENX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_filtered} (){\bkmkstart AAAAAAAENY}
{\bkmkend AAAAAAAENY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

NodeID {\b get_location} () const {\bkmkstart AAAAAAAENZ}
{\bkmkend AAAAAAAENZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b partition_id_}{\bkmkstart AAAAAAAEOA}
{\bkmkend AAAAAAAEOA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b cardinality_}{\bkmkstart AAAAAAAEOB}
{\bkmkend AAAAAAAEOB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

NodeID {\b location_}{\bkmkstart AAAAAAAEOC}
{\bkmkend AAAAAAAEOC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b filtered_}{\bkmkstart AAAAAAAEOD}
{\bkmkend AAAAAAAEOD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b PlanPartitioner}{\bkmkstart AAAAAAAEOE}
{\bkmkend AAAAAAAEOE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the partition info of every partition is changing during executing them. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/plan_partition_info.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/plan_partition_info.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PortManager Class Reference\par \pard\plain 
{\tc\tcl2 \v PortManager}
{\xe \v PortManager}
{\bkmkstart AAAAAAADPY}
{\bkmkend AAAAAAADPY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b applyPort} (){\bkmkstart AAAAAAADPZ}
{\bkmkend AAAAAAADPZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b returnPort} (unsigned port){\bkmkstart AAAAAAADQA}
{\bkmkend AAAAAAADQA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b PortManager} * {\b getInstance} (){\bkmkstart AAAAAAADQB}
{\bkmkend AAAAAAADQB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/PortManager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Executor/PortManager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamProjectIterator::project_thread_context Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamProjectIterator::project_thread_context}
{\xe \v BlockStreamProjectIterator::project_thread_context}
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
Inheritance diagram for BlockStreamProjectIterator::project_thread_context:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classBlockStreamProjectIterator_1_1project__thread__context.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b block_for_asking_}{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b temp_block_}{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase::BlockStreamTraverseIterator} * {\b block_stream_iterator_}{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b QNode} * > {\b thread_qual_}{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamProjectIterator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ProjectionBinding Class Reference\par \pard\plain 
{\tc\tcl2 \v ProjectionBinding}
{\xe \v ProjectionBinding}
{\bkmkstart AAAAAAADQC}
{\bkmkend AAAAAAADQC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b BindingEntireProjection} ({\b Partitioner} *, const StorageLevel &desriable_storage_level=MEMORY)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b UnbindingEntireProjection} ({\b Partitioner} *part)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v BindingEntireProjection\:ProjectionBinding}
{\xe \v ProjectionBinding\:BindingEntireProjection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ProjectionBinding::BindingEntireProjection ({\b Partitioner} * {\i part}, const StorageLevel & {\i desriable_storage_level} = {\f2 MEMORY})}}
\par
{\bkmkstart AAAAAAADQD}
{\bkmkend AAAAAAADQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO: OneToMany mode where one partition is allowed to be bound to multiple nodes.\par
}{
Referenced by LogicalCSBIndexBuilding::GetPlanContext(), LogicalIndexScan::GetPlanContext(), and claims::logical_operator::LogicalScan::GetPlanContext().}\par
}
{\xe \v UnbindingEntireProjection\:ProjectionBinding}
{\xe \v ProjectionBinding\:UnbindingEntireProjection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ProjectionBinding::UnbindingEntireProjection ({\b Partitioner} * {\i part})}}
\par
{\bkmkstart AAAAAAADQE}
{\bkmkend AAAAAAADQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO: OneToMany mode where one partition is allowed to be bound to multiple nodes.\par
}{
Referenced by HdfsLoader::load().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/ProjectionBinding.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/ProjectionBinding.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ProjectionDescriptor Class Reference\par \pard\plain 
{\tc\tcl2 \v ProjectionDescriptor}
{\xe \v ProjectionDescriptor}
{\bkmkstart AAAAAAADQF}
{\bkmkend AAAAAAADQF}
\par
{
{\f2 #include <table.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionDescriptor} ({\b ProjectionID}){\bkmkstart AAAAAAADQG}
{\bkmkend AAAAAAADQG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionDescriptor} (const string &name){\bkmkstart AAAAAAADQH}
{\bkmkend AAAAAAADQH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addAttribute} ({\b Attribute} attr){\bkmkstart AAAAAAADQI}
{\bkmkend AAAAAAADQI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b hasAttribute} (const {\b Attribute} &attr) const {\bkmkstart AAAAAAADQJ}
{\bkmkend AAAAAAADQJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b DefinePartitonier} (const unsigned &number_of_partitions, const {\b Attribute} &partition_key, {\b PartitionFunction} *partition_functin){\bkmkstart AAAAAAADQK}
{\bkmkend AAAAAAADQK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Partitioner} * {\b getPartitioner} () const {\bkmkstart AAAAAAADQL}
{\bkmkend AAAAAAADQL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isExist} (const string &name) const {\bkmkstart AAAAAAADQM}
{\bkmkend AAAAAAADQM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setProjectionID} (const {\b ProjectionID} &pid){\bkmkstart AAAAAAADQN}
{\bkmkend AAAAAAADQN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

map< string, set< string > > {\b getFileLocations} () const {\bkmkstart AAAAAAADQO}
{\bkmkend AAAAAAADQO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionID} {\b getProjectionID} () const {\bkmkstart AAAAAAADQP}
{\bkmkend AAAAAAADQP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b AllPartitionBound} () const {\bkmkstart AAAAAAADQQ}
{\bkmkend AAAAAAADQQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\b Attribute} > {\b getAttributeList} () const {\bkmkstart AAAAAAADQR}
{\bkmkend AAAAAAADQR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Schema} * {\b getSchema} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b getAttributeIndex} (const {\b Attribute} &att) const {\bkmkstart AAAAAAADQS}
{\bkmkend AAAAAAADQS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int long {\b getNumberOfTuplesOnPartition} (const unsigned partition_off) const {\bkmkstart AAAAAAADQT}
{\bkmkend AAAAAAADQT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getProjectionCost} () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b TableDescriptor}{\bkmkstart AAAAAAADQU}
{\bkmkend AAAAAAADQU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADQV}
{\bkmkend AAAAAAADQV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Attribute} describes a column in type, name, position in the table. A projection is a combination of columns that belong to a single table and will be horizontally partitioned among storage instances. {\b ProjectionDescriptor} mainly contains two kinds of important information:\par
1). how many attributes there are in a projection and what are they.\par
2). how the projection is partitioned (e.g., hash partition, range partition). How many storage instances are involved. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getProjectionCost\:ProjectionDescriptor}
{\xe \v ProjectionDescriptor\:getProjectionCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int ProjectionDescriptor::getProjectionCost () const}}
\par
{\bkmkstart AAAAAAADQW}
{\bkmkend AAAAAAADQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method description: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid : the sum of all attribute's length in projection, as this projection's cost \par
}}{
Referenced by claims::logical_operator::LogicalScan::GetPlanContext().}\par
}
{\xe \v getSchema\:ProjectionDescriptor}
{\xe \v ProjectionDescriptor\:getSchema}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Schema} * ProjectionDescriptor::getSchema () const}}
\par
{\bkmkstart AAAAAAADQX}
{\bkmkend AAAAAAADQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Only fixed schema is supported now. TODO: support other schema.\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/table.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/table.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ProjectionID Struct Reference\par \pard\plain 
{\tc\tcl2 \v ProjectionID}
{\xe \v ProjectionID}
{\bkmkstart AAAAAAADQY}
{\bkmkend AAAAAAADQY}
\par
{
{\f2 #include <ids.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionID} (TableID tid, ProjectionOffset off){\bkmkstart AAAAAAADQZ}
{\bkmkend AAAAAAADQZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionID} (const {\b ProjectionID} &r){\bkmkstart AAAAAAADRA}
{\bkmkend AAAAAAADRA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} (const {\b ProjectionID} &r) const {\bkmkstart AAAAAAADRB}
{\bkmkend AAAAAAADRB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator<} (const {\b ProjectionID} &r) const {\bkmkstart AAAAAAADRC}
{\bkmkend AAAAAAADRC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAADRD}
{\bkmkend AAAAAAADRD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

TableID {\b table_id}{\bkmkstart AAAAAAADRE}
{\bkmkend AAAAAAADRE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ProjectionOffset {\b projection_off}{\bkmkstart AAAAAAADRF}
{\bkmkend AAAAAAADRF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADRG}
{\bkmkend AAAAAAADRG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ProjectionID}: a projection has an unique {\b ProjectionID} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ids.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QColcumns Class Reference\par \pard\plain 
{\tc\tcl2 \v QColcumns}
{\xe \v QColcumns}
{\bkmkstart AAAAAAADRH}
{\bkmkend AAAAAAADRH}
Inheritance diagram for QColcumns:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classQColcumns.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QColcumns} (const char *tbl, const char *coln, data_type a_type, const char *t_alias){\bkmkstart AAAAAAADRI}
{\bkmkend AAAAAAADRI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QColcumns} ({\b QColcumns} *node){\bkmkstart AAAAAAADRJ}
{\bkmkend AAAAAAADRJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b id}{\bkmkstart AAAAAAADRK}
{\bkmkend AAAAAAADRK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b table}{\bkmkstart AAAAAAADRL}
{\bkmkend AAAAAAADRL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b col}{\bkmkstart AAAAAAADRM}
{\bkmkend AAAAAAADRM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b tab_index}{\bkmkstart AAAAAAADRN}
{\bkmkend AAAAAAADRN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADRO}
{\bkmkend AAAAAAADRO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QExpr Class Reference\par \pard\plain 
{\tc\tcl2 \v QExpr}
{\xe \v QExpr}
{\bkmkstart AAAAAAADRP}
{\bkmkend AAAAAAADRP}
Inheritance diagram for QExpr:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classQExpr.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QExpr} (char *val, data_type r_type, char *t_alias){\bkmkstart AAAAAAADRQ}
{\bkmkend AAAAAAADRQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QExpr} ({\b QExpr} *node){\bkmkstart AAAAAAADRR}
{\bkmkend AAAAAAADRR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b const_value}{\bkmkstart AAAAAAADRS}
{\bkmkend AAAAAAADRS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADRT}
{\bkmkend AAAAAAADRT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QExpr_binary Class Reference\par \pard\plain 
{\tc\tcl2 \v QExpr_binary}
{\xe \v QExpr_binary}
{\bkmkstart AAAAAAADRU}
{\bkmkend AAAAAAADRU}
Inheritance diagram for QExpr_binary:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classQExpr__binary.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QExpr_binary} ({\b QNode} *l_arg, {\b QNode} *r_arg, data_type a_type, oper_type op_types, qnodetype q_type, char *t_alias){\bkmkstart AAAAAAADRV}
{\bkmkend AAAAAAADRV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QExpr_binary} ({\b QExpr_binary} *node){\bkmkstart AAAAAAADRW}
{\bkmkend AAAAAAADRW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

oper_type {\b op_type}{\bkmkstart AAAAAAADRX}
{\bkmkend AAAAAAADRX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QNode} * {\b lnext}{\bkmkstart AAAAAAADRY}
{\bkmkend AAAAAAADRY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QNode} * {\b rnext}{\bkmkstart AAAAAAADRZ}
{\bkmkend AAAAAAADRZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ExecFunc {\b function_call}{\bkmkstart AAAAAAADSA}
{\bkmkend AAAAAAADSA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADSB}
{\bkmkend AAAAAAADSB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QExpr_case_when Class Reference\par \pard\plain 
{\tc\tcl2 \v QExpr_case_when}
{\xe \v QExpr_case_when}
{\bkmkstart AAAAAAADSC}
{\bkmkend AAAAAAADSC}
Inheritance diagram for QExpr_case_when:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classQExpr__case__when.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QExpr_case_when} (vector< {\b QNode} * > &qual_, vector< {\b QNode} * > &ans_, string alias_){\bkmkstart AAAAAAADSD}
{\bkmkend AAAAAAADSD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QExpr_case_when} ({\b QExpr_case_when} *node){\bkmkstart AAAAAAADSE}
{\bkmkend AAAAAAADSE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b QNode} * > {\b qual}{\bkmkstart AAAAAAADSF}
{\bkmkend AAAAAAADSF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b QNode} * > {\b ans}{\bkmkstart AAAAAAADSG}
{\bkmkend AAAAAAADSG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QNode} * {\b result}{\bkmkstart AAAAAAADSH}
{\bkmkend AAAAAAADSH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADSI}
{\bkmkend AAAAAAADSI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QExpr_date_add_sub Class Reference\par \pard\plain 
{\tc\tcl2 \v QExpr_date_add_sub}
{\xe \v QExpr_date_add_sub}
{\bkmkstart AAAAAAADSJ}
{\bkmkend AAAAAAADSJ}
Inheritance diagram for QExpr_date_add_sub:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classQExpr__date__add__sub.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QExpr_date_add_sub} ({\b QNode} *l_arg, {\b QNode} *r_arg, data_type a_type, oper_type op_types, qnodetype q_type, data_type rr_type, char *t_alias){\bkmkstart AAAAAAADSK}
{\bkmkend AAAAAAADSK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QExpr_date_add_sub} ({\b QExpr_date_add_sub} *node){\bkmkstart AAAAAAADSL}
{\bkmkend AAAAAAADSL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

oper_type {\b op_type}{\bkmkstart AAAAAAADSM}
{\bkmkend AAAAAAADSM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QNode} * {\b lnext}{\bkmkstart AAAAAAADSN}
{\bkmkend AAAAAAADSN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QNode} * {\b rnext}{\bkmkstart AAAAAAADSO}
{\bkmkend AAAAAAADSO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

data_type {\b rnext_type}{\bkmkstart AAAAAAADSP}
{\bkmkend AAAAAAADSP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ExecFunc {\b function_call}{\bkmkstart AAAAAAADSQ}
{\bkmkend AAAAAAADSQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADSR}
{\bkmkend AAAAAAADSR}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QExpr_in Class Reference\par \pard\plain 
{\tc\tcl2 \v QExpr_in}
{\xe \v QExpr_in}
{\bkmkstart AAAAAAADSS}
{\bkmkend AAAAAAADSS}
Inheritance diagram for QExpr_in:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classQExpr__in.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QExpr_in} (vector< {\b QNode} * > &cmpnode_, vector< vector< {\b QNode} * > > &rnode_, char *alias_){\bkmkstart AAAAAAADST}
{\bkmkend AAAAAAADST}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QExpr_in} ({\b QExpr_in} *node){\bkmkstart AAAAAAADSU}
{\bkmkend AAAAAAADSU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b QNode} * > {\b cmpnode}{\bkmkstart AAAAAAADSV}
{\bkmkend AAAAAAADSV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< vector< {\b QNode} * > > {\b rnode}{\bkmkstart AAAAAAADSW}
{\bkmkend AAAAAAADSW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADSX}
{\bkmkend AAAAAAADSX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QExpr_ternary Class Reference\par \pard\plain 
{\tc\tcl2 \v QExpr_ternary}
{\xe \v QExpr_ternary}
{\bkmkstart AAAAAAADSY}
{\bkmkend AAAAAAADSY}
Inheritance diagram for QExpr_ternary:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classQExpr__ternary.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QExpr_ternary} ({\b QNode} *arg0, {\b QNode} *arg1, {\b QNode} *arg2, data_type a_type, oper_type op_types, qnodetype q_type, char *t_alias){\bkmkstart AAAAAAADSZ}
{\bkmkend AAAAAAADSZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QExpr_ternary} ({\b QExpr_ternary} *node){\bkmkstart AAAAAAADTA}
{\bkmkend AAAAAAADTA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

oper_type {\b op_type}{\bkmkstart AAAAAAADTB}
{\bkmkend AAAAAAADTB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QNode} * {\b next0}{\bkmkstart AAAAAAADTC}
{\bkmkend AAAAAAADTC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QNode} * {\b next1}{\bkmkstart AAAAAAADTD}
{\bkmkend AAAAAAADTD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QNode} * {\b next2}{\bkmkstart AAAAAAADTE}
{\bkmkend AAAAAAADTE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ExecFunc {\b function_call}{\bkmkstart AAAAAAADTF}
{\bkmkend AAAAAAADTF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADTG}
{\bkmkend AAAAAAADTG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QExpr_unary Class Reference\par \pard\plain 
{\tc\tcl2 \v QExpr_unary}
{\xe \v QExpr_unary}
{\bkmkstart AAAAAAADTH}
{\bkmkend AAAAAAADTH}
Inheritance diagram for QExpr_unary:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classQExpr__unary.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QExpr_unary} ({\b QNode} *arg, data_type a_type, oper_type op_types, qnodetype q_type, char *t_alias){\bkmkstart AAAAAAADTI}
{\bkmkend AAAAAAADTI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QExpr_unary} ({\b QExpr_unary} *node){\bkmkstart AAAAAAADTJ}
{\bkmkend AAAAAAADTJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

oper_type {\b op_type}{\bkmkstart AAAAAAADTK}
{\bkmkend AAAAAAADTK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b QNode} * {\b next}{\bkmkstart AAAAAAADTL}
{\bkmkend AAAAAAADTL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ExecFunc {\b function_call}{\bkmkstart AAAAAAADTM}
{\bkmkend AAAAAAADTM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADTN}
{\bkmkend AAAAAAADTN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QNode Class Reference\par \pard\plain 
{\tc\tcl2 \v QNode}
{\xe \v QNode}
{\bkmkstart AAAAAAADTO}
{\bkmkend AAAAAAADTO}
Inheritance diagram for QNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classQNode.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

qnodetype {\b type}{\bkmkstart AAAAAAADTP}
{\bkmkend AAAAAAADTP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

FuncCall {\b FuncId}{\bkmkstart AAAAAAADTQ}
{\bkmkend AAAAAAADTQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

data_type {\b actual_type}{\bkmkstart AAAAAAADTR}
{\bkmkend AAAAAAADTR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

data_type {\b return_type}{\bkmkstart AAAAAAADTS}
{\bkmkend AAAAAAADTS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b value}{\bkmkstart AAAAAAADTT}
{\bkmkend AAAAAAADTT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b length}{\bkmkstart AAAAAAADTU}
{\bkmkend AAAAAAADTU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isnull}{\bkmkstart AAAAAAADTV}
{\bkmkend AAAAAAADTV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

TypeCastF {\b type_cast_func}{\bkmkstart AAAAAAADTW}
{\bkmkend AAAAAAADTW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b alias}{\bkmkstart AAAAAAADTX}
{\bkmkend AAAAAAADTX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADTY}
{\bkmkend AAAAAAADTY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Expression/qnode.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IndexScanIterator::query_range Struct Reference\par \pard\plain 
{\tc\tcl2 \v IndexScanIterator::query_range}
{\xe \v IndexScanIterator::query_range}
{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b query_range} (void *value_low_, comparison comp_low_, void *value_high_, comparison comp_high_, {\b column_type} c_type_){\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b value_low}{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

comparison {\b comp_low}{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b value_high}{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

comparison {\b comp_high}{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b column_type} {\b c_type}{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< char > {\b valuebytes_low}{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< char > {\b valuebytes_high}{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/IndexScanIterator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
query_result Struct Reference\par \pard\plain 
{\tc\tcl2 \v query_result}
{\xe \v query_result}
{\bkmkstart AAAAAAADTZ}
{\bkmkend AAAAAAADTZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b msg}{\bkmkstart AAAAAAADUA}
{\bkmkend AAAAAAADUA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ResultSet} * {\b result_set}{\bkmkstart AAAAAAADUB}
{\bkmkend AAAAAAADUB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/ExecuteLogicalQueryPlan.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Query_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Query_stmt}
{\xe \v Query_stmt}
{\bkmkstart AAAAAAADUC}
{\bkmkend AAAAAAADUC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAADUD}
{\bkmkend AAAAAAADUD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b querystring}{\bkmkstart AAAAAAADUE}
{\bkmkend AAAAAAADUE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b select_opts}{\bkmkstart AAAAAAADUF}
{\bkmkend AAAAAAADUF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b select_list}{\bkmkstart AAAAAAADUG}
{\bkmkend AAAAAAADUG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b from_list}{\bkmkstart AAAAAAADUH}
{\bkmkend AAAAAAADUH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b where_list}{\bkmkstart AAAAAAADUI}
{\bkmkend AAAAAAADUI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b groupby_list}{\bkmkstart AAAAAAADUJ}
{\bkmkend AAAAAAADUJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b having_list}{\bkmkstart AAAAAAADUK}
{\bkmkend AAAAAAADUK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b orderby_list}{\bkmkstart AAAAAAADUL}
{\bkmkend AAAAAAADUL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b limit_list}{\bkmkstart AAAAAAADUM}
{\bkmkend AAAAAAADUM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b into_list}{\bkmkstart AAAAAAADUN}
{\bkmkend AAAAAAADUN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QueryOptimizationLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v QueryOptimizationLogging}
{\xe \v QueryOptimizationLogging}
{\bkmkstart AAAAAAADUO}
{\bkmkend AAAAAAADUO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b log} (const char *format,...){\bkmkstart AAAAAAADUP}
{\bkmkend AAAAAAADUP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b elog} (const char *format,...){\bkmkstart AAAAAAADUQ}
{\bkmkend AAAAAAADUQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RandomRow Class Reference\par \pard\plain 
{\tc\tcl2 \v RandomRow}
{\xe \v RandomRow}
{\bkmkstart AAAAAAADUR}
{\bkmkend AAAAAAADUR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addIntUniformColumn} (int min=0, int max=1024 *1024, int seed=0){\bkmkstart AAAAAAADUS}
{\bkmkend AAAAAAADUS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\b column_metadata} > {\b getColumns} (){\bkmkstart AAAAAAADUT}
{\bkmkend AAAAAAADUT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/generator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::Reader Class Reference\par \pard\plain 
{\tc\tcl2 \v Json::Reader}
{\xe \v Json::Reader}
{\bkmkstart AAAAAAAEZE}
{\bkmkend AAAAAAAEZE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unserialize a {\f2 JSON} document into a {\b Value}. }}\par
{
{\f2 #include <json.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b StructuredError}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An error tagged with where in the JSON text it was encountered. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef char {\b Char}{\bkmkstart AAAAAAAEZF}
{\bkmkend AAAAAAAEZF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef const Char * {\b Location}{\bkmkstart AAAAAAAEZG}
{\bkmkend AAAAAAAEZG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Reader} (){\bkmkstart AAAAAAAEZH}
{\bkmkend AAAAAAAEZH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a {\b Reader} allowing all features for parsing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Reader} (const {\b Features} &features){\bkmkstart AAAAAAAEZI}
{\bkmkend AAAAAAAEZI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a {\b Reader} allowing the specified feature set for parsing. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b parse} (const std::string &document, {\b Value} &root, bool collectComments=true)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a {\b Value} from a {\f2 JSON} document. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b parse} (const char *beginDoc, const char *endDoc, {\b Value} &root, bool collectComments=true)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a {\b Value} from a {\f2 JSON} document. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b parse} (std::istream &is, {\b Value} &root, bool collectComments=true)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse from input stream. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getFormatedErrorMessages} () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a user friendly string that list errors in the parsed document. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getFormattedErrorMessages} () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a user friendly string that list errors in the parsed document. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b StructuredError} > {\b getStructuredErrors} () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a vector of structured erros encounted while parsing. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unserialize a {\f2 JSON} document into a {\b Value}. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getFormatedErrorMessages\:Json::Reader}
{\xe \v Json::Reader\:getFormatedErrorMessages}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Json::Reader::getFormatedErrorMessages () const}}
\par
{\bkmkstart AAAAAAAEZJ}
{\bkmkend AAAAAAAEZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a user friendly string that list errors in the parsed document. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Formatted error message with the list of errors with their location in the parsed document. An empty string is returned if no error occurred during parsing. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Deprecated:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Use {\b getFormattedErrorMessages()} instead (typo fix). \par
}
}{
References getFormattedErrorMessages().}\par
}
{\xe \v getFormattedErrorMessages\:Json::Reader}
{\xe \v Json::Reader\:getFormattedErrorMessages}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Json::Reader::getFormattedErrorMessages () const}}
\par
{\bkmkstart AAAAAAAEZK}
{\bkmkend AAAAAAAEZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a user friendly string that list errors in the parsed document. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Formatted error message with the list of errors with their location in the parsed document. An empty string is returned if no error occurred during parsing. \par
}}{
Referenced by getFormatedErrorMessages(), and Json::operator>>().}\par
}
{\xe \v getStructuredErrors\:Json::Reader}
{\xe \v Json::Reader\:getStructuredErrors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< {\b Reader::StructuredError} > Json::Reader::getStructuredErrors () const}}
\par
{\bkmkstart AAAAAAAEZL}
{\bkmkend AAAAAAAEZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a vector of structured erros encounted while parsing. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A (possibly empty) vector of {\b StructuredError} objects. Currently only one error can be returned, but the caller should tolerate multiple errors. This can occur if the parser recovers from a non-fatal parse error and then encounters additional errors. \par
}}}
{\xe \v parse\:Json::Reader}
{\xe \v Json::Reader\:parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Json::Reader::parse (const std::string & {\i document}, {\b Value} & {\i root}, bool {\i collectComments} = {\f2 true})}}
\par
{\bkmkstart AAAAAAAEZM}
{\bkmkend AAAAAAAEZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a {\b Value} from a {\f2 JSON} document. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i document} \cell }{UTF-8 encoded string containing the document to read. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i root} \cell }{[out] Contains the root value of the document if it was successfully parsed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i collectComments} \cell }{{\f2 true}  to collect comment and allow writing them back during serialization, {\f2 false}  to discard comments. This parameter is ignored if {\b Features::allowComments_} is {\f2 false} . \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\f2 true}  if the document was successfully parsed, {\f2 false}  if an error occurred. \par
}}{
Referenced by Json::operator>>(), and parse().}\par
}
{\xe \v parse\:Json::Reader}
{\xe \v Json::Reader\:parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Json::Reader::parse (const char * {\i beginDoc}, const char * {\i endDoc}, {\b Value} & {\i root}, bool {\i collectComments} = {\f2 true})}}
\par
{\bkmkstart AAAAAAAEZN}
{\bkmkend AAAAAAAEZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a {\b Value} from a {\f2 JSON} document. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i beginDoc} \cell }{Pointer on the beginning of the UTF-8 encoded string of the document to read. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i endDoc} \cell }{Pointer on the end of the UTF-8 encoded string of the document to read. \\ Must be >= beginDoc. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i root} \cell }{[out] Contains the root value of the document if it was successfully parsed. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i collectComments} \cell }{{\f2 true}  to collect comment and allow writing them back during serialization, {\f2 false}  to discard comments. This parameter is ignored if {\b Features::allowComments_} is {\f2 false} . \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\f2 true}  if the document was successfully parsed, {\f2 false}  if an error occurred. \par
}}{
References Json::Features::allowComments_, Json::commentAfter, Json::Value::setComment(), and Json::Features::strictRoot_.}\par
}
{\xe \v parse\:Json::Reader}
{\xe \v Json::Reader\:parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Json::Reader::parse (std::istream & {\i is}, {\b Value} & {\i root}, bool {\i collectComments} = {\f2 true})}}
\par
{\bkmkstart AAAAAAAEZO}
{\bkmkend AAAAAAAEZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse from input stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See Also:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b Json::operator>>(std::istream&, Json::Value&)}. \par
}}{
References parse().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/json/json.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/jsoncpp.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ttmath::ReferenceError Class Reference\par \pard\plain 
{\tc\tcl2 \v ttmath::ReferenceError}
{\xe \v ttmath::ReferenceError}
{\bkmkstart AAAAAAAFER}
{\bkmkend AAAAAAAFER}
\par
{
{\f2 #include <ttmathtypes.h>}}\par
Inheritance diagram for ttmath::ReferenceError:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classttmath_1_1ReferenceError.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ReferenceError} (const char *f, int l){\bkmkstart AAAAAAAFES}
{\bkmkend AAAAAAAFES}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b Where} () const {\bkmkstart AAAAAAAFET}
{\bkmkend AAAAAAAFET}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A small class used for reporting 'reference' errors\par
In the library is used macro TTMATH_REFERENCE_ASSERT which can throw an exception of this type\par
If you compile with gcc you can get a small benefit from using method Where() (it returns std::string) with the name and the line of a file where the macro TTMATH_REFERENCE_ASSERT was used)\par
What is the 'reference' error? Some kind of methods use a reference as their argument to another object, and the another object not always can be the same which is calling, e.g. Big<1,2> foo(10); foo.Mul(foo); // this is incorrect above method Mul is making something more with 'this' object and 'this' cannot be passed as the argument because the result will be undefined\par
macro TTMATH_REFERENCE_ASSERT helps us to solve the above problem\par
note! some methods can use 'this' object as the argument for example this code is correct: UInt<2> foo(10); foo.Add(foo); but there are only few methods which can do that \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/types/ttmath/{\b ttmathtypes.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RegisterSlaveMessage Class Reference\par \pard\plain 
{\tc\tcl2 \v RegisterSlaveMessage}
{\xe \v RegisterSlaveMessage}
{\bkmkstart AAAAAAADUU}
{\bkmkend AAAAAAADUU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b RegisterSlaveMessage} (std::string ip, std::string port){\bkmkstart AAAAAAADUV}
{\bkmkend AAAAAAADUV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b RegisterSlaveMessage} {\b deserialize} ({\b Message256} message){\bkmkstart AAAAAAADUW}
{\bkmkend AAAAAAADUW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b Message256} {\b serialize} ({\b RegisterSlaveMessage} input){\bkmkstart AAAAAAADUX}
{\bkmkend AAAAAAADUX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b ip}{\bkmkstart AAAAAAADUY}
{\bkmkend AAAAAAADUY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b port}{\bkmkstart AAAAAAADUZ}
{\bkmkend AAAAAAADUZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADVA}
{\bkmkend AAAAAAADVA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RegisterStorageRespond Struct Reference\par \pard\plain 
{\tc\tcl2 \v RegisterStorageRespond}
{\xe \v RegisterStorageRespond}
{\bkmkstart AAAAAAADVB}
{\bkmkend AAAAAAADVB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b RegisterStorageRespond} (const char *const text){\bkmkstart AAAAAAADVC}
{\bkmkend AAAAAAADVC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\b mText} [REGISTER_MESSAGE_LEN]{\bkmkstart AAAAAAADVD}
{\bkmkend AAAAAAADVD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamFilter::remaining_block Struct Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamFilter::remaining_block}
{\xe \v ExpandableBlockStreamFilter::remaining_block}
{\bkmkstart AAAAAAABYR}
{\bkmkend AAAAAAABYR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b remaining_block} ({\b BlockStreamBase} *block, {\b BlockStreamBase::BlockStreamTraverseIterator} *iterator){\bkmkstart AAAAAAABYS}
{\bkmkend AAAAAAABYS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b block}{\bkmkstart AAAAAAABYT}
{\bkmkend AAAAAAABYT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase::BlockStreamTraverseIterator} * {\b iterator}{\bkmkstart AAAAAAABYU}
{\bkmkend AAAAAAABYU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamFilter.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamInIterator::remaining_block Struct Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamInIterator::remaining_block}
{\xe \v BlockStreamInIterator::remaining_block}
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b remaining_block} ({\b BlockStreamBase} *bsb_right, {\b BlockStreamBase::BlockStreamTraverseIterator} *bsti){\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b remaining_block} (const {\b remaining_block} &r){\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b bsb_in_}{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase::BlockStreamTraverseIterator} * {\b blockstream_iterator}{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamInIterator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamNestLoopJoinIterator::remaining_block Struct Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamNestLoopJoinIterator::remaining_block}
{\xe \v BlockStreamNestLoopJoinIterator::remaining_block}
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b remaining_block} ({\b BlockStreamBase} *bsb_right, {\b BlockStreamBase::BlockStreamTraverseIterator} *bsti){\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b remaining_block} (const {\b remaining_block} &r){\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b bsb_right_}{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase::BlockStreamTraverseIterator} * {\b blockstream_iterator}{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b DynamicBlockBuffer::Iterator} * {\b buffer_iterator_}{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase::BlockStreamTraverseIterator} * {\b buffer_stream_iterator_}{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamNestLoopJoinIterator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamCombinedIterator::remaining_block Struct Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamCombinedIterator::remaining_block}
{\xe \v BlockStreamCombinedIterator::remaining_block}
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b remaining_block} (std::vector< {\b BlockStreamBase} * > buffer, std::vector< {\b BlockStreamBase::BlockStreamTraverseIterator} * > bsti_list){\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\b BlockStreamBase} * > {\b buffer_}{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector\par
< {\b BlockStreamBase::BlockStreamTraverseIterator} * > {\b bsti_list_}{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamCombinedIterator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamRandomDiskAccess::remaining_block Struct Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamRandomDiskAccess::remaining_block}
{\xe \v ExpandableBlockStreamRandomDiskAccess::remaining_block}
{\bkmkstart AAAAAAACBB}
{\bkmkend AAAAAAACBB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b remaining_block} ({\b BlockStreamBase} *block, {\b BlockStreamBase::BlockStreamTraverseIterator} *iterator){\bkmkstart AAAAAAACBC}
{\bkmkend AAAAAAACBC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b block}{\bkmkstart AAAAAAACBD}
{\bkmkend AAAAAAACBD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase::BlockStreamTraverseIterator} * {\b iterator}{\bkmkstart AAAAAAACBE}
{\bkmkend AAAAAAACBE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamRandomDiskAccess.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bottomLayerCollecting::remaining_block Struct Reference\par \pard\plain 
{\tc\tcl2 \v bottomLayerCollecting::remaining_block}
{\xe \v bottomLayerCollecting::remaining_block}
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b remaining_block} ({\b BlockStreamBase} *block, {\b BlockStreamBase::BlockStreamTraverseIterator} *iterator, unsigned short chunk_offset, unsigned short block_offset, unsigned short tuple_offset){\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase::BlockStreamTraverseIterator} * {\b iterator}{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b block}{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ChunkOffset {\b chunk_offset}{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned short {\b block_offset}{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned short {\b tuple_offset}{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBIndexBuilding.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamRandomMemAccess::remaining_block Struct Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamRandomMemAccess::remaining_block}
{\xe \v ExpandableBlockStreamRandomMemAccess::remaining_block}
{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b remaining_block} ({\b BlockStreamBase} *block, {\b BlockStreamBase::BlockStreamTraverseIterator} *iterator){\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b block}{\bkmkstart AAAAAAACBR}
{\bkmkend AAAAAAACBR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase::BlockStreamTraverseIterator} * {\b iterator}{\bkmkstart AAAAAAACBS}
{\bkmkend AAAAAAACBS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamRandomMemAccess.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IndexScanIterator::remaining_block Struct Reference\par \pard\plain 
{\tc\tcl2 \v IndexScanIterator::remaining_block}
{\xe \v IndexScanIterator::remaining_block}
{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b remaining_block} (map< index_offset, vector< index_offset > * > *result_set, map< index_offset, vector< index_offset > * >::iterator iter_result_map, vector< index_offset >::iterator iter_result_vector, unsigned short block_off, {\b BlockStreamBase} *block, {\b BlockStreamBase::BlockStreamTraverseIterator} *iterator){\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

map< index_offset, vector\par
< index_offset > * > * {\b result_set}{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

map< index_offset, vector\par
< index_offset > * >::iterator {\b iter_result_map}{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< index_offset >::iterator {\b iter_result_vector}{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned short {\b block_off}{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase} * {\b block}{\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamBase::BlockStreamTraverseIterator} * {\b iterator}{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/IndexScanIterator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
remote_command Struct Reference\par \pard\plain 
{\tc\tcl2 \v remote_command}
{\xe \v remote_command}
{\bkmkstart AAAAAAADVE}
{\bkmkend AAAAAAADVE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b cmd}{\bkmkstart AAAAAAADVF}
{\bkmkend AAAAAAADVF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b socket_fd}{\bkmkstart AAAAAAADVG}
{\bkmkend AAAAAAADVG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Daemon/Daemon.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Rename_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Rename_stmt}
{\xe \v Rename_stmt}
{\bkmkstart AAAAAAADVH}
{\bkmkend AAAAAAADVH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAADVI}
{\bkmkend AAAAAAADVI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b oldname1}{\bkmkstart AAAAAAADVJ}
{\bkmkend AAAAAAADVJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b oldname2}{\bkmkstart AAAAAAADVK}
{\bkmkend AAAAAAADVK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b newname1}{\bkmkstart AAAAAAADVL}
{\bkmkend AAAAAAADVL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b newname2}{\bkmkstart AAAAAAADVM}
{\bkmkend AAAAAAADVM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAADVN}
{\bkmkend AAAAAAADVN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
claims::logical_operator::Requirement Class Reference\par \pard\plain 
{\tc\tcl2 \v claims::logical_operator::Requirement}
{\xe \v claims::logical_operator::Requirement}
{\bkmkstart AAAAAAAEOX}
{\bkmkend AAAAAAAEOX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setRequiredPartitionkey} (const {\b Attribute} partition_key){\bkmkstart AAAAAAAEOY}
{\bkmkend AAAAAAAEOY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} {\b getPartitionKey} () const {\bkmkstart AAAAAAAEOZ}
{\bkmkend AAAAAAAEOZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b hasReuiredPartitionKey} () const {\bkmkstart AAAAAAAEPA}
{\bkmkend AAAAAAAEPA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setRequiredPartitionFucntion} ({\b PartitionFunction} *partition){\bkmkstart AAAAAAAEPB}
{\bkmkend AAAAAAAEPB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b PartitionFunction} * {\b getPartitionFunction} () const {\bkmkstart AAAAAAAEPC}
{\bkmkend AAAAAAAEPC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b hasRequiredPartitionFunction} () const {\bkmkstart AAAAAAAEPD}
{\bkmkend AAAAAAAEPD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setRequiredLocations} (std::vector< NodeID > location_list){\bkmkstart AAAAAAAEPE}
{\bkmkend AAAAAAAEPE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< NodeID > {\b getRequiredLocations} () const {\bkmkstart AAAAAAAEPF}
{\bkmkend AAAAAAAEPF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b hasRequiredLocations} () const {\bkmkstart AAAAAAAEPG}
{\bkmkend AAAAAAAEPG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setRequiredCost} (const unsigned long cost){\bkmkstart AAAAAAAEPH}
{\bkmkend AAAAAAAEPH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
NetworkTransfer {\b requireNetworkTransfer} (const {\b PlanContext} &plan_context) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b passLimits} (const unsigned long cost) const {\bkmkstart AAAAAAAEPI}
{\bkmkend AAAAAAAEPI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b tryMerge} (const {\b Requirement} req, {\b Requirement} &target) const \par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v requireNetworkTransfer\:claims::logical_operator::Requirement}
{\xe \v claims::logical_operator::Requirement\:requireNetworkTransfer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NetworkTransfer claims::logical_operator::Requirement::requireNetworkTransfer (const {\b PlanContext} & {\i plan_context}) const}}
\par
{\bkmkstart AAAAAAAEPJ}
{\bkmkend AAAAAAAEPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
there is partition key requirement \par
}{
Referenced by claims::logical_operator::LogicalScan::GetOptimalPhysicalPlan(), claims::logical_operator::LogicalFilter::GetOptimalPhysicalPlan(), and claims::logical_operator::LogicalQueryPlanRoot::GetOptimalPhysicalPlan().}\par
}
{\xe \v tryMerge\:claims::logical_operator::Requirement}
{\xe \v claims::logical_operator::Requirement\:tryMerge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool claims::logical_operator::Requirement::tryMerge (const {\b Requirement} {\i req}, {\b Requirement} & {\i target}) const}}
\par
{\bkmkstart AAAAAAAEPK}
{\bkmkend AAAAAAAEPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
try to merge the req if *this and req are compatible. return true if successful \par
}{
Referenced by claims::logical_operator::LogicalQueryPlanRoot::GetOptimalPhysicalPlan().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/Requirement.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
logical_operator/Requirement.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ResourceManagerMaster Class Reference\par \pard\plain 
{\tc\tcl2 \v ResourceManagerMaster}
{\xe \v ResourceManagerMaster}
{\bkmkstart AAAAAAADVO}
{\bkmkend AAAAAAADVO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ResourceManagerMasterActor}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

NodeID {\b RegisterNewSlave} ({\b NodeAddress}){\bkmkstart AAAAAAADVP}
{\bkmkend AAAAAAADVP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b RegisterDiskBuget} (NodeID report_node_id, unsigned size_in_mb){\bkmkstart AAAAAAADVQ}
{\bkmkend AAAAAAADVQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b RegisterMemoryBuget} (NodeID report_node_id, unsigned size_in_mb){\bkmkstart AAAAAAADVR}
{\bkmkend AAAAAAADVR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< NodeID > {\b getSlaveIDList} (){\bkmkstart AAAAAAADVS}
{\bkmkend AAAAAAADVS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b ApplyDiskBuget} (NodeID target, unsigned size_in_mb){\bkmkstart AAAAAAADVT}
{\bkmkend AAAAAAADVT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b ReturnDiskBuget} (NodeID target, unsigned size_in_mb){\bkmkstart AAAAAAADVU}
{\bkmkend AAAAAAADVU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b ApplyMemoryBuget} (NodeID target, unsigned size_in_mb){\bkmkstart AAAAAAADVV}
{\bkmkend AAAAAAADVV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b ReturnMemoryBuget} (NodeID target, unsigned size_in_mb){\bkmkstart AAAAAAADVW}
{\bkmkend AAAAAAADVW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/ResourceManagerMaster.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/ResourceManagerMaster.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ResourceManagerMaster::ResourceManagerMasterActor Class Reference\par \pard\plain 
{\tc\tcl2 \v ResourceManagerMaster::ResourceManagerMasterActor}
{\xe \v ResourceManagerMaster::ResourceManagerMasterActor}
{\bkmkstart AAAAAAADVX}
{\bkmkend AAAAAAADVX}
Inheritance diagram for ResourceManagerMaster::ResourceManagerMasterActor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classResourceManagerMaster_1_1ResourceManagerMasterActor.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ResourceManagerMasterActor} (Theron::Framework *framework, {\b ResourceManagerMaster} *rmm){\bkmkstart AAAAAAADVY}
{\bkmkend AAAAAAADVY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/ResourceManagerMaster.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/ResourceManagerMaster.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ResourceManagerMasterLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v ResourceManagerMasterLogging}
{\xe \v ResourceManagerMasterLogging}
{\bkmkstart AAAAAAADVZ}
{\bkmkend AAAAAAADVZ}
Inheritance diagram for ResourceManagerMasterLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classResourceManagerMasterLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ResourceManagerSlaveLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v ResourceManagerSlaveLogging}
{\xe \v ResourceManagerSlaveLogging}
{\bkmkstart AAAAAAADWA}
{\bkmkend AAAAAAADWA}
Inheritance diagram for ResourceManagerSlaveLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classResourceManagerSlaveLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ResultSet Class Reference\par \pard\plain 
{\tc\tcl2 \v ResultSet}
{\xe \v ResultSet}
{\bkmkstart AAAAAAADWB}
{\bkmkend AAAAAAADWB}
Inheritance diagram for ResultSet:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classResultSet.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ResultSet} (const {\b ResultSet} &r){\bkmkstart AAAAAAADWC}
{\bkmkend AAAAAAADWC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print} () const {\bkmkstart AAAAAAADWD}
{\bkmkend AAAAAAADWD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_}{\bkmkstart AAAAAAADWE}
{\bkmkend AAAAAAADWE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< std::string > {\b column_header_list_}{\bkmkstart AAAAAAADWF}
{\bkmkend AAAAAAADWF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b query_time_}{\bkmkstart AAAAAAADWG}
{\bkmkend AAAAAAADWG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/ResultSet.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Block/ResultSet.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Rollback_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Rollback_stmt}
{\xe \v Rollback_stmt}
{\bkmkstart AAAAAAADWH}
{\bkmkend AAAAAAADWH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAADWI}
{\bkmkend AAAAAAADWI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b chain}{\bkmkstart AAAAAAADWJ}
{\bkmkend AAAAAAADWJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b release}{\bkmkstart AAAAAAADWK}
{\bkmkend AAAAAAADWK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Rollbacktosavep_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Rollbacktosavep_stmt}
{\xe \v Rollbacktosavep_stmt}
{\bkmkstart AAAAAAADWL}
{\bkmkend AAAAAAADWL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAADWM}
{\bkmkend AAAAAAADWM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name}{\bkmkstart AAAAAAADWN}
{\bkmkend AAAAAAADWN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RoundRobinPartitionFunction Class Reference\par \pard\plain 
{\tc\tcl2 \v RoundRobinPartitionFunction}
{\xe \v RoundRobinPartitionFunction}
{\bkmkstart AAAAAAADWO}
{\bkmkend AAAAAAADWO}
\par
{
{\f2 #include <hash.h>}}\par
Inheritance diagram for RoundRobinPartitionFunction:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classRoundRobinPartitionFunction.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b RoundRobinPartitionFunction} (int range){\bkmkstart AAAAAAADWP}
{\bkmkend AAAAAAADWP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b get_partition_value} (const int &value) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned int {\b get_partition_value} (const double &value) const {\bkmkstart AAAAAAADWQ}
{\bkmkend AAAAAAADWQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned int {\b get_partition_value} (const unsigned long &value) const {\bkmkstart AAAAAAADWR}
{\bkmkend AAAAAAADWR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned int {\b getNumberOfPartitions} () const {\bkmkstart AAAAAAADWS}
{\bkmkend AAAAAAADWS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

PartitionStyle {\b getPartitionFashion} () const {\bkmkstart AAAAAAADWT}
{\bkmkend AAAAAAADWT}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADWU}
{\bkmkend AAAAAAADWU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is used to achieve Round Robin Partition \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_partition_value\:RoundRobinPartitionFunction}
{\xe \v RoundRobinPartitionFunction\:get_partition_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int RoundRobinPartitionFunction::get_partition_value (const int & {\i value}) const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADLK}
{\bkmkend AAAAAAADLK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the bucket number $n\in[0,k)$ for this {\i value} . {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{Value to hash. Must be within bounds. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Bucket number. \par
}}{
Implements {\b PartitionFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hash.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hash.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ttmath::RuntimeError Class Reference\par \pard\plain 
{\tc\tcl2 \v ttmath::RuntimeError}
{\xe \v ttmath::RuntimeError}
{\bkmkstart AAAAAAAFEU}
{\bkmkend AAAAAAAFEU}
\par
{
{\f2 #include <ttmathtypes.h>}}\par
Inheritance diagram for ttmath::RuntimeError:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classttmath_1_1RuntimeError.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b RuntimeError} (const char *f, int l){\bkmkstart AAAAAAAFEV}
{\bkmkend AAAAAAAFEV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b Where} () const {\bkmkstart AAAAAAAFEW}
{\bkmkend AAAAAAAFEW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a small class used for reporting errors\par
in the library is used macro TTMATH_ASSERT which (if the condition in it is false) throw an exception of this type\par
if you compile with gcc you can get a small benefit from using method Where() (it returns std::string) with the name and the line of a file where the macro TTMATH_ASSERT was used) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/types/ttmath/{\b ttmathtypes.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Savepoint_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Savepoint_stmt}
{\xe \v Savepoint_stmt}
{\bkmkstart AAAAAAADWV}
{\bkmkend AAAAAAADWV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAADWW}
{\bkmkend AAAAAAADWW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name}{\bkmkstart AAAAAAADWX}
{\bkmkend AAAAAAADWX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamProjectionScan::scan_thread_context Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamProjectionScan::scan_thread_context}
{\xe \v ExpandableBlockStreamProjectionScan::scan_thread_context}
{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
Inheritance diagram for ExpandableBlockStreamProjectionScan::scan_thread_context:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classExpandableBlockStreamProjectionScan_1_1scan__thread__context.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

assigned_data {\b assigned_data_}{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamProjectionScan.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Schema Class Reference\par \pard\plain 
{\tc\tcl2 \v Schema}
{\xe \v Schema}
{\bkmkstart AAAAAAADWY}
{\bkmkend AAAAAAADWY}
Inheritance diagram for Schema:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSchema.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b schema_type} \{ {\b fixed}, 
{\b varaible}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} (const std::vector< {\b column_type} > &columns){\bkmkstart AAAAAAADWZ}
{\bkmkend AAAAAAADWZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} (const {\b Schema} &r){\bkmkstart AAAAAAADXA}
{\bkmkend AAAAAAADXA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned {\b getTupleMaxSize} () const =0{\bkmkstart AAAAAAADXB}
{\bkmkend AAAAAAADXB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned {\b getTupleActualSize} (void *tuple) const =0{\bkmkstart AAAAAAADXC}
{\bkmkend AAAAAAADXC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b getColumnValue} (unsigned index, void *src, void *desc)=0{\bkmkstart AAAAAAADXD}
{\bkmkend AAAAAAADXD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual int {\b getColumnOffset} (unsigned index) const =0{\bkmkstart AAAAAAADXE}
{\bkmkend AAAAAAADXE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void * {\b getColumnAddess} (const unsigned &index, const void *const &column_start) const __attribute__((always_inline))=0{\bkmkstart AAAAAAADXF}
{\bkmkend AAAAAAADXF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned {\b copyTuple} (void *src, void *desc) const =0{\bkmkstart AAAAAAADXG}
{\bkmkend AAAAAAADXG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getncolumns} () const {\bkmkstart AAAAAAADXH}
{\bkmkend AAAAAAADXH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\b Schema} * {\b getSubSchema} (std::vector< unsigned >) const =0{\bkmkstart AAAAAAADXI}
{\bkmkend AAAAAAADXI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\b Schema} * {\b duplicateSchema} () const =0{\bkmkstart AAAAAAADXJ}
{\bkmkend AAAAAAADXJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const {\b column_type} & {\b getcolumn} (const unsigned index) const {\bkmkstart AAAAAAADXK}
{\bkmkend AAAAAAADXK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual schema_type {\b getSchemaType} () const =0{\bkmkstart AAAAAAADXL}
{\bkmkend AAAAAAADXL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b addColumn} ({\b column_type} ct, unsigned size){\bkmkstart AAAAAAADXM}
{\bkmkend AAAAAAADXM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b displayTuple} (const void *tuple_start_address, const char *spliter="|") const {\bkmkstart AAAAAAADXN}
{\bkmkend AAAAAAADXN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b toValue} (std::string text_tuple, void *binary_tuple, const char attr_separator){\bkmkstart AAAAAAADXO}
{\bkmkend AAAAAAADXO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b showAccum_off} (){\bkmkstart AAAAAAADXP}
{\bkmkend AAAAAAADXP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b hasSameSchema} ({\b Schema} *schema){\bkmkstart AAAAAAADXQ}
{\bkmkend AAAAAAADXQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual std::string {\b getColumnValue} (const void *tuple_start_address, int i){\bkmkstart AAAAAAADXR}
{\bkmkend AAAAAAADXR}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\b column_type} > {\b columns}{\bkmkstart AAAAAAADXS}
{\bkmkend AAAAAAADXS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADXT}
{\bkmkend AAAAAAADXT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Schema/Schema.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Schema/Schema.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SchemaFix Class Reference\par \pard\plain 
{\tc\tcl2 \v SchemaFix}
{\xe \v SchemaFix}
{\bkmkstart AAAAAAADXU}
{\bkmkend AAAAAAADXU}
Inheritance diagram for SchemaFix:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSchemaFix.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SchemaFix} (const std::vector< {\b column_type} > &columns){\bkmkstart AAAAAAADXV}
{\bkmkend AAAAAAADXV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SchemaFix} (const {\b SchemaFix} &r){\bkmkstart AAAAAAADXW}
{\bkmkend AAAAAAADXW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getTupleMaxSize} () const {\bkmkstart AAAAAAADXX}
{\bkmkend AAAAAAADXX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getTupleActualSize} (void *tuple) const {\bkmkstart AAAAAAADXY}
{\bkmkend AAAAAAADXY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b ingetTupleActualSize} (void *tuple) const {\bkmkstart AAAAAAADXZ}
{\bkmkend AAAAAAADXZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getTupleSize} () const {\bkmkstart AAAAAAADYA}
{\bkmkend AAAAAAADYA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b copy} (void *src, void *desc) const {\bkmkstart AAAAAAADYB}
{\bkmkend AAAAAAADYB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b getColumnValue} (unsigned index, void *src, void *desc){\bkmkstart AAAAAAADYC}
{\bkmkend AAAAAAADYC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b getColumnAddess} (const unsigned &index, const void *const &column_start) const __attribute__((always_inline)){\bkmkstart AAAAAAADYD}
{\bkmkend AAAAAAADYD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b getColumnOffset} (unsigned index) const {\bkmkstart AAAAAAADYE}
{\bkmkend AAAAAAADYE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b copyTuple} (void *src, void *desc) const {\bkmkstart AAAAAAADYF}
{\bkmkend AAAAAAADYF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Schema::schema_type {\b getSchemaType} () const {\bkmkstart AAAAAAADYG}
{\bkmkend AAAAAAADYG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b getSubSchema} (std::vector< unsigned >) const {\bkmkstart AAAAAAADYH}
{\bkmkend AAAAAAADYH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b duplicateSchema} () const {\bkmkstart AAAAAAADYI}
{\bkmkend AAAAAAADYI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addColumn} ({\b column_type} ct, unsigned size){\bkmkstart AAAAAAADYJ}
{\bkmkend AAAAAAADYJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getColumnOffset} (unsigned index){\bkmkstart AAAAAAADYK}
{\bkmkend AAAAAAADYK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b toValue} (std::string text_tuple, void *binary_tuple, const char attr_separator){\bkmkstart AAAAAAADYL}
{\bkmkend AAAAAAADYL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b showAccum_off} (){\bkmkstart AAAAAAADYM}
{\bkmkend AAAAAAADYM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADYN}
{\bkmkend AAAAAAADYN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Schema/SchemaFix.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Schema/SchemaFix.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SchemaVar Class Reference\par \pard\plain 
{\tc\tcl2 \v SchemaVar}
{\xe \v SchemaVar}
{\bkmkstart AAAAAAADYO}
{\bkmkend AAAAAAADYO}
Inheritance diagram for SchemaVar:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classSchemaVar.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SchemaVar} (std::vector< {\b column_type} > columns){\bkmkstart AAAAAAADYP}
{\bkmkend AAAAAAADYP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned {\b getTupleMaxSize} () const {\bkmkstart AAAAAAADYQ}
{\bkmkend AAAAAAADYQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned {\b getTupleActualSize} (void *tuple) const {\bkmkstart AAAAAAADYR}
{\bkmkend AAAAAAADYR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual unsigned {\b copyTuple} (void *src, void *desc) const {\bkmkstart AAAAAAADYS}
{\bkmkend AAAAAAADYS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual Schema::schema_type {\b getSchemaType} () const {\bkmkstart AAAAAAADYT}
{\bkmkend AAAAAAADYT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b getColumnValue} (unsigned index, void *src, void *desc){\bkmkstart AAAAAAADYU}
{\bkmkend AAAAAAADYU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b getColumnOffset} (unsigned index) const {\bkmkstart AAAAAAADYV}
{\bkmkend AAAAAAADYV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\b Schema} * {\b getSubSchema} (std::vector< unsigned >) const {\bkmkstart AAAAAAADYW}
{\bkmkend AAAAAAADYW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b duplicateSchema} () const {\bkmkstart AAAAAAADYX}
{\bkmkend AAAAAAADYX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void * {\b getColumnAddess} (const unsigned &index, const void *const &column_start) const __attribute__((always_inline)){\bkmkstart AAAAAAADYY}
{\bkmkend AAAAAAADYY}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAADYZ}
{\bkmkend AAAAAAADYZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Schema/SchemaVar.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Schema/SchemaVar.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Select_expr Struct Reference\par \pard\plain 
{\tc\tcl2 \v Select_expr}
{\xe \v Select_expr}
{\bkmkstart AAAAAAADZA}
{\bkmkend AAAAAAADZA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAADZB}
{\bkmkend AAAAAAADZB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b ascolname}{\bkmkstart AAAAAAADZC}
{\bkmkend AAAAAAADZC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b colname}{\bkmkstart AAAAAAADZD}
{\bkmkend AAAAAAADZD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Select_list Struct Reference\par \pard\plain 
{\tc\tcl2 \v Select_list}
{\xe \v Select_list}
{\bkmkstart AAAAAAADZE}
{\bkmkend AAAAAAADZE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAADZF}
{\bkmkend AAAAAAADZF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b isall}{\bkmkstart AAAAAAADZG}
{\bkmkend AAAAAAADZG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b args}{\bkmkstart AAAAAAADZH}
{\bkmkend AAAAAAADZH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAADZI}
{\bkmkend AAAAAAADZI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
semaphore Class Reference\par \pard\plain 
{\tc\tcl2 \v semaphore}
{\xe \v semaphore}
{\bkmkstart AAAAAAADZJ}
{\bkmkend AAAAAAADZJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b semaphore} (int initialValue=0){\bkmkstart AAAAAAADZK}
{\bkmkend AAAAAAADZK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_value} (int value){\bkmkstart AAAAAAADZL}
{\bkmkend AAAAAAADZL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b post} (int times=1){\bkmkstart AAAAAAADZM}
{\bkmkend AAAAAAADZM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b wait} (){\bkmkstart AAAAAAADZN}
{\bkmkend AAAAAAADZN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b timed_wait} (int millisecond){\bkmkstart AAAAAAADZO}
{\bkmkend AAAAAAADZO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b try_wait} (){\bkmkstart AAAAAAADZP}
{\bkmkend AAAAAAADZP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b destroy} (){\bkmkstart AAAAAAADZQ}
{\bkmkend AAAAAAADZQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b get_value} (){\bkmkstart AAAAAAADZR}
{\bkmkend AAAAAAADZR}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/lock.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Setauto_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Setauto_stmt}
{\xe \v Setauto_stmt}
{\bkmkstart AAAAAAADZS}
{\bkmkend AAAAAAADZS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAADZT}
{\bkmkend AAAAAAADZT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b isautocommit}{\bkmkstart AAAAAAADZU}
{\bkmkend AAAAAAADZU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Show_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Show_stmt}
{\xe \v Show_stmt}
{\bkmkstart AAAAAAADZV}
{\bkmkend AAAAAAADZV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAADZW}
{\bkmkend AAAAAAADZW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b full}{\bkmkstart AAAAAAADZX}
{\bkmkend AAAAAAADZX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b show_type}{\bkmkstart AAAAAAADZY}
{\bkmkend AAAAAAADZY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b database_name}{\bkmkstart AAAAAAADZZ}
{\bkmkend AAAAAAADZZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b like_string}{\bkmkstart AAAAAAAEAA}
{\bkmkend AAAAAAAEAA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamSortIterator::SNode Struct Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamSortIterator::SNode}
{\xe \v BlockStreamSortIterator::SNode}
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} * {\b state_}{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b tuple}{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Operate} * {\b op}{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b orderKey}{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b dir}{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamSortIterator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CPUResourceManager::socket Struct Reference\par \pard\plain 
{\tc\tcl2 \v CPUResourceManager::socket}
{\xe \v CPUResourceManager::socket}
{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b socket} (int number_of_cores){\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addCore} (int core_id){\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b getNumberOfFreeCores} (){\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b tryApplyCore} (){\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b applyCore} (){\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b freeCore} (int core_id){\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print} (){\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b busy_cores}{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b semaphore} {\b sem_in_socket_available_cores}{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b number_of_cores}{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\b core} > {\b cores}{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/CPUResource.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/CPUResource.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SpineLock Class Reference\par \pard\plain 
{\tc\tcl2 \v SpineLock}
{\xe \v SpineLock}
{\bkmkstart AAAAAAAEAB}
{\bkmkend AAAAAAAEAB}
\par
{
{\f2 #include <lock.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b acquire} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b try_lock} (){\bkmkstart AAAAAAAEAC}
{\bkmkend AAAAAAAEAC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b fakelock} (){\bkmkstart AAAAAAAEAD}
{\bkmkend AAAAAAAEAD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b getvalue} (){\bkmkstart AAAAAAAEAE}
{\bkmkend AAAAAAAEAE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b release} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Non-recursive spinlock. Using {\f2 xchg}  and {\f2 ldstub}  as in PostgresSQL. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v acquire\:SpineLock}
{\xe \v SpineLock\:acquire}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SpineLock::acquire (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEAF}
{\bkmkend AAAAAAAEAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Call blocks and retunrs only when it has the lock. \par
}{
Referenced by InsertOptimizedHashTable::insertBlock().}\par
}
{\xe \v release\:SpineLock}
{\xe \v SpineLock\:release}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SpineLock::release (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEAG}
{\bkmkend AAAAAAAEAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unlocks the lock object. \par
}{
Referenced by InsertOptimizedHashTable::insertBlock().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/lock.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Starttrans_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Starttrans_stmt}
{\xe \v Starttrans_stmt}
{\bkmkstart AAAAAAAEAH}
{\bkmkend AAAAAAAEAH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAAEAI}
{\bkmkend AAAAAAAEAI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamExchangeLowerMaterialized::State Struct Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamExchangeLowerMaterialized::State}
{\xe \v ExpandableBlockStreamExchangeLowerMaterialized::State}
{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *schema, {\b BlockStreamIteratorBase} *child, std::vector< NodeID > upper_id_list, unsigned block_size, unsigned long long int exchange_id=0, {\b partition_schema} partition_key_index=partition_schema::set_hash_partition()){\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_}{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_}{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long long int {\b exchange_id_}{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< NodeID > {\b upper_id_list_}{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

PartitionOffset {\b partition_offset}{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b partition_schema} {\b partition_schema_}{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamExchangeLowerMaterialized.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamAggregationIterator::State Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamAggregationIterator::State}
{\xe \v BlockStreamAggregationIterator::State}
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b aggregation} \{ {\b sum}, 
{\b min}, 
{\b max}, 
{\b count}, 
{\b avg}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AggNodeType} \{ {\b Hybrid_Agg_Global}, 
{\b Hybrid_Agg_Private}, 
{\b Not_Hybrid_Agg}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *input, {\b Schema} *output, {\b Schema} *hashSchema, {\b BlockStreamIteratorBase} *child, std::vector< unsigned > groupByIndex, std::vector< unsigned > aggregationIndex, std::vector< aggregation > aggregations, unsigned nbuckets, unsigned bucketsize, unsigned block_size, std::vector< unsigned >avgIndex, AggNodeType agg_node_type){\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b input}{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b output}{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b hashSchema}{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child}{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< unsigned > {\b groupByIndex}{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< unsigned > {\b aggregationIndex}{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< aggregation > {\b aggregations}{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b nbuckets}{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b bucketsize}{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size}{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< unsigned > {\b avgIndex}{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

AggNodeType {\b agg_node_type}{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockStreamAggregationIterator}{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamAggregationIterator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamNestLoopJoinIterator::State Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamNestLoopJoinIterator::State}
{\xe \v BlockStreamNestLoopJoinIterator::State}
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b BlockStreamIteratorBase} *child_left, {\b BlockStreamIteratorBase} *child_right, {\b Schema} *input_schema_left, {\b Schema} *input_schema_right, {\b Schema} *output_schema, unsigned block_size){\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_left}{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_right}{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b input_schema_left}{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b input_schema_right}{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b output_schema}{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockStreamNestLoopJoinIterator}{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamNestLoopJoinIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamNestLoopJoinIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamPrint::State Struct Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamPrint::State}
{\xe \v BlockStreamPrint::State}
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *const &schema, {\b BlockStreamIteratorBase} *const &child, const unsigned &block_size, std::vector< std::string > attribute_name, std::string spliter="\\t"){\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_}{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_}{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b spliter_}{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< std::string > {\b attribute_name_list_}{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/result_printer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/result_printer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamCombinedIterator::State Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamCombinedIterator::State}
{\xe \v BlockStreamCombinedIterator::State}
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} (std::vector< {\b Schema} * >inputs, {\b Schema} *output, std::vector< {\b BlockStreamIteratorBase} * > children){\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockStreamCombinedIterator}{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamCombinedIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamCombinedIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamHdfsScan::State Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamHdfsScan::State}
{\xe \v ExpandableBlockStreamHdfsScan::State}
{\bkmkstart AAAAAAABZW}
{\bkmkend AAAAAAABZW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} (string partition_file_name, {\b Schema} *{\b partition_schema}, unsigned block_size){\bkmkstart AAAAAAABZX}
{\bkmkend AAAAAAABZX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ExpandableBlockStreamHdfsScan}{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABZZ}
{\bkmkend AAAAAAABZZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamHdfsScan.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamHdfsScan.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamSingleColumnScanDisk::State Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamSingleColumnScanDisk::State}
{\xe \v ExpandableBlockStreamSingleColumnScanDisk::State}
{\bkmkstart AAAAAAACCX}
{\bkmkend AAAAAAACCX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} (std::string file_name, {\b Schema} *schema, unsigned block_size){\bkmkstart AAAAAAACCY}
{\bkmkend AAAAAAACCY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} (std::string file_name, {\b Schema} *schema, unsigned block_size, unsigned long used_length){\bkmkstart AAAAAAACCZ}
{\bkmkend AAAAAAACCZ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ExpandableBlockStreamSingleColumnScanDisk}{\bkmkstart AAAAAAACDA}
{\bkmkend AAAAAAACDA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACDB}
{\bkmkend AAAAAAACDB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamSingleColumnScanDisk.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamSingleColumnScanDisk.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamResultCollector::State Struct Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamResultCollector::State}
{\xe \v BlockStreamResultCollector::State}
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *input, {\b BlockStreamIteratorBase} *child, const unsigned block_size, std::vector< std::string > column_header=std::vector< std::string >(), const PartitionOffset partitoin_offset=0){\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockStreamResultCollector}{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/result_collector.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/result_collector.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamRandomMemAccess::State Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamRandomMemAccess::State}
{\xe \v ExpandableBlockStreamRandomMemAccess::State}
{\bkmkstart AAAAAAACBT}
{\bkmkend AAAAAAACBT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} (std::string file_name, {\b BlockStreamIteratorBase} *child, {\b Schema} *f_schema, {\b Schema} *c_schema, unsigned block_size){\bkmkstart AAAAAAACBU}
{\bkmkend AAAAAAACBU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ExpandableBlockStreamRandomMemAccess}{\bkmkstart AAAAAAACBV}
{\bkmkend AAAAAAACBV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamRandomMemAccess.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamRandomMemAccess.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamInIterator::State Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamInIterator::State}
{\xe \v BlockStreamInIterator::State}
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b BlockStreamIteratorBase} *child_set, {\b BlockStreamIteratorBase} *child_in, {\b Schema} *schema_child_set, {\b Schema} *schema_child_in, unsigned index_child_set, unsigned index_child_in, unsigned block_size, unsigned ht_nbuckets, unsigned ht_bucketsize){\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b BlockStreamIteratorBase} *child_set, {\b BlockStreamIteratorBase} *child_in, {\b Schema} *schema_child_set, {\b Schema} *schema_child_in, unsigned index_child_set, unsigned index_child_in, unsigned block_size){\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_set}{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_in}{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_child_set}{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_child_in}{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b index_child_set}{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b index_child_in}{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b ht_nbuckets}{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b ht_bucketsize}{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockStreamInIterator}{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamInIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamInIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamProjectIterator::State Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamProjectIterator::State}
{\xe \v BlockStreamProjectIterator::State}
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *input, {\b Schema} *output, {\b BlockStreamIteratorBase} *children, unsigned blocksize, {\b Mapping} map, vector< ExpressItem_List > v_ei, vector< {\b QNode} * >exprTree){\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *input, {\b Schema} *output, {\b BlockStreamIteratorBase} *children, unsigned blocksize, {\b Mapping} map, vector< ExpressItem_List > v_ei){\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b input_}{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b output_}{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< ExpressItem_List > {\b v_ei_}{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Mapping} {\b map_}{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b QNode} * > {\b exprTree_}{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_}{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockStreamProjectIterator}{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamProjectIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamProjectIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IndexScanIterator::State Class Reference\par \pard\plain 
{\tc\tcl2 \v IndexScanIterator::State}
{\xe \v IndexScanIterator::State}
{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b ProjectionID} projection_id, {\b Schema} *schema, unsigned long index_id, vector< {\b query_range} > query_range__, unsigned block_size){\bkmkstart AAAAAAACMA}
{\bkmkend AAAAAAACMA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionID} {\b projection_id_}{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_}{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b index_id_}{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b query_range} > {\b query_range_}{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b IndexScanIterator}{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/IndexScanIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/IndexScanIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamProjectionScan::State Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamProjectionScan::State}
{\xe \v ExpandableBlockStreamProjectionScan::State}
{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b ProjectionID} projection_id, {\b Schema} *schema, unsigned block_size, float sample_rate=1){\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_}{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionID} {\b projection_id_}{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAACAR}
{\bkmkend AAAAAAACAR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b sample_rate_}{\bkmkstart AAAAAAACAS}
{\bkmkend AAAAAAACAS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ExpandableBlockStreamProjectionScan}{\bkmkstart AAAAAAACAT}
{\bkmkend AAAAAAACAT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamProjectionScan.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamProjectionScan.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamBuffer::State Struct Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamBuffer::State}
{\xe \v ExpandableBlockStreamBuffer::State}
{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *input, {\b BlockStreamIteratorBase} *child, const unsigned block_size, const PartitionOffset partitoin_offset=0){\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ExpandableBlockStreamBuffer}{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamBuffer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamBuffer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamSingleColumnScan::State Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamSingleColumnScan::State}
{\xe \v ExpandableBlockStreamSingleColumnScan::State}
{\bkmkstart AAAAAAACCG}
{\bkmkend AAAAAAACCG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} (std::string file_name, {\b Schema} *schema, unsigned block_size){\bkmkstart AAAAAAACCH}
{\bkmkend AAAAAAACCH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} (std::string file_name, {\b Schema} *schema, unsigned block_size, unsigned long used_length){\bkmkstart AAAAAAACCI}
{\bkmkend AAAAAAACCI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAACCJ}
{\bkmkend AAAAAAACCJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_}{\bkmkstart AAAAAAACCK}
{\bkmkend AAAAAAACCK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b filename_}{\bkmkstart AAAAAAACCL}
{\bkmkend AAAAAAACCL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAACCM}
{\bkmkend AAAAAAACCM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b used_length_}{\bkmkstart AAAAAAACCN}
{\bkmkend AAAAAAACCN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b used_size_control_}{\bkmkstart AAAAAAACCO}
{\bkmkend AAAAAAACCO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ExpandableBlockStreamSingleColumnScan}{\bkmkstart AAAAAAACCP}
{\bkmkend AAAAAAACCP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACCQ}
{\bkmkend AAAAAAACCQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamSingleColumnScan.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamSingleColumnScan.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bottomLayerSorting::State Class Reference\par \pard\plain 
{\tc\tcl2 \v bottomLayerSorting::State}
{\xe \v bottomLayerSorting::State}
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *schema, {\b BlockStreamIteratorBase} *child, const unsigned block_size, {\b ProjectionID} projection_id, unsigned key_indexing, std::string index_name){\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_}{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_}{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionID} {\b projection_id_}{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b key_indexing_}{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b index_name_}{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b bottomLayerSorting}{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBIndexBuilding.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBIndexBuilding.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamExchangeEpoll::State Struct Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamExchangeEpoll::State}
{\xe \v ExpandableBlockStreamExchangeEpoll::State}
{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b child_} (child){\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b block_size_} (block_size){\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b exchange_id_} (exchange_id){\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b lower_id_list_} (lower_id_list){\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b upper_id_list_} (upper_id_list){\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b partition_schema_} (partition_index){\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_}{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_}{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long long int {\b exchange_id_}{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< NodeID > {\b lower_id_list_}{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< NodeID > {\b upper_id_list_}{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b partition_schema} {\b partition_schema_}{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b __pad0__}:schema_(schema){\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamExchangeEpoll.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamExpander::State Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamExpander::State}
{\xe \v BlockStreamExpander::State}
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *schema, {\b BlockStreamIteratorBase} *child, unsigned thread_count, unsigned block_size, unsigned block_count_in_buffer=10){\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_}{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_}{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b init_thread_count_}{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_count_in_buffer_}{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

PartitionOffset {\b partition_offset}{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockStreamExpander}{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamExpander.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamExpander.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamJoinIterator::State Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamJoinIterator::State}
{\xe \v BlockStreamJoinIterator::State}
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b BlockStreamIteratorBase} *child_left, {\b BlockStreamIteratorBase} *child_right, {\b Schema} *input_schema_left, {\b Schema} *input_schema_right, {\b Schema} *output_schema, {\b Schema} *ht_schema, std::vector< unsigned > joinIndex_left, std::vector< unsigned > joinIndex_right, std::vector< unsigned > payload_left, std::vector< unsigned > payload_right, unsigned ht_nbuckets, unsigned ht_bucketsize, unsigned block_size){\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_left}{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_right}{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b input_schema_left}{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b input_schema_right}{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b output_schema}{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b ht_schema}{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< unsigned > {\b joinIndex_left}{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< unsigned > {\b joinIndex_right}{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< unsigned > {\b payload_left}{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< unsigned > {\b payload_right}{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b ht_nbuckets}{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b ht_bucketsize}{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockStreamJoinIterator}{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamJoinIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamJoinIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamExchangeLowerEfficient::State Struct Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamExchangeLowerEfficient::State}
{\xe \v ExpandableBlockStreamExchangeLowerEfficient::State}
{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *schema, {\b BlockStreamIteratorBase} *child, std::vector< NodeID > upper_id_list, unsigned block_size, unsigned long long int exchange_id=0, {\b partition_schema} {\b partition_schema}=partition_schema::set_hash_partition()){\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_}{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_}{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long long int {\b exchange_id_}{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< NodeID > {\b upper_id_list_}{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b partition_schema} {\b partition_schema_}{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

PartitionOffset {\b partition_offset_}{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamExchangeLowerEfficient.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bottomLayerCollecting::State Class Reference\par \pard\plain 
{\tc\tcl2 \v bottomLayerCollecting::State}
{\xe \v bottomLayerCollecting::State}
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b ProjectionID} projection_id, {\b Schema} *schema, unsigned key_indexing, unsigned block_size){\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_}{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionID} {\b projection_id_}{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b key_indexing_}{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b bottomLayerCollecting}{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBIndexBuilding.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
IndexManager/CSBIndexBuilding.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamRandomDiskAccess::State Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamRandomDiskAccess::State}
{\xe \v ExpandableBlockStreamRandomDiskAccess::State}
{\bkmkstart AAAAAAACBF}
{\bkmkend AAAAAAACBF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} (std::string file_name, {\b BlockStreamIteratorBase} *child, {\b Schema} *f_schema, {\b Schema} *c_schema, unsigned block_size){\bkmkstart AAAAAAACBG}
{\bkmkend AAAAAAACBG}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ExpandableBlockStreamRandomDiskAccess}{\bkmkstart AAAAAAACBH}
{\bkmkend AAAAAAACBH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAACBI}
{\bkmkend AAAAAAACBI}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamRandomDiskAccess.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamRandomDiskAccess.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExpandableBlockStreamFilter::State Class Reference\par \pard\plain 
{\tc\tcl2 \v ExpandableBlockStreamFilter::State}
{\xe \v ExpandableBlockStreamFilter::State}
{\bkmkstart AAAAAAABYV}
{\bkmkend AAAAAAABYV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *schema, {\b BlockStreamIteratorBase} *child, vector< {\b QNode} * >qual, map< string, int >colindex, unsigned block_size){\bkmkstart AAAAAAABYW}
{\bkmkend AAAAAAABYW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *s, {\b BlockStreamIteratorBase} *child, std::vector< {\b AttributeComparator} > comparator_list, unsigned block_size){\bkmkstart AAAAAAABYX}
{\bkmkend AAAAAAABYX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_}{\bkmkstart AAAAAAABYY}
{\bkmkend AAAAAAABYY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_}{\bkmkstart AAAAAAABYZ}
{\bkmkend AAAAAAABYZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAABZA}
{\bkmkend AAAAAAABZA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b QNode} * > {\b qual_}{\bkmkstart AAAAAAABZB}
{\bkmkend AAAAAAABZB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::vector< {\b AttributeComparator} > {\b comparator_list_}{\bkmkstart AAAAAAABZC}
{\bkmkend AAAAAAABZC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< ExpressItem_List > {\b v_ei_}{\bkmkstart AAAAAAABZD}
{\bkmkend AAAAAAABZD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

map< string, int > {\b colindex_}{\bkmkstart AAAAAAABZE}
{\bkmkend AAAAAAABZE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ExpandableBlockStreamFilter}{\bkmkstart AAAAAAABZF}
{\bkmkend AAAAAAABZF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamFilter.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/ExpandableBlockStreamFilter.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamSortIterator::State Class Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamSortIterator::State}
{\xe \v BlockStreamSortIterator::State}
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *input, vector< unsigned > orderbyKey, {\b BlockStreamIteratorBase} *child, const unsigned block_size, vector< int > direction, const PartitionOffset partitoin_offset=0){\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b input_}{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< unsigned > {\b orderbyKey_}{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_}{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

PartitionOffset {\b partition_offset_}{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< int > {\b direction_}{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockStreamSortIterator}{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamSortIterator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamSortIterator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamLimit::State Struct Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamLimit::State}
{\xe \v BlockStreamLimit::State}
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *schema, {\b BlockStreamIteratorBase} *child, unsigned long limits, unsigned block_size, unsigned long start_position=0){\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b BlockStreamLimit}{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamLimit.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamLimit.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockStreamPerformanceMonitorTop::State Struct Reference\par \pard\plain 
{\tc\tcl2 \v BlockStreamPerformanceMonitorTop::State}
{\xe \v BlockStreamPerformanceMonitorTop::State}
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b State} ({\b Schema} *schema, {\b BlockStreamIteratorBase} *child, unsigned block_size, unsigned report_cycles=1000){\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b schema_}{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b BlockStreamIteratorBase} * {\b child_}{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b block_size_}{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b report_cycles_}{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/BlockStreamPerformanceMonitorTop.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::StaticString Class Reference\par \pard\plain 
{\tc\tcl2 \v Json::StaticString}
{\xe \v Json::StaticString}
{\bkmkstart AAAAAAAESQ}
{\bkmkend AAAAAAAESQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lightweight wrapper to tag static string. }}\par
{
{\f2 #include <json.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b StaticString} (const char *czstring){\bkmkstart AAAAAAAESR}
{\bkmkend AAAAAAAESR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b operator const char *} () const {\bkmkstart AAAAAAAESS}
{\bkmkend AAAAAAAESS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const char * {\b c_str} () const {\bkmkstart AAAAAAAEST}
{\bkmkend AAAAAAAEST}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lightweight wrapper to tag static string. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Value} constructor and objectValue member assignement takes advantage of the {\b StaticString} and avoid the cost of string duplication when storing the string or the member name.\par
Example of usage: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid * Json::Value aValue( StaticString("some text") );\par
* Json::Value object;\par
* static const StaticString code("code");\par
* object[code] = 1234;\par
* \par
}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/json/json.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StatisticOnTable Class Reference\par \pard\plain 
{\tc\tcl2 \v StatisticOnTable}
{\xe \v StatisticOnTable}
{\bkmkstart AAAAAAAEAJ}
{\bkmkend AAAAAAAEAJ}
Inheritance diagram for StatisticOnTable:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStatisticOnTable.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b StatisticOnTable} (unsigned bucketCnt){\bkmkstart AAAAAAAEAK}
{\bkmkend AAAAAAAEAK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Histogram} * {\b getPartStat} (const {\b PartitionID} partID){\bkmkstart AAAAAAAEAL}
{\bkmkend AAAAAAAEAL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b destory} (){\bkmkstart AAAAAAAEAM}
{\bkmkend AAAAAAAEAM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/stat/Statistic.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/stat/Statistic.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StatManager Class Reference\par \pard\plain 
{\tc\tcl2 \v StatManager}
{\xe \v StatManager}
{\bkmkstart AAAAAAAEAN}
{\bkmkend AAAAAAAEAN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Histogram} * {\b getHistogram} (const {\b AttributeID} attID){\bkmkstart AAAAAAAEAO}
{\bkmkend AAAAAAAEAO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Histogram} * {\b getStat} (const {\b AttributeID} attID, const {\b PartitionID} partID){\bkmkstart AAAAAAAEAP}
{\bkmkend AAAAAAAEAP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addStat} (const {\b AttributeID} attId, {\b Histogram} *stat){\bkmkstart AAAAAAAEAQ}
{\bkmkend AAAAAAAEAQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addStat} (const {\b AttributeID} attId, const {\b PartitionID} partId, const {\b Histogram} *stat){\bkmkstart AAAAAAAEAR}
{\bkmkend AAAAAAAEAR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b TableStatistic} * {\b getTableStatistic} (const TableID &table_id) const {\bkmkstart AAAAAAAEAS}
{\bkmkend AAAAAAAEAS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b AttributeStatistics} * {\b getAttributeStatistic} (const {\b AttributeID} &attrId) const {\bkmkstart AAAAAAAEAT}
{\bkmkend AAAAAAAEAT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b AttributeStatistics} * {\b getAttributeStatistic} (const {\b Attribute} &attr) const {\bkmkstart AAAAAAAEAU}
{\bkmkend AAAAAAAEAU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setTableStatistic} (const TableID &table_id, {\b TableStatistic} *tab_stat){\bkmkstart AAAAAAAEAV}
{\bkmkend AAAAAAAEAV}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b StatManager} * {\b getInstance} (){\bkmkstart AAAAAAAEAW}
{\bkmkend AAAAAAAEAW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/stat/StatManager.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/stat/StatManager.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Stmt}
{\xe \v Stmt}
{\bkmkstart AAAAAAAEAX}
{\bkmkend AAAAAAAEAX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAAEAY}
{\bkmkend AAAAAAAEAY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b data}{\bkmkstart AAAAAAAEAZ}
{\bkmkend AAAAAAAEAZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAAEBA}
{\bkmkend AAAAAAAEBA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b last}{\bkmkstart AAAAAAAEBB}
{\bkmkend AAAAAAAEBB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ttmath::StopCalculating Class Reference\par \pard\plain 
{\tc\tcl2 \v ttmath::StopCalculating}
{\xe \v ttmath::StopCalculating}
{\bkmkstart AAAAAAAFEM}
{\bkmkend AAAAAAAFEM}
\par
{
{\f2 #include <ttmathtypes.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual bool {\b WasStopSignal} () const volatile{\bkmkstart AAAAAAAFEN}
{\bkmkend AAAAAAAFEN}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this simple class can be used in multithreading model (you can write your own class derived from this one)\par
for example: in some functions like Factorial() /at the moment only Factorial/ you can give a pointer to the 'stop object', if the method WasStopSignal() of this object returns true that means we should break the calculating and return \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/types/ttmath/{\b ttmathtypes.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StorageBudgetMessage Struct Reference\par \pard\plain 
{\tc\tcl2 \v StorageBudgetMessage}
{\xe \v StorageBudgetMessage}
{\bkmkstart AAAAAAAEBC}
{\bkmkend AAAAAAAEBC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b StorageBudgetMessage} (const int &disk_budget, const int &memory_budget, const int &nodeid){\bkmkstart AAAAAAAEBD}
{\bkmkend AAAAAAAEBD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b disk_budget}{\bkmkstart AAAAAAAEBE}
{\bkmkend AAAAAAAEBE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b memory_budget}{\bkmkstart AAAAAAAEBF}
{\bkmkend AAAAAAAEBF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b nodeid}{\bkmkstart AAAAAAAEBG}
{\bkmkend AAAAAAAEBG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Message.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StorageManagerLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v StorageManagerLogging}
{\xe \v StorageManagerLogging}
{\bkmkstart AAAAAAAEBH}
{\bkmkend AAAAAAAEBH}
Inheritance diagram for StorageManagerLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStorageManagerLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StorageManagerMasterLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v StorageManagerMasterLogging}
{\xe \v StorageManagerMasterLogging}
{\bkmkstart AAAAAAAEBI}
{\bkmkend AAAAAAAEBI}
Inheritance diagram for StorageManagerMasterLogging:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classStorageManagerMasterLogging.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StreamBuffer Class Reference\par \pard\plain 
{\tc\tcl2 \v StreamBuffer}
{\xe \v StreamBuffer}
{\bkmkstart AAAAAAAEBJ}
{\bkmkend AAAAAAAEBJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b StreamBuffer} (unsigned length=10000){\bkmkstart AAAAAAAEBK}
{\bkmkend AAAAAAAEBK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Reorganize} (){\bkmkstart AAAAAAAEBL}
{\bkmkend AAAAAAAEBL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b MoveForwardEnd} (unsigned count){\bkmkstart AAAAAAAEBM}
{\bkmkend AAAAAAAEBM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b GetCurrent} () const {\bkmkstart AAAAAAAEBN}
{\bkmkend AAAAAAAEBN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b GetFreedBufferCount} () const {\bkmkstart AAAAAAAEBO}
{\bkmkend AAAAAAAEBO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Clear} (){\bkmkstart AAAAAAAEBP}
{\bkmkend AAAAAAAEBP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b IsEmpty} (){\bkmkstart AAAAAAAEBQ}
{\bkmkend AAAAAAAEBQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/StreamBuffer.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/StreamBuffer.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::Reader::StructuredError Struct Reference\par \pard\plain 
{\tc\tcl2 \v Json::Reader::StructuredError}
{\xe \v Json::Reader::StructuredError}
{\bkmkstart AAAAAAAEZP}
{\bkmkend AAAAAAAEZP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An error tagged with where in the JSON text it was encountered. }}\par
{
{\f2 #include <json.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

size_t {\b offset_start}{\bkmkstart AAAAAAAEZQ}
{\bkmkend AAAAAAAEZQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

size_t {\b offset_limit}{\bkmkstart AAAAAAAEZR}
{\bkmkend AAAAAAAEZR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b message}{\bkmkstart AAAAAAAEZS}
{\bkmkend AAAAAAAEZS}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An error tagged with where in the JSON text it was encountered. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The offsets give the [start, limit) range of bytes within the text. Note that this is bytes, not codepoints. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/json/json.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::StyledStreamWriter Class Reference\par \pard\plain 
{\tc\tcl2 \v Json::StyledStreamWriter}
{\xe \v Json::StyledStreamWriter}
{\bkmkstart AAAAAAAFAC}
{\bkmkend AAAAAAAFAC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a {\b Value} in {\f2 JSON} format in a human friendly way, to a stream rather than to a string. }}\par
{
{\f2 #include <json.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b StyledStreamWriter} (std::string indentation="\\t"){\bkmkstart AAAAAAAFAD}
{\bkmkend AAAAAAAFAD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write} (std::ostream &out, const {\b Value} &root)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serialize a {\b Value} in {\f2 JSON} format. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a {\b Value} in {\f2 JSON} format in a human friendly way, to a stream rather than to a string. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rules for line break and indent are as follow:{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Object value:{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
if empty then print \{\} without indent and line break\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
if not empty the print '\{', line break & indent, print one value per line and then unindent and line break and print '\}'.\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Array value:{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
if empty then print [] without indent and line break\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
if the array contains no object value, empty array or some other value types, and all the values fit on one lines, then print the array on a single line.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
otherwise, it the values do not fit on one line, or the array contains object or non empty array, then print one value per line.\par}
\par}
If the {\b Value} have comments then they are outputed according to their {\b CommentPlacement}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i indentation} \cell }{Each level will be indented by this amount extra. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See Also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b Reader}, {\b Value}, {\b Value::setComment()} \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v write\:Json::StyledStreamWriter}
{\xe \v Json::StyledStreamWriter\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Json::StyledStreamWriter::write (std::ostream & {\i out}, const {\b Value} & {\i root})}}
\par
{\bkmkstart AAAAAAAFAE}
{\bkmkend AAAAAAAFAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serialize a {\b Value} in {\f2 JSON} format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i out} \cell }{Stream to write to. (Can be ostringstream, e.g.) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i root} \cell }{{\b Value} to serialize. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid There is no point in deriving from {\b Writer}, since {\b write()} should not return a value. \par
}}{
Referenced by Json::operator<<().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/json/json.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/jsoncpp.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::StyledWriter Class Reference\par \pard\plain 
{\tc\tcl2 \v Json::StyledWriter}
{\xe \v Json::StyledWriter}
{\bkmkstart AAAAAAAFAA}
{\bkmkend AAAAAAAFAA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a {\b Value} in {\f2 JSON} format in a human friendly way. }}\par
{
{\f2 #include <json.h>}}\par
Inheritance diagram for Json::StyledWriter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classJson_1_1StyledWriter.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b write} (const {\b Value} &root)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serialize a {\b Value} in {\f2 JSON} format. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a {\b Value} in {\f2 JSON} format in a human friendly way. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The rules for line break and indent are as follow:{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Object value:{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
if empty then print \{\} without indent and line break\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
if not empty the print '\{', line break & indent, print one value per line and then unindent and line break and print '\}'.\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Array value:{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
if empty then print [] without indent and line break\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
if the array contains no object value, empty array or some other value types, and all the values fit on one lines, then print the array on a single line.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
otherwise, it the values do not fit on one line, or the array contains object or non empty array, then print one value per line.\par}
\par}
If the {\b Value} have comments then they are outputed according to their {\b CommentPlacement}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See Also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b Reader}, {\b Value}, {\b Value::setComment()} \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v write\:Json::StyledWriter}
{\xe \v Json::StyledWriter\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Json::StyledWriter::write (const {\b Value} & {\i root}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAFAB}
{\bkmkend AAAAAAAFAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Serialize a {\b Value} in {\f2 JSON} format. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i root} \cell }{{\b Value} to serialize. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid String containing the JSON document that represents the root value. \par
}}{
Implements {\b Json::Writer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAEZT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/json/json.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/jsoncpp.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Subquery Struct Reference\par \pard\plain 
{\tc\tcl2 \v Subquery}
{\xe \v Subquery}
{\bkmkstart AAAAAAAEBR}
{\bkmkend AAAAAAAEBR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAAEBS}
{\bkmkend AAAAAAAEBS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b querystring}{\bkmkstart AAAAAAAEBT}
{\bkmkend AAAAAAAEBT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAAEBU}
{\bkmkend AAAAAAAEBU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SubTuple Class Reference\par \pard\plain 
{\tc\tcl2 \v SubTuple}
{\xe \v SubTuple}
{\bkmkstart AAAAAAAEBV}
{\bkmkend AAAAAAAEBV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SubTuple} ({\b Schema} *srouce, {\b Schema} *target, std::vector< unsigned > index){\bkmkstart AAAAAAAEBW}
{\bkmkend AAAAAAAEBW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b getSubTuple} (void *&tuple, void *&target){\bkmkstart AAAAAAAEBX}
{\bkmkend AAAAAAAEBX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Schema/TupleConvertor.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Schema/TupleConvertor.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Table Struct Reference\par \pard\plain 
{\tc\tcl2 \v Table}
{\xe \v Table}
{\bkmkstart AAAAAAAEBY}
{\bkmkend AAAAAAAEBY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAAEBZ}
{\bkmkend AAAAAAAEBZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b dbname}{\bkmkstart AAAAAAAECA}
{\bkmkend AAAAAAAECA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b tablename}{\bkmkstart AAAAAAAECB}
{\bkmkend AAAAAAAECB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b astablename}{\bkmkstart AAAAAAAECC}
{\bkmkend AAAAAAAECC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b issubquery}{\bkmkstart AAAAAAAECD}
{\bkmkend AAAAAAAECD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b table_id}{\bkmkstart AAAAAAAECE}
{\bkmkend AAAAAAAECE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b subquery}{\bkmkstart AAAAAAAECF}
{\bkmkend AAAAAAAECF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b whcdn}{\bkmkstart AAAAAAAECG}
{\bkmkend AAAAAAAECG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TableDescriptor Class Reference\par \pard\plain 
{\tc\tcl2 \v TableDescriptor}
{\xe \v TableDescriptor}
{\bkmkstart AAAAAAAECH}
{\bkmkend AAAAAAAECH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b TableDescriptor} (const string &name, const TableID table_id){\bkmkstart AAAAAAAECI}
{\bkmkend AAAAAAAECI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addAttribute} ({\b Attribute} attr){\bkmkstart AAAAAAAECJ}
{\bkmkend AAAAAAAECJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b addAttribute} (string attname, data_type dt, unsigned max_length=0, bool unique=false, bool can_be_null=true){\bkmkstart AAAAAAAECK}
{\bkmkend AAAAAAAECK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b createHashPartitionedProjection} (vector< ColumnOffset > column_list, ColumnOffset partition_key_index, unsigned number_of_partitions){\bkmkstart AAAAAAAECL}
{\bkmkend AAAAAAAECL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b createHashPartitionedProjection} (vector< ColumnOffset > column_list, std::string partition_attribute_name, unsigned number_of_partitions){\bkmkstart AAAAAAAECM}
{\bkmkend AAAAAAAECM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b createHashPartitionedProjection} (vector< {\b Attribute} > column_list, std::string partition_attribute_name, unsigned number_of_partitions){\bkmkstart AAAAAAAECN}
{\bkmkend AAAAAAAECN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b createHashPartitionedProjectionOnAllAttribute} (std::string partition_attribute_name, unsigned number_of_partitions){\bkmkstart AAAAAAAECO}
{\bkmkend AAAAAAAECO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isExist} (const string &name) const {\bkmkstart AAAAAAAECP}
{\bkmkend AAAAAAAECP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b getTableName} () const {\bkmkstart AAAAAAAECQ}
{\bkmkend AAAAAAAECQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ColumnOffset {\b getColumnID} (const string &attrName) const {\bkmkstart AAAAAAAECR}
{\bkmkend AAAAAAAECR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

map< string, set< string > > {\b getColumnLocations} (const string &attrName) const {\bkmkstart AAAAAAAECS}
{\bkmkend AAAAAAAECS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b Attribute} > {\b getAttributes} () const {\bkmkstart AAAAAAAECT}
{\bkmkend AAAAAAAECT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b Attribute} > {\b getAttributes} (vector< unsigned > index_list) const {\bkmkstart AAAAAAAECU}
{\bkmkend AAAAAAAECU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} {\b getAttribute} (unsigned offset) const {\bkmkstart AAAAAAAECV}
{\bkmkend AAAAAAAECV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} {\b getAttribute} (const std::string &name) const {\bkmkstart AAAAAAAECW}
{\bkmkend AAAAAAAECW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Attribute} {\b getAttribute2} (const std::string &name) const {\bkmkstart AAAAAAAECX}
{\bkmkend AAAAAAAECX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addColumn} ({\b ProjectionDescriptor} *column){\bkmkstart AAAAAAAECY}
{\bkmkend AAAAAAAECY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b get_table_name} () const {\bkmkstart AAAAAAAECZ}
{\bkmkend AAAAAAAECZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

TableID {\b get_table_id} () const {\bkmkstart AAAAAAAEDA}
{\bkmkend AAAAAAAEDA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ProjectionDescriptor} * {\b getProjectoin} (ProjectionOffset) const {\bkmkstart AAAAAAAEDB}
{\bkmkend AAAAAAAEDB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getNumberOfProjection} () const {\bkmkstart AAAAAAAEDC}
{\bkmkend AAAAAAAEDC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Schema} * {\b getSchema} () const {\bkmkstart AAAAAAAEDD}
{\bkmkend AAAAAAAEDD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setRowNumber} (unsigned long row_number){\bkmkstart AAAAAAAEDE}
{\bkmkend AAAAAAAEDE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b getRowNumber} (){\bkmkstart AAAAAAAEDF}
{\bkmkend AAAAAAAEDF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b isEmpty} (){\bkmkstart AAAAAAAEDG}
{\bkmkend AAAAAAAEDG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned int {\b getNumberOfAttribute} (){\bkmkstart AAAAAAAEDH}
{\bkmkend AAAAAAAEDH}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int version){\bkmkstart AAAAAAAEDI}
{\bkmkend AAAAAAAEDI}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

string {\b tableName}{\bkmkstart AAAAAAAEDJ}
{\bkmkend AAAAAAAEDJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b Attribute} > {\b attributes}{\bkmkstart AAAAAAAEDK}
{\bkmkend AAAAAAAEDK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

TableID {\b table_id_}{\bkmkstart AAAAAAAEDL}
{\bkmkend AAAAAAAEDL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

vector< {\b ProjectionDescriptor} * > {\b projection_list_}{\bkmkstart AAAAAAAEDM}
{\bkmkend AAAAAAAEDM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b row_number_}{\bkmkstart AAAAAAAEDN}
{\bkmkend AAAAAAAEDN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAEDO}
{\bkmkend AAAAAAAEDO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/table.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/table.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TableIDAllocator Struct Reference\par \pard\plain 
{\tc\tcl2 \v TableIDAllocator}
{\xe \v TableIDAllocator}
{\bkmkstart AAAAAAAEDP}
{\bkmkend AAAAAAAEDP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b allocate_unique_table_id} (){\bkmkstart AAAAAAAEDQ}
{\bkmkend AAAAAAAEDQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b decrease_table_id} (){\bkmkstart AAAAAAAEDR}
{\bkmkend AAAAAAAEDR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<class Archive > void {\b serialize} (Archive &ar, const unsigned int file_version){\bkmkstart AAAAAAAEDS}
{\bkmkend AAAAAAAEDS}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Lock} {\b lock_}{\bkmkstart AAAAAAAEDT}
{\bkmkend AAAAAAAEDT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b table_id_curosr}{\bkmkstart AAAAAAAEDU}
{\bkmkend AAAAAAAEDU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAEDV}
{\bkmkend AAAAAAAEDV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/Catalog.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tablelist Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tablelist}
{\xe \v Tablelist}
{\bkmkstart AAAAAAAEDW}
{\bkmkend AAAAAAAEDW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAAEDX}
{\bkmkend AAAAAAAEDX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name1}{\bkmkstart AAAAAAAEDY}
{\bkmkend AAAAAAAEDY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name2}{\bkmkstart AAAAAAAEDZ}
{\bkmkend AAAAAAAEDZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAAEEA}
{\bkmkend AAAAAAAEEA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TableStatistic Class Reference\par \pard\plain 
{\tc\tcl2 \v TableStatistic}
{\xe \v TableStatistic}
{\bkmkstart AAAAAAAEEB}
{\bkmkend AAAAAAAEEB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b addAttributeStatistics} (const {\b AttributeID} &attr_id, {\b AttributeStatistics} *stat){\bkmkstart AAAAAAAEEC}
{\bkmkend AAAAAAAEEC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b AttributeStatistics} * {\b getAttributeStatistics} (const {\b AttributeID} &attr_id) const {\bkmkstart AAAAAAAEED}
{\bkmkend AAAAAAAEED}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b getCardinality} () const {\bkmkstart AAAAAAAEEE}
{\bkmkend AAAAAAAEEE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b print} () const {\bkmkstart AAAAAAAEEF}
{\bkmkend AAAAAAAEEF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned long {\b number_of_tuples_}{\bkmkstart AAAAAAAEEG}
{\bkmkend AAAAAAAEEG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/stat/TableStatistic.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Catalog/stat/TableStatistic.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ThreadContext Class Reference\par \pard\plain 
{\tc\tcl2 \v ThreadContext}
{\xe \v ThreadContext}
{\bkmkstart AAAAAAAEEH}
{\bkmkend AAAAAAAEEH}
Inheritance diagram for ThreadContext:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classThreadContext.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int32_t {\b get_locality_} () const {\bkmkstart AAAAAAAEEI}
{\bkmkend AAAAAAAEEI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b set_locality_} (int32_t locality){\bkmkstart AAAAAAAEEJ}
{\bkmkend AAAAAAAEEJ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
physical_operator/physical_operator.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ThreadManager Class Reference\par \pard\plain 
{\tc\tcl2 \v ThreadManager}
{\xe \v ThreadManager}
{\bkmkstart AAAAAAAEEK}
{\bkmkend AAAAAAAEEK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add} (pthread_t t){\bkmkstart AAAAAAAEEL}
{\bkmkend AAAAAAAEEL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b remove} (pthread_t t){\bkmkstart AAAAAAAEEM}
{\bkmkend AAAAAAAEEM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b getNumOfThreads} () const {\bkmkstart AAAAAAAEEN}
{\bkmkend AAAAAAAEEN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b ThreadManager} * {\b getInstance} (){\bkmkstart AAAAAAAEEO}
{\bkmkend AAAAAAAEEO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Resource/ThreadManager.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ThreadPool Class Reference\par \pard\plain 
{\tc\tcl2 \v ThreadPool}
{\xe \v ThreadPool}
{\bkmkstart AAAAAAAEEP}
{\bkmkend AAAAAAAEEP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b Thread_Pool_init} (int thread_count_in_pool_){\bkmkstart AAAAAAAEEQ}
{\bkmkend AAAAAAAEEQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void * {\b thread_exec_with_cond} (void *arg){\bkmkstart AAAAAAAEER}
{\bkmkend AAAAAAAEER}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b bind_cpu} (){\bkmkstart AAAAAAAEES}
{\bkmkend AAAAAAAEES}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b add_task} (void *(*)(void *), void *arg, bool e=false){\bkmkstart AAAAAAAEET}
{\bkmkend AAAAAAAEET}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void * {\b thread_exec} (void *arg){\bkmkstart AAAAAAAEEU}
{\bkmkend AAAAAAAEEU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b destroy_pool} ({\b ThreadPool} *tp){\bkmkstart AAAAAAAEEV}
{\bkmkend AAAAAAAEEV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/ThreadPool.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/ThreadPool.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ThreadPoolLogging Class Reference\par \pard\plain 
{\tc\tcl2 \v ThreadPoolLogging}
{\xe \v ThreadPoolLogging}
{\bkmkstart AAAAAAAEEW}
{\bkmkend AAAAAAAEEW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b log} (const char *format,...){\bkmkstart AAAAAAAEEX}
{\bkmkend AAAAAAAEEX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b elog} (const char *format,...){\bkmkstart AAAAAAAEEY}
{\bkmkend AAAAAAAEEY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Logging.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ThreadSafe Class Reference\par \pard\plain 
{\tc\tcl2 \v ThreadSafe}
{\xe \v ThreadSafe}
{\bkmkstart AAAAAAAEEZ}
{\bkmkend AAAAAAAEEZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static hostent * {\b gethostbyname_ts} (hostent &v, const char *host){\bkmkstart AAAAAAAEFA}
{\bkmkend AAAAAAAEFA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/ThreadSafe.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/ThreadSafe.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TimeOutReceiver Class Reference\par \pard\plain 
{\tc\tcl2 \v TimeOutReceiver}
{\xe \v TimeOutReceiver}
{\bkmkstart AAAAAAAEFB}
{\bkmkend AAAAAAAEFB}
Inheritance diagram for TimeOutReceiver:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classTimeOutReceiver.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b TimeOutReceiver} (Theron::EndPoint *endpoint){\bkmkstart AAAAAAAEFC}
{\bkmkend AAAAAAAEFC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b TimeOutReceiver} (Theron::EndPoint *endpoint, const char *name){\bkmkstart AAAAAAAEFD}
{\bkmkend AAAAAAAEFD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned {\b TimeOutWait} (unsigned expected_message_count, unsigned time_out_in_ms)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v TimeOutWait\:TimeOutReceiver}
{\xe \v TimeOutReceiver\:TimeOutWait}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned TimeOutReceiver::TimeOutWait (unsigned {\i expected_message_count}, unsigned {\i time_out_in_ms})}}
\par
{\bkmkstart AAAAAAAEFE}
{\bkmkend AAAAAAAEFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function supports timeout Wait. The calling of this method will be blocked until one of the following conditions satisfied. (1) expected number of messages are received before the timeout. Then the return value is the number of expected messages. (2) The time is out before expected number of messages are received. Then the return value is the number of received messages. E.g., TimeOutWait(10,1000)==10 will return true if 10 messages are received within 1 second, and will false if less than 10 messages are received within 1 second. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/TimeOutReceiver.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/TimeOutReceiver.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Truncate_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Truncate_stmt}
{\xe \v Truncate_stmt}
{\bkmkstart AAAAAAAEFF}
{\bkmkend AAAAAAAEFF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAAEFG}
{\bkmkend AAAAAAAEFG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name}{\bkmkstart AAAAAAAEFH}
{\bkmkend AAAAAAAEFH}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tuple Struct Reference\par \pard\plain 
{\tc\tcl2 \v Tuple}
{\xe \v Tuple}
{\bkmkstart AAAAAAAEFI}
{\bkmkend AAAAAAAEFI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int32_t {\b a1}{\bkmkstart AAAAAAAEFJ}
{\bkmkend AAAAAAAEFJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\b name} [14]{\bkmkstart AAAAAAAEFK}
{\bkmkend AAAAAAAEFK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

uint64_t {\b a2}{\bkmkstart AAAAAAAEFL}
{\bkmkend AAAAAAAEFL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int32_t {\b a3}{\bkmkstart AAAAAAAEFM}
{\bkmkend AAAAAAAEFM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Schema/Test/SubTuple_test.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TupleConvertor Class Reference\par \pard\plain 
{\tc\tcl2 \v TupleConvertor}
{\xe \v TupleConvertor}
{\bkmkstart AAAAAAAEFN}
{\bkmkend AAAAAAAEFN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b sub_tuple} (const {\b Schema} *&src_s, const {\b Schema} *&des_c, const void *const &tuple, void *desc, std::vector< unsigned > index){\bkmkstart AAAAAAAEFO}
{\bkmkend AAAAAAAEFO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Schema/TupleConvertor.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/Schema/TupleConvertor.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TypeCast Class Reference\par \pard\plain 
{\tc\tcl2 \v TypeCast}
{\xe \v TypeCast}
{\bkmkstart AAAAAAAEFP}
{\bkmkend AAAAAAAEFP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static TypeCastF {\b type_cast_func} [DATA_TYPE_NUMBER][DATA_TYPE_NUMBER]{\bkmkstart AAAAAAAEFQ}
{\bkmkend AAAAAAAEFQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static TypeCastFunction {\b type_cast_functions} [DATA_TYPE_NUMBER][DATA_TYPE_NUMBER]{\bkmkstart AAAAAAAEFR}
{\bkmkend AAAAAAAEFR}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/TypeCast.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/TypeCast.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TypePromotion Class Reference\par \pard\plain 
{\tc\tcl2 \v TypePromotion}
{\xe \v TypePromotion}
{\bkmkstart AAAAAAAEFS}
{\bkmkend AAAAAAAEFS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static data_type {\b arith_type_promotion_map} [DATA_TYPE_NUMBER][DATA_TYPE_NUMBER]{\bkmkstart AAAAAAAEFT}
{\bkmkend AAAAAAAEFT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/TypePromotionMap.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/TypePromotionMap.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ttmath::UInt< value_size > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v ttmath::UInt< value_size >}
{\xe \v ttmath::UInt< value_size >}
{\bkmkstart AAAAAAAFEX}
{\bkmkend AAAAAAAFEX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b UInt} implements a big integer value without a sign. }}\par
{
{\f2 #include <ttmathuint.h>}}\par
Inheritance diagram for ttmath::UInt< value_size >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classttmath_1_1UInt.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b hash} (std::size_t &seed) const {\bkmkstart AAAAAAAFEY}
{\bkmkend AAAAAAAFEY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class ostream_type > void {\b PrintTable} (ostream_type &output) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class char_type , class ostream_type > void {\b PrintLog} (const char_type *msg, ostream_type &output) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class char_type , class ostream_type > void {\b PrintLog} (const char_type *msg, {\b uint} carry, ostream_type &output) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Size} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetZero} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetOne} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetMax} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetMin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetFromTable} (const {\b uint} *temp_table, {\b uint} temp_table_len)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b AddOne} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b SubOne} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Rcl} ({\b uint} bits, {\b uint} c=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Rcr} ({\b uint} bits, {\b uint} c=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b CompensationToLeft} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b FindLeadingBit} ({\b uint} &table_id, {\b uint} &index) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b GetBit} ({\b uint} bit_index) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b SetBit} ({\b uint} bit_index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitAnd} (const {\b UInt}< value_size > &ss2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitOr} (const {\b UInt}< value_size > &ss2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitXor} (const {\b UInt}< value_size > &ss2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitNot} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BitNot2} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b MulInt} ({\b uint} ss2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<uint result_size> void {\b MulInt} ({\b uint} ss2, {\b UInt}< result_size > &result) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Mul} (const {\b UInt}< value_size > &ss2, {\b uint} algorithm=100)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MulBig} (const {\b UInt}< value_size > &ss2, {\b UInt}< value_size *2 > &result, {\b uint} algorithm=100)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Mul1} (const {\b UInt}< value_size > &ss2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Mul1Big} (const {\b UInt}< value_size > &ss2_, {\b UInt}< value_size *2 > &result)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Mul2} (const {\b UInt}< value_size > &ss2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Mul2Big} (const {\b UInt}< value_size > &ss2, {\b UInt}< value_size *2 > &result)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Mul3} (const {\b UInt}< value_size > &ss2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Mul3Big} (const {\b UInt}< value_size > &ss2, {\b UInt}< value_size *2 > &result)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b MulFastest} (const {\b UInt}< value_size > &ss2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MulFastestBig} (const {\b UInt}< value_size > &ss2, {\b UInt}< value_size *2 > &result)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b DivInt} ({\b uint} divisor, {\b uint} *remainder=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b uint} {\b DivInt} ({\b uint} divisor, {\b uint} &remainder){\bkmkstart AAAAAAAFEZ}
{\bkmkend AAAAAAAFEZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Div} (const {\b UInt}< value_size > &divisor, {\b UInt}< value_size > *remainder=0, {\b uint} algorithm=3)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b uint} {\b Div} (const {\b UInt}< value_size > &divisor, {\b UInt}< value_size > &remainder, {\b uint} algorithm=3){\bkmkstart AAAAAAAFFA}
{\bkmkend AAAAAAAFFA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Div1} (const {\b UInt}< value_size > &divisor, {\b UInt}< value_size > *remainder=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Div2} (const {\b UInt}< value_size > &divisor, {\b UInt}< value_size > *remainder=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b uint} {\b Div2} (const {\b UInt}< value_size > &divisor, {\b UInt}< value_size > &remainder){\bkmkstart AAAAAAAFFB}
{\bkmkend AAAAAAAFFB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Div3} (const {\b UInt}< value_size > &v, {\b UInt}< value_size > *remainder=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b Pow} ({\b UInt}< value_size > pow)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Sqrt} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ClearFirstBits} ({\b uint} n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsTheHighestBitSet} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsTheLowestBitSet} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsZero} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<uint argument_size> {\b uint} {\b FromUInt} (const {\b UInt}< argument_size > &p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FromUInt} ({\b uint} value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<uint argument_size> {\b UInt}< value_size > & {\b operator=} (const {\b UInt}< argument_size > &p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt}< value_size > & {\b operator=} (const {\b UInt}< value_size > &p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt}< value_size > & {\b operator=} ({\b uint} i)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt} ({\b uint} i)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt}< value_size > & {\b operator=} (sint i)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt} (sint i)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt} (const char *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt} (const wchar_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt} (const std::string &s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt} (const std::wstring &s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt} (const {\b UInt}< value_size > &u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<uint argument_size> {\b UInt} (const {\b UInt}< argument_size > &u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~UInt} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b ToUInt} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ToString} (std::string &result, {\b uint} b=10) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b ToString} (std::wstring &result, {\b uint} b=10) const {\bkmkstart AAAAAAAFFC}
{\bkmkend AAAAAAAFFC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b ToString} ({\b uint} b=10) const {\bkmkstart AAAAAAAFFD}
{\bkmkend AAAAAAAFFD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::wstring {\b ToWString} ({\b uint} b=10) const {\bkmkstart AAAAAAAFFE}
{\bkmkend AAAAAAAFFE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b FromString} (const char *s, {\b uint} b=10, const char **after_source=0, bool *value_read=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b FromString} (const wchar_t *s, {\b uint} b=10, const wchar_t **after_source=0, bool *value_read=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b FromString} (const std::string &s, {\b uint} b=10)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b FromString} (const std::wstring &s, {\b uint} b=10)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt}< value_size > & {\b operator=} (const char *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt}< value_size > & {\b operator=} (const wchar_t *s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt}< value_size > & {\b operator=} (const std::string &s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt}< value_size > & {\b operator=} (const std::wstring &s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CmpSmaller} (const {\b UInt}< value_size > &l, sint index=-1) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CmpBigger} (const {\b UInt}< value_size > &l, sint index=-1) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CmpEqual} (const {\b UInt}< value_size > &l, sint index=-1) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CmpSmallerEqual} (const {\b UInt}< value_size > &l, sint index=-1) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CmpBiggerEqual} (const {\b UInt}< value_size > &l, sint index=-1) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator<} (const {\b UInt}< value_size > &l) const {\bkmkstart AAAAAAAFFF}
{\bkmkend AAAAAAAFFF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator>} (const {\b UInt}< value_size > &l) const {\bkmkstart AAAAAAAFFG}
{\bkmkend AAAAAAAFFG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} (const {\b UInt}< value_size > &l) const {\bkmkstart AAAAAAAFFH}
{\bkmkend AAAAAAAFFH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator!=} (const {\b UInt}< value_size > &l) const {\bkmkstart AAAAAAAFFI}
{\bkmkend AAAAAAAFFI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator<=} (const {\b UInt}< value_size > &l) const {\bkmkstart AAAAAAAFFJ}
{\bkmkend AAAAAAAFFJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator>=} (const {\b UInt}< value_size > &l) const {\bkmkstart AAAAAAAFFK}
{\bkmkend AAAAAAAFFK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt}< value_size > {\b operator-} (const {\b UInt}< value_size > &p2) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > & {\b operator-=} (const {\b UInt}< value_size > &p2){\bkmkstart AAAAAAAFFL}
{\bkmkend AAAAAAAFFL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > {\b operator+} (const {\b UInt}< value_size > &p2) const {\bkmkstart AAAAAAAFFM}
{\bkmkend AAAAAAAFFM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > & {\b operator+=} (const {\b UInt}< value_size > &p2){\bkmkstart AAAAAAAFFN}
{\bkmkend AAAAAAAFFN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > {\b operator*} (const {\b UInt}< value_size > &p2) const {\bkmkstart AAAAAAAFFO}
{\bkmkend AAAAAAAFFO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > & {\b operator*=} (const {\b UInt}< value_size > &p2){\bkmkstart AAAAAAAFFP}
{\bkmkend AAAAAAAFFP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > {\b operator/} (const {\b UInt}< value_size > &p2) const {\bkmkstart AAAAAAAFFQ}
{\bkmkend AAAAAAAFFQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > & {\b operator/=} (const {\b UInt}< value_size > &p2){\bkmkstart AAAAAAAFFR}
{\bkmkend AAAAAAAFFR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > {\b operator%} (const {\b UInt}< value_size > &p2) const {\bkmkstart AAAAAAAFFS}
{\bkmkend AAAAAAAFFS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > & {\b operator%=} (const {\b UInt}< value_size > &p2){\bkmkstart AAAAAAAFFT}
{\bkmkend AAAAAAAFFT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt}< value_size > & {\b operator++} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt}< value_size > {\b operator++} (int)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > & {\b operator--} (){\bkmkstart AAAAAAAFFU}
{\bkmkend AAAAAAAFFU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > {\b operator--} (int){\bkmkstart AAAAAAAFFV}
{\bkmkend AAAAAAAFFV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > {\b operator>>} (int move){\bkmkstart AAAAAAAFFW}
{\bkmkend AAAAAAAFFW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > & {\b operator>>=} (int move){\bkmkstart AAAAAAAFFX}
{\bkmkend AAAAAAAFFX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > {\b operator<<} (int move){\bkmkstart AAAAAAAFFY}
{\bkmkend AAAAAAAFFY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UInt}< value_size > & {\b operator<<=} (int move){\bkmkstart AAAAAAAFFZ}
{\bkmkend AAAAAAAFFZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b uint} {\b Add} (const {\b UInt}< value_size > &ss2, {\b uint} c=0){\bkmkstart AAAAAAAFGA}
{\bkmkend AAAAAAAFGA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b uint} {\b AddInt} ({\b uint} value, {\b uint} index=0){\bkmkstart AAAAAAAFGB}
{\bkmkend AAAAAAAFGB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b uint} {\b AddTwoInts} ({\b uint} x2, {\b uint} x1, {\b uint} index){\bkmkstart AAAAAAAFGC}
{\bkmkend AAAAAAAFGC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b uint} {\b Sub} (const {\b UInt}< value_size > &ss2, {\b uint} c=0){\bkmkstart AAAAAAAFGD}
{\bkmkend AAAAAAAFGD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b uint} {\b SubInt} ({\b uint} value, {\b uint} index=0){\bkmkstart AAAAAAAFGE}
{\bkmkend AAAAAAAFGE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class char_type , class ostream_type > static void {\b PrintVectorLog} (const char_type *msg, ostream_type &output, const {\b uint} *vector, {\b uint} vector_len)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class char_type , class ostream_type > static void {\b PrintVectorLog} (const char_type *msg, {\b uint} carry, ostream_type &output, const {\b uint} *vector, {\b uint} vector_len)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b uint} {\b AddTwoWords} ({\b uint} a, {\b uint} b, {\b uint} carry, {\b uint} *result){\bkmkstart AAAAAAAFGF}
{\bkmkend AAAAAAAFGF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b uint} {\b SubTwoWords} ({\b uint} a, {\b uint} b, {\b uint} carry, {\b uint} *result){\bkmkstart AAAAAAAFGG}
{\bkmkend AAAAAAAFGG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const char * {\b LibTypeStr} (){\bkmkstart AAAAAAAFGH}
{\bkmkend AAAAAAAFGH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b LibTypeCode} {\b LibType} (){\bkmkstart AAAAAAAFGI}
{\bkmkend AAAAAAAFGI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b uint} {\b AddVector} (const {\b uint} *ss1, const {\b uint} *ss2, {\b uint} ss1_size, {\b uint} ss2_size, {\b uint} *result){\bkmkstart AAAAAAAFGJ}
{\bkmkend AAAAAAAFGJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b uint} {\b SubVector} (const {\b uint} *ss1, const {\b uint} *ss2, {\b uint} ss1_size, {\b uint} ss2_size, {\b uint} *result){\bkmkstart AAAAAAAFGK}
{\bkmkend AAAAAAAFGK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static sint {\b FindLeadingBitInWord} ({\b uint} x){\bkmkstart AAAAAAAFGL}
{\bkmkend AAAAAAAFGL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static {\b uint} {\b SetBitInWord} ({\b uint} &value, {\b uint} bit){\bkmkstart AAAAAAAFGM}
{\bkmkend AAAAAAAFGM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b MulTwoWords} ({\b uint} a, {\b uint} b, {\b uint} *result_high, {\b uint} *result_low){\bkmkstart AAAAAAAFGN}
{\bkmkend AAAAAAAFGN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static void {\b DivTwoWords} ({\b uint} a, {\b uint} b, {\b uint} c, {\b uint} *r, {\b uint} *rest){\bkmkstart AAAAAAAFGO}
{\bkmkend AAAAAAAFGO}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b uint} {\b table} [value_size]\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b operator<<} (std::ostream &s, const {\b UInt}< value_size > &l)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::wostream & {\b operator<<} (std::wostream &s, const {\b UInt}< value_size > &l)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::istream & {\b operator>>} (std::istream &s, {\b UInt}< value_size > &l)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::wistream & {\b operator>>} (std::wistream &s, {\b UInt}< value_size > &l)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<uint value_size>class ttmath::UInt< value_size >\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b UInt} implements a big integer value without a sign. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
value_size - how many bytes specify our value on 32bit platforms: value_size=1 -> 4 bytes -> 32 bits on 64bit platforms: value_size=1 -> 8 bytes -> 64 bits value_size = 1,2,3,4,5,6.... \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v UInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:UInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::UInt}< value_size >::{\b UInt} ({\b uint} {\i i}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFGP}
{\bkmkend AAAAAAAFGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a constructor for converting the uint to this class \par
}{
References ttmath::UInt< value_size >::FromUInt().}\par
}
{\xe \v UInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:UInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::UInt}< value_size >::{\b UInt} (sint {\i i}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFGQ}
{\bkmkend AAAAAAAFGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a constructor for converting the sint to this class\par
look at the description of {\b UInt::operator=(sint)} \par
}{
References ttmath::UInt< value_size >::FromUInt().}\par
}
{\xe \v UInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:UInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::UInt}< value_size >::{\b UInt} (const char * {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFGR}
{\bkmkend AAAAAAAFGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a constructor for converting a string to this class (with the base=10) \par
}{
References ttmath::UInt< value_size >::FromString().}\par
}
{\xe \v UInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:UInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::UInt}< value_size >::{\b UInt} (const wchar_t * {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFGS}
{\bkmkend AAAAAAAFGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a constructor for converting a string to this class (with the base=10) \par
}{
References ttmath::UInt< value_size >::FromString().}\par
}
{\xe \v UInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:UInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::UInt}< value_size >::{\b UInt} (const std::string & {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFGT}
{\bkmkend AAAAAAAFGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a constructor for converting a string to this class (with the base=10) \par
}{
References ttmath::UInt< value_size >::FromString().}\par
}
{\xe \v UInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:UInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::UInt}< value_size >::{\b UInt} (const std::wstring & {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFGU}
{\bkmkend AAAAAAAFGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a constructor for converting a string to this class (with the base=10) \par
}{
References ttmath::UInt< value_size >::FromString().}\par
}
{\xe \v UInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:UInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::UInt}< value_size >::{\b UInt} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFGV}
{\bkmkend AAAAAAAFGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a default constructor\par
we don't clear the table \par
}}
{\xe \v UInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:UInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::UInt}< value_size >::{\b UInt} (const {\b UInt}< value_size > & {\i u}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFGW}
{\bkmkend AAAAAAAFGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a copy constructor \par
}{
References ttmath::UInt< value_size >::table.}\par
}
{\xe \v UInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:UInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<uint argument_size> {\b ttmath::UInt}< value_size >::{\b UInt} (const {\b UInt}< argument_size > & {\i u}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFGX}
{\bkmkend AAAAAAAFGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a template for producting constructors for copying from another types \par
}{
References ttmath::UInt< value_size >::FromUInt().}\par
}
{\xe \v ~UInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:~UInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b ttmath::UInt}< value_size >::~{\b UInt} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFGY}
{\bkmkend AAAAAAAFGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a destructor \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddOne\:ttmath::UInt}
{\xe \v ttmath::UInt\:AddOne}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::AddOne (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFGZ}
{\bkmkend AAAAAAAFGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
basic mathematic functions\par
this method adds one to the existing value \par
}{
Referenced by ttmath::Int< value_size >::AddOne(), and ttmath::UInt< value_size >::operator++().}\par
}
{\xe \v BitAnd\:ttmath::UInt}
{\xe \v ttmath::UInt\:BitAnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::BitAnd (const {\b UInt}< value_size > & {\i ss2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHA}
{\bkmkend AAAAAAAFHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method performs a bitwise operation AND \par
}{
References ttmath::UInt< value_size >::table.}\par
}
{\xe \v BitNot\:ttmath::UInt}
{\xe \v ttmath::UInt\:BitNot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::BitNot (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHB}
{\bkmkend AAAAAAAFHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method performs a bitwise operation NOT \par
}{
References ttmath::UInt< value_size >::table.}\par
}
{\xe \v BitNot2\:ttmath::UInt}
{\xe \v ttmath::UInt\:BitNot2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::BitNot2 (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHC}
{\bkmkend AAAAAAAFHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method performs a bitwise operation NOT but only on the range of <0, leading_bit>\par
for example: BitNot2(8) = BitNot2( 1000(bin) ) = 111(bin) = 7 \par
}{
References ttmath::UInt< value_size >::FindLeadingBit(), ttmath::UInt< value_size >::table, TTMATH_BITS_PER_UINT, and TTMATH_UINT_MAX_VALUE.}\par
}
{\xe \v BitOr\:ttmath::UInt}
{\xe \v ttmath::UInt\:BitOr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::BitOr (const {\b UInt}< value_size > & {\i ss2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHD}
{\bkmkend AAAAAAAFHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method performs a bitwise operation OR \par
}{
References ttmath::UInt< value_size >::table.}\par
}
{\xe \v BitXor\:ttmath::UInt}
{\xe \v ttmath::UInt\:BitXor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::BitXor (const {\b UInt}< value_size > & {\i ss2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHE}
{\bkmkend AAAAAAAFHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method performs a bitwise operation XOR \par
}{
References ttmath::UInt< value_size >::table.}\par
}
{\xe \v ClearFirstBits\:ttmath::UInt}
{\xe \v ttmath::UInt\:ClearFirstBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::ClearFirstBits ({\b uint} {\i n}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHF}
{\bkmkend AAAAAAAFHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method sets n first bits to value zero\par
For example: let n=2 then if there's a value 111 (bin) there'll be '100' (bin) \par
}{
References ttmath::UInt< value_size >::SetZero(), ttmath::UInt< value_size >::table, TTMATH_BITS_PER_UINT, and TTMATH_UINT_MAX_VALUE.}\par
}
{\xe \v CmpBigger\:ttmath::UInt}
{\xe \v ttmath::UInt\:CmpBigger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> bool {\b ttmath::UInt}< value_size >::CmpBigger (const {\b UInt}< value_size > & {\i l}, sint {\i index} = {\f2 -1}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHG}
{\bkmkend AAAAAAAFHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method returns true if 'this' is bigger than 'l'\par
'index' is an index of the first word from will be the comparison performed (note: we start the comparison from back - from the last word, when index is -1 /default/ it is automatically set into the last word)\par
I introduced it for some kind of optimization made in the second division algorithm (Div2) \par
}{
References ttmath::UInt< value_size >::table.}\par
}
{\xe \v CmpBiggerEqual\:ttmath::UInt}
{\xe \v ttmath::UInt\:CmpBiggerEqual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> bool {\b ttmath::UInt}< value_size >::CmpBiggerEqual (const {\b UInt}< value_size > & {\i l}, sint {\i index} = {\f2 -1}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHH}
{\bkmkend AAAAAAAFHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method returns true if 'this' is bigger than or equal 'l'\par
'index' is an index of the first word from will be the comparison performed (note: we start the comparison from back - from the last word, when index is -1 /default/ it is automatically set into the last word) \par
}{
References ttmath::UInt< value_size >::table.}\par
{
Referenced by ttmath::UInt< value_size >::Div2().}\par
}
{\xe \v CmpEqual\:ttmath::UInt}
{\xe \v ttmath::UInt\:CmpEqual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> bool {\b ttmath::UInt}< value_size >::CmpEqual (const {\b UInt}< value_size > & {\i l}, sint {\i index} = {\f2 -1}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHI}
{\bkmkend AAAAAAAFHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method returns true if 'this' is equal 'l'\par
'index' is an index of the first word from will be the comparison performed (note: we start the comparison from back - from the last word, when index is -1 /default/ it is automatically set into the last word) \par
}{
References ttmath::UInt< value_size >::table.}\par
}
{\xe \v CmpSmaller\:ttmath::UInt}
{\xe \v ttmath::UInt\:CmpSmaller}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> bool {\b ttmath::UInt}< value_size >::CmpSmaller (const {\b UInt}< value_size > & {\i l}, sint {\i index} = {\f2 -1}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHJ}
{\bkmkend AAAAAAAFHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
methods for comparing\par
this method returns true if 'this' is smaller than 'l'\par
'index' is an index of the first word from will be the comparison performed (note: we start the comparison from back - from the last word, when index is -1 /default/ it is automatically set into the last word) I introduced it for some kind of optimization made in the second division algorithm (Div2) \par
}{
References ttmath::UInt< value_size >::table.}\par
}
{\xe \v CmpSmallerEqual\:ttmath::UInt}
{\xe \v ttmath::UInt\:CmpSmallerEqual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> bool {\b ttmath::UInt}< value_size >::CmpSmallerEqual (const {\b UInt}< value_size > & {\i l}, sint {\i index} = {\f2 -1}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHK}
{\bkmkend AAAAAAAFHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method returns true if 'this' is smaller than or equal 'l'\par
'index' is an index of the first word from will be the comparison performed (note: we start the comparison from back - from the last word, when index is -1 /default/ it is automatically set into the last word) \par
}{
References ttmath::UInt< value_size >::table.}\par
}
{\xe \v CompensationToLeft\:ttmath::UInt}
{\xe \v ttmath::UInt\:CompensationToLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::CompensationToLeft (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHL}
{\bkmkend AAAAAAAFHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method moves all bits into the left side (it returns value how many bits have been moved) \par
}{
References ttmath::UInt< value_size >::Rcl(), ttmath::UInt< value_size >::table, and TTMATH_BITS_PER_UINT.}\par
}
{\xe \v Div\:ttmath::UInt}
{\xe \v ttmath::UInt\:Div}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::Div (const {\b UInt}< value_size > & {\i divisor}, {\b UInt}< value_size > * {\i remainder} = {\f2 0}, {\b uint} {\i algorithm} = {\f2 3}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHM}
{\bkmkend AAAAAAAFHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
division this = this / ss2\par
return values: 0 - ok 1 - division by zero 'this' will be the quotient 'remainder' - remainder \par
}{
References ttmath::UInt< value_size >::Div1(), ttmath::UInt< value_size >::Div2(), and ttmath::UInt< value_size >::Div3().}\par
{
Referenced by ttmath::Int< value_size >::Div().}\par
}
{\xe \v Div1\:ttmath::UInt}
{\xe \v ttmath::UInt\:Div1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::Div1 (const {\b UInt}< value_size > & {\i divisor}, {\b UInt}< value_size > * {\i remainder} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHN}
{\bkmkend AAAAAAAFHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the first division algorithm radix 2 \par
}{
Referenced by ttmath::UInt< value_size >::Div().}\par
}
{\xe \v Div2\:ttmath::UInt}
{\xe \v ttmath::UInt\:Div2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::Div2 (const {\b UInt}< value_size > & {\i divisor}, {\b UInt}< value_size > * {\i remainder} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHO}
{\bkmkend AAAAAAAFHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the second division algorithm\par
return values: 0 - ok 1 - division by zero \par
}{
References ttmath::UInt< value_size >::CmpBiggerEqual(), ttmath::UInt< value_size >::SetBit(), ttmath::UInt< value_size >::SetZero(), and TTMATH_REFERENCE_ASSERT.}\par
{
Referenced by ttmath::UInt< value_size >::Div().}\par
}
{\xe \v Div3\:ttmath::UInt}
{\xe \v ttmath::UInt\:Div3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::Div3 (const {\b UInt}< value_size > & {\i v}, {\b UInt}< value_size > * {\i remainder} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHP}
{\bkmkend AAAAAAAFHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the third division algorithm\par
this algorithm is described in the following book: "The art of computer programming 2" (4.3.1 page 272) Donald E. Knuth \par
}{
References ttmath::UInt< value_size >::DivInt(), and TTMATH_REFERENCE_ASSERT.}\par
{
Referenced by ttmath::UInt< value_size >::Div().}\par
}
{\xe \v DivInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:DivInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::DivInt ({\b uint} {\i divisor}, {\b uint} * {\i remainder} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHQ}
{\bkmkend AAAAAAAFHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Division\par
division by one unsigned word\par
returns 1 when divisor is zero \par
}{
References ttmath::UInt< value_size >::SetZero(), and ttmath::UInt< value_size >::table.}\par
{
Referenced by ttmath::UInt< value_size >::Div3(), and ttmath::Int< value_size >::DivInt().}\par
}
{\xe \v FindLeadingBit\:ttmath::UInt}
{\xe \v ttmath::UInt\:FindLeadingBit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> bool {\b ttmath::UInt}< value_size >::FindLeadingBit ({\b uint} & {\i table_id}, {\b uint} & {\i index}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHR}
{\bkmkend AAAAAAAFHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method looks for the highest set bit\par
result: if 'this' is not zero: return value - true 'table_id' - the index of a word <0..value_size-1> 'index' - the index of this set bit in the word <0..31>\par
if 'this' is zero: return value - false both 'table_id' and 'index' are zero \par
}{
References ttmath::UInt< value_size >::table.}\par
{
Referenced by ttmath::UInt< value_size >::BitNot2().}\par
}
{\xe \v FromString\:ttmath::UInt}
{\xe \v ttmath::UInt\:FromString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::FromString (const char * {\i s}, {\b uint} {\i b} = {\f2 10}, const char ** {\i after_source} = {\f2 0}, bool * {\i value_read} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHS}
{\bkmkend AAAAAAAFHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts a string into its value it returns carry=1 if the value will be too big or an incorrect base 'b' is given\par
string is ended with a non-digit value, for example: "12" will be translated to 12 as well as: "12foo" will be translated to 12 too\par
existing first white characters will be ommited\par
if the value from s is too large the rest digits will be skipped\par
after_source (if exists) is pointing at the end of the parsed string\par
value_read (if exists) tells whether something has actually been read (at least one digit) \par
}{
Referenced by ttmath::UInt< value_size >::FromString(), ttmath::UInt< value_size >::operator=(), and ttmath::UInt< value_size >::UInt().}\par
}
{\xe \v FromString\:ttmath::UInt}
{\xe \v ttmath::UInt\:FromString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::FromString (const wchar_t * {\i s}, {\b uint} {\i b} = {\f2 10}, const wchar_t ** {\i after_source} = {\f2 0}, bool * {\i value_read} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHT}
{\bkmkend AAAAAAAFHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts a string into its value \par
}}
{\xe \v FromString\:ttmath::UInt}
{\xe \v ttmath::UInt\:FromString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::FromString (const std::string & {\i s}, {\b uint} {\i b} = {\f2 10}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHU}
{\bkmkend AAAAAAAFHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts a string into its value\par
(it returns carry=1 if the value will be too big or an incorrect base 'b' is given) \par
}{
References ttmath::UInt< value_size >::FromString().}\par
}
{\xe \v FromString\:ttmath::UInt}
{\xe \v ttmath::UInt\:FromString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::FromString (const std::wstring & {\i s}, {\b uint} {\i b} = {\f2 10}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHV}
{\bkmkend AAAAAAAFHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts a string into its value\par
(it returns carry=1 if the value will be too big or an incorrect base 'b' is given) \par
}{
References ttmath::UInt< value_size >::FromString().}\par
}
{\xe \v FromUInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:FromUInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<uint argument_size> {\b uint} {\b ttmath::UInt}< value_size >::FromUInt (const {\b UInt}< argument_size > & {\i p}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHW}
{\bkmkend AAAAAAAFHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
conversion methods\par
this method converts an UInt<another_size> type to this class\par
this operation has mainly sense if the value from p is equal or smaller than that one which is returned from {\b UInt<value_size>::SetMax()}\par
it returns a carry if the value 'p' is too big \par
}{
References ttmath::UInt< value_size >::table.}\par
{
Referenced by ttmath::UInt< value_size >::operator=(), and ttmath::UInt< value_size >::UInt().}\par
}
{\xe \v FromUInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:FromUInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::FromUInt ({\b uint} {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHX}
{\bkmkend AAAAAAAFHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts the uint type to this class \par
}}
{\xe \v GetBit\:ttmath::UInt}
{\xe \v ttmath::UInt\:GetBit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::GetBit ({\b uint} {\i bit_index}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHY}
{\bkmkend AAAAAAAFHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
setting the 'bit_index' bit\par
bit_index bigger or equal zero \par
}{
References ttmath::UInt< value_size >::table, and TTMATH_BITS_PER_UINT.}\par
}
{\xe \v IsTheHighestBitSet\:ttmath::UInt}
{\xe \v ttmath::UInt\:IsTheHighestBitSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> bool {\b ttmath::UInt}< value_size >::IsTheHighestBitSet () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFHZ}
{\bkmkend AAAAAAAFHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method returns true if the highest bit of the value is set \par
}{
Referenced by ttmath::Int< value_size >::IsSign().}\par
}
{\xe \v IsTheLowestBitSet\:ttmath::UInt}
{\xe \v ttmath::UInt\:IsTheLowestBitSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> bool {\b ttmath::UInt}< value_size >::IsTheLowestBitSet () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIA}
{\bkmkend AAAAAAAFIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method returns true if the lowest bit of the value is set \par
}}
{\xe \v IsZero\:ttmath::UInt}
{\xe \v ttmath::UInt\:IsZero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> bool {\b ttmath::UInt}< value_size >::IsZero () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIB}
{\bkmkend AAAAAAAFIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method returns true if the value is equal zero \par
}{
Referenced by ttmath::UInt< value_size >::Pow(), and ttmath::UInt< value_size >::Sqrt().}\par
}
{\xe \v Mul\:ttmath::UInt}
{\xe \v ttmath::UInt\:Mul}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::Mul (const {\b UInt}< value_size > & {\i ss2}, {\b uint} {\i algorithm} = {\f2 100}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIC}
{\bkmkend AAAAAAAFIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the multiplication 'this' = 'this' * ss2\par
algorithm: 100 - means automatically choose the fastest algorithm \par
}{
References ttmath::UInt< value_size >::Mul1(), ttmath::UInt< value_size >::Mul2(), ttmath::UInt< value_size >::Mul3(), and ttmath::UInt< value_size >::MulFastest().}\par
{
Referenced by ttmath::UInt< value_size >::Pow().}\par
}
{\xe \v Mul1\:ttmath::UInt}
{\xe \v ttmath::UInt\:Mul1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::Mul1 (const {\b UInt}< value_size > & {\i ss2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFID}
{\bkmkend AAAAAAAFID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the first version of the multiplication algorithm\par
multiplication: this = this * ss2\par
it returns carry if it has been \par
}{
References ttmath::UInt< value_size >::Rcl(), ttmath::UInt< value_size >::SetZero(), TTMATH_BITS_PER_UINT, and TTMATH_REFERENCE_ASSERT.}\par
{
Referenced by ttmath::UInt< value_size >::Mul(), and ttmath::UInt< value_size >::Mul1Big().}\par
}
{\xe \v Mul1Big\:ttmath::UInt}
{\xe \v ttmath::UInt\:Mul1Big}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::Mul1Big (const {\b UInt}< value_size > & {\i ss2_}, {\b UInt}< value_size *2 > & {\i result}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIE}
{\bkmkend AAAAAAAFIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
multiplication: result = this * ss2\par
result is twice bigger than 'this' and 'ss2' this method never returns carry \par
}{
References ttmath::UInt< value_size >::Mul1(), and ttmath::UInt< value_size >::table.}\par
{
Referenced by ttmath::UInt< value_size >::MulBig().}\par
}
{\xe \v Mul2\:ttmath::UInt}
{\xe \v ttmath::UInt\:Mul2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::Mul2 (const {\b UInt}< value_size > & {\i ss2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIF}
{\bkmkend AAAAAAAFIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the second version of the multiplication algorithm\par
this algorithm is similar to the 'schoolbook method' which is done by hand\par
multiplication: this = this * ss2\par
it returns carry if it has been \par
}{
References ttmath::UInt< value_size >::Mul2Big(), and ttmath::UInt< value_size >::table.}\par
{
Referenced by ttmath::UInt< value_size >::Mul().}\par
}
{\xe \v Mul2Big\:ttmath::UInt}
{\xe \v ttmath::UInt\:Mul2Big}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::Mul2Big (const {\b UInt}< value_size > & {\i ss2}, {\b UInt}< value_size *2 > & {\i result}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIG}
{\bkmkend AAAAAAAFIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
multiplication: result = this * ss2\par
result is twice bigger than this and ss2 this method never returns carry \par
}{
References ttmath::UInt< value_size >::table.}\par
{
Referenced by ttmath::UInt< value_size >::Mul2(), ttmath::UInt< value_size >::MulBig(), and ttmath::UInt< value_size >::MulFastestBig().}\par
}
{\xe \v Mul3\:ttmath::UInt}
{\xe \v ttmath::UInt\:Mul3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::Mul3 (const {\b UInt}< value_size > & {\i ss2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIH}
{\bkmkend AAAAAAAFIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
multiplication: this = this * ss2\par
This is Karatsuba Multiplication algorithm, we're using it when value_size is greater than or equal to TTMATH_USE_KARATSUBA_MULTIPLICATION_FROM_SIZE macro (defined in {\b ttmathuint.h}). If value_size is smaller then we're using {\b Mul2Big()} instead.\par
Karatsuba multiplication: Assume we have: this = x = x1*B^m + x0 ss2 = y = y1*B^m + y0 where x0 and y0 are less than B^m the product from multiplication we can show as: x*y = (x1*B^m + x0)(y1*B^m + y0) = z2*B^(2m) + z1*B^m + z0 where z2 = x1*y1 z1 = x1*y0 + x0*y1 z0 = x0*y0 this is standard schoolbook algorithm with O(n^2), Karatsuba observed that z1 can be given in other form: z1 = (x1 + x0)*(y1 + y0) - z2 - z0 / z1 = (x1*y1 + x1*y0 + x0*y1 + x0*y0) - x1*y1 - x0*y0 = x1*y0 + x0*y1 / and to calculate the multiplication we need only three multiplications (with some additions and subtractions)\par
Our objects 'this' and 'ss2' we divide into two parts and by using recurrence we calculate the multiplication. Karatsuba multiplication has O( n^(ln(3)/ln(2)) ) \par
}{
References ttmath::UInt< value_size >::Mul3Big(), and ttmath::UInt< value_size >::table.}\par
{
Referenced by ttmath::UInt< value_size >::Mul().}\par
}
{\xe \v Mul3Big\:ttmath::UInt}
{\xe \v ttmath::UInt\:Mul3Big}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::Mul3Big (const {\b UInt}< value_size > & {\i ss2}, {\b UInt}< value_size *2 > & {\i result}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFII}
{\bkmkend AAAAAAAFII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
multiplication: result = this * ss2\par
result is twice bigger than this and ss2, this method never returns carry, (Karatsuba multiplication) \par
}{
References ttmath::UInt< value_size >::table.}\par
{
Referenced by ttmath::UInt< value_size >::Mul3(), ttmath::UInt< value_size >::MulBig(), and ttmath::UInt< value_size >::MulFastestBig().}\par
}
{\xe \v MulBig\:ttmath::UInt}
{\xe \v ttmath::UInt\:MulBig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::MulBig (const {\b UInt}< value_size > & {\i ss2}, {\b UInt}< value_size *2 > & {\i result}, {\b uint} {\i algorithm} = {\f2 100}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIJ}
{\bkmkend AAAAAAAFIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the multiplication 'result' = 'this' * ss2\par
since the 'result' is twice bigger than 'this' and 'ss2' this method never returns a carry\par
algorithm: 100 - means automatically choose the fastest algorithm \par
}{
References ttmath::UInt< value_size >::Mul1Big(), ttmath::UInt< value_size >::Mul2Big(), ttmath::UInt< value_size >::Mul3Big(), and ttmath::UInt< value_size >::MulFastestBig().}\par
}
{\xe \v MulFastest\:ttmath::UInt}
{\xe \v ttmath::UInt\:MulFastest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::MulFastest (const {\b UInt}< value_size > & {\i ss2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIK}
{\bkmkend AAAAAAAFIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
multiplication this = this * ss2 \par
}{
References ttmath::UInt< value_size >::MulFastestBig(), and ttmath::UInt< value_size >::table.}\par
{
Referenced by ttmath::UInt< value_size >::Mul().}\par
}
{\xe \v MulFastestBig\:ttmath::UInt}
{\xe \v ttmath::UInt\:MulFastestBig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::MulFastestBig (const {\b UInt}< value_size > & {\i ss2}, {\b UInt}< value_size *2 > & {\i result}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIL}
{\bkmkend AAAAAAAFIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
multiplication result = this * ss2\par
this method is trying to select the fastest algorithm (in the future this method can be improved) \par
}{
References ttmath::UInt< value_size >::Mul2Big(), ttmath::UInt< value_size >::Mul3Big(), ttmath::UInt< value_size >::SetZero(), ttmath::UInt< value_size >::table, and TTMATH_USE_KARATSUBA_MULTIPLICATION_FROM_SIZE.}\par
{
Referenced by ttmath::UInt< value_size >::MulBig(), and ttmath::UInt< value_size >::MulFastest().}\par
}
{\xe \v MulInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:MulInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::MulInt ({\b uint} {\i ss2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIM}
{\bkmkend AAAAAAAFIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiplication\par
multiplication: this = this * ss2\par
it can return a carry \par
}{
References ttmath::UInt< value_size >::SetZero(), and ttmath::UInt< value_size >::table.}\par
}
{\xe \v MulInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:MulInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<uint result_size> void {\b ttmath::UInt}< value_size >::MulInt ({\b uint} {\i ss2}, {\b UInt}< result_size > & {\i result}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIN}
{\bkmkend AAAAAAAFIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
multiplication: result = this * ss2\par
we're using this method only when result_size is greater than value_size if so there will not be a carry \par
}{
References ttmath::UInt< value_size >::SetZero(), and ttmath::UInt< value_size >::table.}\par
}
{\xe \v operator++\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator++}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b UInt}<value_size>& {\b ttmath::UInt}< value_size >::operator++ (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIO}
{\bkmkend AAAAAAAFIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prefix operator e.g ++variable \par
}{
References ttmath::UInt< value_size >::AddOne().}\par
}
{\xe \v operator++\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator++}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b UInt}<value_size> {\b ttmath::UInt}< value_size >::operator++ (int ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIP}
{\bkmkend AAAAAAAFIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Postfix operator e.g variable++ \par
}{
References ttmath::UInt< value_size >::AddOne().}\par
}
{\xe \v operator-\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b UInt}<value_size> {\b ttmath::UInt}< value_size >::operator- (const {\b UInt}< value_size > & {\i p2}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIQ}
{\bkmkend AAAAAAAFIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
standard mathematical operators \par
}}
{\xe \v operator=\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<uint argument_size> {\b UInt}<value_size>& {\b ttmath::UInt}< value_size >::operator= (const {\b UInt}< argument_size > & {\i p}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIR}
{\bkmkend AAAAAAAFIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this operator converts an UInt<another_size> type to this class\par
it doesn't return a carry \par
}{
References ttmath::UInt< value_size >::FromUInt().}\par
}
{\xe \v operator=\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b UInt}<value_size>& {\b ttmath::UInt}< value_size >::operator= (const {\b UInt}< value_size > & {\i p}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIS}
{\bkmkend AAAAAAAFIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the assignment operator \par
}{
References ttmath::UInt< value_size >::table.}\par
}
{\xe \v operator=\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b UInt}<value_size>& {\b ttmath::UInt}< value_size >::operator= ({\b uint} {\i i}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIT}
{\bkmkend AAAAAAAFIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts the uint type to this class \par
}{
References ttmath::UInt< value_size >::FromUInt().}\par
}
{\xe \v operator=\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b UInt}<value_size>& {\b ttmath::UInt}< value_size >::operator= (sint {\i i}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIU}
{\bkmkend AAAAAAAFIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts the sint type to this class\par
we provide operator(sint) and the constructor(sint) in order to allow the programmer do that: UInt<..> type = 10;\par
above "10" constant has the int type (signed int), if we don't give such operators and constructors the compiler will not compile the program, because it has to make a conversion and doesn't know into which type (the {\b UInt} class has {\b operator=(const char*)}, {\b operator=(uint)} etc.) \par
}{
References ttmath::UInt< value_size >::FromUInt().}\par
}
{\xe \v operator=\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b UInt}<value_size>& {\b ttmath::UInt}< value_size >::operator= (const char * {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIV}
{\bkmkend AAAAAAAFIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this operator converts a string into its value (with base = 10) \par
}{
References ttmath::UInt< value_size >::FromString().}\par
}
{\xe \v operator=\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b UInt}<value_size>& {\b ttmath::UInt}< value_size >::operator= (const wchar_t * {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIW}
{\bkmkend AAAAAAAFIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this operator converts a string into its value (with base = 10) \par
}{
References ttmath::UInt< value_size >::FromString().}\par
}
{\xe \v operator=\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b UInt}<value_size>& {\b ttmath::UInt}< value_size >::operator= (const std::string & {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIX}
{\bkmkend AAAAAAAFIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this operator converts a string into its value (with base = 10) \par
}{
References ttmath::UInt< value_size >::FromString().}\par
}
{\xe \v operator=\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b UInt}<value_size>& {\b ttmath::UInt}< value_size >::operator= (const std::wstring & {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIY}
{\bkmkend AAAAAAAFIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this operator converts a string into its value (with base = 10) \par
}{
References ttmath::UInt< value_size >::FromString().}\par
}
{\xe \v Pow\:ttmath::UInt}
{\xe \v ttmath::UInt\:Pow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::Pow ({\b UInt}< value_size > {\i pow}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFIZ}
{\bkmkend AAAAAAAFIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
power this = this ^ pow binary algorithm (r-to-l)\par
return values: 0 - ok 1 - carry 2 - incorrect argument (0^0) \par
}{
References ttmath::UInt< value_size >::IsZero(), ttmath::UInt< value_size >::Mul(), ttmath::UInt< value_size >::SetOne(), and ttmath::UInt< value_size >::table.}\par
}
{\xe \v PrintLog\:ttmath::UInt}
{\xe \v ttmath::UInt\:PrintLog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<class char_type , class ostream_type > void {\b ttmath::UInt}< value_size >::PrintLog (const char_type * {\i msg}, ostream_type & {\i output}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJA}
{\bkmkend AAAAAAAFJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method is used when macro TTMATH_DEBUG_LOG is defined \par
}{
References ttmath::UInt< value_size >::PrintVectorLog(), and ttmath::UInt< value_size >::table.}\par
}
{\xe \v PrintLog\:ttmath::UInt}
{\xe \v ttmath::UInt\:PrintLog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<class char_type , class ostream_type > void {\b ttmath::UInt}< value_size >::PrintLog (const char_type * {\i msg}, {\b uint} {\i carry}, ostream_type & {\i output}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJB}
{\bkmkend AAAAAAAFJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method is used when macro TTMATH_DEBUG_LOG is defined \par
}{
References ttmath::UInt< value_size >::PrintVectorLog(), and ttmath::UInt< value_size >::table.}\par
}
{\xe \v PrintTable\:ttmath::UInt}
{\xe \v ttmath::UInt\:PrintTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<class ostream_type > void {\b ttmath::UInt}< value_size >::PrintTable (ostream_type & {\i output}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJC}
{\bkmkend AAAAAAAFJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
some methods used for debugging purposes\par
this method is only for debugging purposes or when we want to make a table of a variable (constant) in ttmathbig.h\par
it prints the table in a nice form of several columns \par
}{
References ttmath::UInt< value_size >::table.}\par
}
{\xe \v PrintVectorLog\:ttmath::UInt}
{\xe \v ttmath::UInt\:PrintVectorLog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<class char_type , class ostream_type > static void {\b ttmath::UInt}< value_size >::PrintVectorLog (const char_type * {\i msg}, ostream_type & {\i output}, const {\b uint} * {\i vector}, {\b uint} {\i vector_len}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFJD}
{\bkmkend AAAAAAAFJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method is used when macro TTMATH_DEBUG_LOG is defined \par
}{
Referenced by ttmath::UInt< value_size >::PrintLog(), and ttmath::UInt< value_size >::PrintVectorLog().}\par
}
{\xe \v PrintVectorLog\:ttmath::UInt}
{\xe \v ttmath::UInt\:PrintVectorLog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> template<class char_type , class ostream_type > static void {\b ttmath::UInt}< value_size >::PrintVectorLog (const char_type * {\i msg}, {\b uint} {\i carry}, ostream_type & {\i output}, const {\b uint} * {\i vector}, {\b uint} {\i vector_len}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAFJE}
{\bkmkend AAAAAAAFJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method is used when macro TTMATH_DEBUG_LOG is defined \par
}{
References ttmath::UInt< value_size >::PrintVectorLog().}\par
}
{\xe \v Rcl\:ttmath::UInt}
{\xe \v ttmath::UInt\:Rcl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::Rcl ({\b uint} {\i bits}, {\b uint} {\i c} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJF}
{\bkmkend AAAAAAAFJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
moving all bits into the left side 'bits' times return value <- this <- C\par
bits is from a range of <0, man * TTMATH_BITS_PER_UINT> or it can be even bigger then all bits will be set to 'c'\par
the value c will be set into the lowest bits and the method returns state of the last moved bit \par
}{
References TTMATH_BITS_PER_UINT.}\par
{
Referenced by ttmath::UInt< value_size >::CompensationToLeft(), and ttmath::UInt< value_size >::Mul1().}\par
}
{\xe \v Rcr\:ttmath::UInt}
{\xe \v ttmath::UInt\:Rcr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::Rcr ({\b uint} {\i bits}, {\b uint} {\i c} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJG}
{\bkmkend AAAAAAAFJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
moving all bits into the right side 'bits' times c -> this -> return value\par
bits is from a range of <0, man * TTMATH_BITS_PER_UINT> or it can be even bigger then all bits will be set to 'c'\par
the value c will be set into the highest bits and the method returns state of the last moved bit \par
}{
References TTMATH_BITS_PER_UINT.}\par
{
Referenced by ttmath::UInt< value_size >::Sqrt().}\par
}
{\xe \v SetBit\:ttmath::UInt}
{\xe \v ttmath::UInt\:SetBit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::SetBit ({\b uint} {\i bit_index}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJH}
{\bkmkend AAAAAAAFJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
setting the 'bit_index' bit and returning the last state of the bit\par
bit_index bigger or equal zero \par
}{
References ttmath::UInt< value_size >::table, and TTMATH_BITS_PER_UINT.}\par
{
Referenced by ttmath::UInt< value_size >::Div2().}\par
}
{\xe \v SetFromTable\:ttmath::UInt}
{\xe \v ttmath::UInt\:SetFromTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::SetFromTable (const {\b uint} * {\i temp_table}, {\b uint} {\i temp_table_len}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJI}
{\bkmkend AAAAAAAFJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method copies the value stored in an another table (warning: first values in temp_table are the highest words - it's different from our table)\par
we copy as many words as it is possible\par
if temp_table_len is bigger than value_size we'll try to round the lowest word from table depending on the last not used bit in temp_table (this rounding isn't a perfect rounding - look at the description below)\par
and if temp_table_len is smaller than value_size we'll clear the rest words in the table \par
}{
References ttmath::UInt< value_size >::table, TTMATH_UINT_HIGHEST_BIT, and TTMATH_UINT_MAX_VALUE.}\par
}
{\xe \v SetMax\:ttmath::UInt}
{\xe \v ttmath::UInt\:SetMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::SetMax (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJJ}
{\bkmkend AAAAAAAFJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method sets the max value which this class can hold (all bits will be one) \par
}{
References ttmath::UInt< value_size >::table, and TTMATH_UINT_MAX_VALUE.}\par
{
Referenced by ttmath::Int< value_size >::SetMax(), and ttmath::Int< value_size >::SetSignOne().}\par
}
{\xe \v SetMin\:ttmath::UInt}
{\xe \v ttmath::UInt\:SetMin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::SetMin (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJK}
{\bkmkend AAAAAAAFJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method sets the min value which this class can hold (for an unsigned integer value the zero is the smallest value) \par
}{
References ttmath::UInt< value_size >::SetZero().}\par
}
{\xe \v SetOne\:ttmath::UInt}
{\xe \v ttmath::UInt\:SetOne}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::SetOne (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJL}
{\bkmkend AAAAAAAFJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method sets one \par
}{
References ttmath::UInt< value_size >::SetZero(), and ttmath::UInt< value_size >::table.}\par
{
Referenced by ttmath::Int< value_size >::Pow(), and ttmath::UInt< value_size >::Pow().}\par
}
{\xe \v SetZero\:ttmath::UInt}
{\xe \v ttmath::UInt\:SetZero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::SetZero (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJM}
{\bkmkend AAAAAAAFJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method sets zero \par
}{
References ttmath::UInt< value_size >::table.}\par
{
Referenced by ttmath::Int< value_size >::ChangeSign(), ttmath::UInt< value_size >::ClearFirstBits(), ttmath::UInt< value_size >::Div2(), ttmath::UInt< value_size >::DivInt(), ttmath::UInt< value_size >::Mul1(), ttmath::UInt< value_size >::MulFastestBig(), ttmath::UInt< value_size >::MulInt(), ttmath::Int< value_size >::SetMin(), ttmath::UInt< value_size >::SetMin(), ttmath::UInt< value_size >::SetOne(), and ttmath::UInt< value_size >::Sqrt().}\par
}
{\xe \v Size\:ttmath::UInt}
{\xe \v ttmath::UInt\:Size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::Size () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJN}
{\bkmkend AAAAAAAFJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method returns the size of the table \par
}}
{\xe \v Sqrt\:ttmath::UInt}
{\xe \v ttmath::UInt\:Sqrt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::Sqrt (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJO}
{\bkmkend AAAAAAAFJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
square root e.g. Sqrt(9) = 3 ('digit-by-digit' algorithm) \par
}{
References ttmath::UInt< value_size >::IsZero(), ttmath::UInt< value_size >::Rcr(), ttmath::UInt< value_size >::SetZero(), and ttmath::UInt< value_size >::table.}\par
}
{\xe \v SubOne\:ttmath::UInt}
{\xe \v ttmath::UInt\:SubOne}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::SubOne (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJP}
{\bkmkend AAAAAAAFJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method subtracts one from the existing value \par
}{
Referenced by ttmath::Int< value_size >::SubOne().}\par
}
{\xe \v ToString\:ttmath::UInt}
{\xe \v ttmath::UInt\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> void {\b ttmath::UInt}< value_size >::ToString (std::string & {\i result}, {\b uint} {\i b} = {\f2 10}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJQ}
{\bkmkend AAAAAAAFJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method converts the value to a string with a base equal 'b' \par
}}
{\xe \v ToUInt\:ttmath::UInt}
{\xe \v ttmath::UInt\:ToUInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::ToUInt () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFJR}
{\bkmkend AAAAAAAFJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this method returns the lowest value from table\par
we must be sure when we using this method whether the value will hold in an uint type or not (the rest value from the table must be zero) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v operator<<\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> std::ostream& operator<< (std::ostream & {\i s}, const {\b UInt}< value_size > & {\i l}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAFJS}
{\bkmkend AAAAAAAFJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
output to standard streams \par
}}
{\xe \v operator<<\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> std::wostream& operator<< (std::wostream & {\i s}, const {\b UInt}< value_size > & {\i l}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAFJT}
{\bkmkend AAAAAAAFJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
output to standard streams \par
}}
{\xe \v operator>>\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator>>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> std::istream& operator>> (std::istream & {\i s}, {\b UInt}< value_size > & {\i l}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAFJU}
{\bkmkend AAAAAAAFJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
input from standard streams \par
}}
{\xe \v operator>>\:ttmath::UInt}
{\xe \v ttmath::UInt\:operator>>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> std::wistream& operator>> (std::wistream & {\i s}, {\b UInt}< value_size > & {\i l}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAFJV}
{\bkmkend AAAAAAAFJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
input from standard streams \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v table\:ttmath::UInt}
{\xe \v ttmath::UInt\:table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<uint value_size> {\b uint} {\b ttmath::UInt}< value_size >::table[value_size]}}
\par
{\bkmkstart AAAAAAAFJW}
{\bkmkend AAAAAAAFJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
buffer for the integer value table[0] - the lowest word of the value \par
}{
Referenced by ttmath::UInt< value_size >::BitAnd(), ttmath::UInt< value_size >::BitNot(), ttmath::UInt< value_size >::BitNot2(), ttmath::UInt< value_size >::BitOr(), ttmath::UInt< value_size >::BitXor(), ttmath::UInt< value_size >::ClearFirstBits(), ttmath::UInt< value_size >::CmpBigger(), ttmath::UInt< value_size >::CmpBiggerEqual(), ttmath::UInt< value_size >::CmpEqual(), ttmath::UInt< value_size >::CmpSmaller(), ttmath::UInt< value_size >::CmpSmallerEqual(), ttmath::UInt< value_size >::CompensationToLeft(), ttmath::UInt< value_size >::DivInt(), ttmath::UInt< value_size >::FindLeadingBit(), ttmath::UInt< value_size >::FromUInt(), ttmath::UInt< value_size >::GetBit(), ttmath::UInt< value_size >::Mul1Big(), ttmath::UInt< value_size >::Mul2(), ttmath::UInt< value_size >::Mul2Big(), ttmath::UInt< value_size >::Mul3(), ttmath::UInt< value_size >::Mul3Big(), ttmath::UInt< value_size >::MulFastest(), ttmath::UInt< value_size >::MulFastestBig(), ttmath::UInt< value_size >::MulInt(), ttmath::UInt< value_size >::operator=(), ttmath::UInt< value_size >::Pow(), ttmath::UInt< value_size >::PrintLog(), ttmath::UInt< value_size >::PrintTable(), ttmath::UInt< value_size >::SetBit(), ttmath::UInt< value_size >::SetFromTable(), ttmath::UInt< value_size >::SetMax(), ttmath::UInt< value_size >::SetOne(), ttmath::UInt< value_size >::SetZero(), ttmath::UInt< value_size >::Sqrt(), and ttmath::UInt< value_size >::UInt().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/types/ttmath/{\b ttmathuint.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ttmath::UInt< 0 > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v ttmath::UInt< 0 >}
{\xe \v ttmath::UInt< 0 >}
{\bkmkstart AAAAAAAFJX}
{\bkmkend AAAAAAAFJX}
\par
{
{\f2 #include <ttmathuint.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b Mul2Big} (const {\b UInt}< 0 > &, {\b UInt}< 0 > &){\bkmkstart AAAAAAAFJY}
{\bkmkend AAAAAAAFJY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b SetZero} (){\bkmkstart AAAAAAAFJZ}
{\bkmkend AAAAAAAFJZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b uint} {\b AddTwoInts} ({\b uint}, {\b uint}, {\b uint}){\bkmkstart AAAAAAAFKA}
{\bkmkend AAAAAAAFKA}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b uint} {\b table} [1]{\bkmkstart AAAAAAAFKB}
{\bkmkend AAAAAAAFKB}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<>class ttmath::UInt< 0 >\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this specialization is needed in order to not confused the compiler "error: ISO C++ forbids zero-size array" when compiling Mul3Big2() method \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/types/ttmath/{\b ttmathuint.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UniformInt Class Reference\par \pard\plain 
{\tc\tcl2 \v UniformInt}
{\xe \v UniformInt}
{\bkmkstart AAAAAAAEFU}
{\bkmkend AAAAAAAEFU}
Inheritance diagram for UniformInt:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUniformInt.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UniformInt} (int min=0, int max=1024 *1024, int seed=0){\bkmkstart AAAAAAAEFV}
{\bkmkend AAAAAAAEFV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual void {\b giveRandomValue} (void *column_addr){\bkmkstart AAAAAAAEFW}
{\bkmkend AAAAAAAEFW}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/data_distribution_generator.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
utility/data_distribution_generator.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UniformRangePartitionFunction Class Reference\par \pard\plain 
{\tc\tcl2 \v UniformRangePartitionFunction}
{\xe \v UniformRangePartitionFunction}
{\bkmkstart AAAAAAAEFX}
{\bkmkend AAAAAAAEFX}
Inheritance diagram for UniformRangePartitionFunction:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classUniformRangePartitionFunction.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b UniformRangePartitionFunction} (int min, int max, unsigned int k){\bkmkstart AAAAAAAEFY}
{\bkmkend AAAAAAAEFY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b get_partition_value} (const int &value) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned int {\b get_partition_value} (const unsigned long &value) const {\bkmkstart AAAAAAAEFZ}
{\bkmkend AAAAAAAEFZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned int {\b get_partition_value} (const double &value) const {\bkmkstart AAAAAAAEGA}
{\bkmkend AAAAAAAEGA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

PartitionStyle {\b getPartitionFashion} () const {\bkmkstart AAAAAAAEGB}
{\bkmkend AAAAAAAEGB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

unsigned {\b getNumberOfPartitions} () const {\bkmkstart AAAAAAAEGC}
{\bkmkend AAAAAAAEGC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b boost::serialization::access}{\bkmkstart AAAAAAAEGD}
{\bkmkend AAAAAAAEGD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_partition_value\:UniformRangePartitionFunction}
{\xe \v UniformRangePartitionFunction\:get_partition_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int UniformRangePartitionFunction::get_partition_value (const int & {\i value}) const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADLJ}
{\bkmkend AAAAAAADLJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the bucket number $n\in[0,k)$ for this {\i value} . {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{Value to hash. Must be within bounds. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Bucket number. \par
}}{
Implements {\b PartitionFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
References PartitionFunction::k_.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hash.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/hash.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Use_stmt Struct Reference\par \pard\plain 
{\tc\tcl2 \v Use_stmt}
{\xe \v Use_stmt}
{\bkmkstart AAAAAAAEGE}
{\bkmkend AAAAAAAEGE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAAEGF}
{\bkmkend AAAAAAAEGF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b name}{\bkmkstart AAAAAAAEGG}
{\bkmkend AAAAAAAEGG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::Value Class Reference\par \pard\plain 
{\tc\tcl2 \v Json::Value}
{\xe \v Json::Value}
{\bkmkstart AAAAAAAESU}
{\bkmkend AAAAAAAESU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a {\f2 JSON} value. }}\par
{
{\f2 #include <json.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef std::vector< std::string > {\b Members}{\bkmkstart AAAAAAAESV}
{\bkmkend AAAAAAAESV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b ValueIterator} {\b iterator}{\bkmkstart AAAAAAAESW}
{\bkmkend AAAAAAAESW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b ValueConstIterator} {\b const_iterator}{\bkmkstart AAAAAAAESX}
{\bkmkend AAAAAAAESX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef Json::UInt {\b UInt}{\bkmkstart AAAAAAAESY}
{\bkmkend AAAAAAAESY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef Json::Int {\b Int}{\bkmkstart AAAAAAAESZ}
{\bkmkend AAAAAAAESZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef Json::UInt64 {\b UInt64}{\bkmkstart AAAAAAAETA}
{\bkmkend AAAAAAAETA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef Json::Int64 {\b Int64}{\bkmkstart AAAAAAAETB}
{\bkmkend AAAAAAAETB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef Json::LargestInt {\b LargestInt}{\bkmkstart AAAAAAAETC}
{\bkmkend AAAAAAAETC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef Json::LargestUInt {\b LargestUInt}{\bkmkstart AAAAAAAETD}
{\bkmkend AAAAAAAETD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef Json::ArrayIndex {\b ArrayIndex}{\bkmkstart AAAAAAAETE}
{\bkmkend AAAAAAAETE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef std::map< CZString, {\b Value} > {\b ObjectValues}{\bkmkstart AAAAAAAETF}
{\bkmkend AAAAAAAETF}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} ({\b ValueType} type={\b nullValue})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a default {\b Value} of the given type. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} (Int value){\bkmkstart AAAAAAAETG}
{\bkmkend AAAAAAAETG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} (UInt value){\bkmkstart AAAAAAAETH}
{\bkmkend AAAAAAAETH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} (Int64 value){\bkmkstart AAAAAAAETI}
{\bkmkend AAAAAAAETI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} (UInt64 value){\bkmkstart AAAAAAAETJ}
{\bkmkend AAAAAAAETJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} (double value){\bkmkstart AAAAAAAETK}
{\bkmkend AAAAAAAETK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} (const char *value){\bkmkstart AAAAAAAETL}
{\bkmkend AAAAAAAETL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} (const char *beginValue, const char *endValue){\bkmkstart AAAAAAAETM}
{\bkmkend AAAAAAAETM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} (const {\b StaticString} &value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a value from a static string. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} (const std::string &value){\bkmkstart AAAAAAAETN}
{\bkmkend AAAAAAAETN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} (bool value){\bkmkstart AAAAAAAETO}
{\bkmkend AAAAAAAETO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} (const {\b Value} &other){\bkmkstart AAAAAAAETP}
{\bkmkend AAAAAAAETP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} & {\b operator=} ({\b Value} other){\bkmkstart AAAAAAAETQ}
{\bkmkend AAAAAAAETQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b swap} ({\b Value} &other)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ValueType} {\b type} () const {\bkmkstart AAAAAAAETR}
{\bkmkend AAAAAAAETR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator<} (const {\b Value} &other) const {\bkmkstart AAAAAAAETS}
{\bkmkend AAAAAAAETS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator<=} (const {\b Value} &other) const {\bkmkstart AAAAAAAETT}
{\bkmkend AAAAAAAETT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator>=} (const {\b Value} &other) const {\bkmkstart AAAAAAAETU}
{\bkmkend AAAAAAAETU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator>} (const {\b Value} &other) const {\bkmkstart AAAAAAAETV}
{\bkmkend AAAAAAAETV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} (const {\b Value} &other) const {\bkmkstart AAAAAAAETW}
{\bkmkend AAAAAAAETW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator!=} (const {\b Value} &other) const {\bkmkstart AAAAAAAETX}
{\bkmkend AAAAAAAETX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b compare} (const {\b Value} &other) const {\bkmkstart AAAAAAAETY}
{\bkmkend AAAAAAAETY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const char * {\b asCString} () const {\bkmkstart AAAAAAAETZ}
{\bkmkend AAAAAAAETZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b asString} () const {\bkmkstart AAAAAAAEUA}
{\bkmkend AAAAAAAEUA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Int {\b asInt} () const {\bkmkstart AAAAAAAEUB}
{\bkmkend AAAAAAAEUB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

UInt {\b asUInt} () const {\bkmkstart AAAAAAAEUC}
{\bkmkend AAAAAAAEUC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

Int64 {\b asInt64} () const {\bkmkstart AAAAAAAEUD}
{\bkmkend AAAAAAAEUD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

UInt64 {\b asUInt64} () const {\bkmkstart AAAAAAAEUE}
{\bkmkend AAAAAAAEUE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

LargestInt {\b asLargestInt} () const {\bkmkstart AAAAAAAEUF}
{\bkmkend AAAAAAAEUF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

LargestUInt {\b asLargestUInt} () const {\bkmkstart AAAAAAAEUG}
{\bkmkend AAAAAAAEUG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

float {\b asFloat} () const {\bkmkstart AAAAAAAEUH}
{\bkmkend AAAAAAAEUH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b asDouble} () const {\bkmkstart AAAAAAAEUI}
{\bkmkend AAAAAAAEUI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b asBool} () const {\bkmkstart AAAAAAAEUJ}
{\bkmkend AAAAAAAEUJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNull} () const {\bkmkstart AAAAAAAEUK}
{\bkmkend AAAAAAAEUK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isBool} () const {\bkmkstart AAAAAAAEUL}
{\bkmkend AAAAAAAEUL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isInt} () const {\bkmkstart AAAAAAAEUM}
{\bkmkend AAAAAAAEUM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isInt64} () const {\bkmkstart AAAAAAAEUN}
{\bkmkend AAAAAAAEUN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isUInt} () const {\bkmkstart AAAAAAAEUO}
{\bkmkend AAAAAAAEUO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isUInt64} () const {\bkmkstart AAAAAAAEUP}
{\bkmkend AAAAAAAEUP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isIntegral} () const {\bkmkstart AAAAAAAEUQ}
{\bkmkend AAAAAAAEUQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isDouble} () const {\bkmkstart AAAAAAAEUR}
{\bkmkend AAAAAAAEUR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isNumeric} () const {\bkmkstart AAAAAAAEUS}
{\bkmkend AAAAAAAEUS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isString} () const {\bkmkstart AAAAAAAEUT}
{\bkmkend AAAAAAAEUT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isArray} () const {\bkmkstart AAAAAAAEUU}
{\bkmkend AAAAAAAEUU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isObject} () const {\bkmkstart AAAAAAAEUV}
{\bkmkend AAAAAAAEUV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isConvertibleTo} ({\b ValueType} other) const {\bkmkstart AAAAAAAEUW}
{\bkmkend AAAAAAAEUW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

ArrayIndex {\b size} () const {\bkmkstart AAAAAAAEUX}
{\bkmkend AAAAAAAEUX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of values in array or object. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b empty} () const {\bkmkstart AAAAAAAEUY}
{\bkmkend AAAAAAAEUY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return true if empty array, empty object, or null; otherwise, false. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator!} () const {\bkmkstart AAAAAAAEUZ}
{\bkmkend AAAAAAAEUZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return isNull() }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resize} (ArrayIndex {\b size})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} & {\b operator[]} (ArrayIndex index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} & {\b operator[]} (int index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Value} & {\b operator[]} (ArrayIndex index) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Value} & {\b operator[]} (int index) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} {\b get} (ArrayIndex index, const {\b Value} &defaultValue) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isValidIndex} (ArrayIndex index) const {\bkmkstart AAAAAAAEVA}
{\bkmkend AAAAAAAEVA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return true if index < {\b size()}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} & {\b append} (const {\b Value} &value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Append value to array at the end. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} & {\b operator[]} (const char *key){\bkmkstart AAAAAAAEVB}
{\bkmkend AAAAAAAEVB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access an object value by name, create a null member if it does not exist. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Value} & {\b operator[]} (const char *key) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} & {\b operator[]} (const std::string &key){\bkmkstart AAAAAAAEVC}
{\bkmkend AAAAAAAEVC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access an object value by name, create a null member if it does not exist. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Value} & {\b operator[]} (const std::string &key) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} & {\b operator[]} (const {\b StaticString} &key)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access an object value by name, create a null member if it does not exist. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} {\b get} (const char *key, const {\b Value} &defaultValue) const {\bkmkstart AAAAAAAEVD}
{\bkmkend AAAAAAAEVD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the member named key if it exist, defaultValue otherwise. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} {\b get} (const std::string &key, const {\b Value} &defaultValue) const {\bkmkstart AAAAAAAEVE}
{\bkmkend AAAAAAAEVE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the member named key if it exist, defaultValue otherwise. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} {\b removeMember} (const char *key)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove and return the named member. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} {\b removeMember} (const std::string &key){\bkmkstart AAAAAAAEVF}
{\bkmkend AAAAAAAEVF}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Same as {\b removeMember(const char*)} }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isMember} (const char *key) const {\bkmkstart AAAAAAAEVG}
{\bkmkend AAAAAAAEVG}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return true if the object has a member named key. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isMember} (const std::string &key) const {\bkmkstart AAAAAAAEVH}
{\bkmkend AAAAAAAEVH}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return true if the object has a member named key. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Members {\b getMemberNames} () const \par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a list of the member names. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setComment} (const char *comment, {\b CommentPlacement} placement){\bkmkstart AAAAAAAEVI}
{\bkmkend AAAAAAAEVI}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Comments must be //... or /* ... */. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setComment} (const std::string &comment, {\b CommentPlacement} placement){\bkmkstart AAAAAAAEVJ}
{\bkmkend AAAAAAAEVJ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Comments must be //... or /* ... */. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b hasComment} ({\b CommentPlacement} placement) const {\bkmkstart AAAAAAAEVK}
{\bkmkend AAAAAAAEVK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b getComment} ({\b CommentPlacement} placement) const {\bkmkstart AAAAAAAEVL}
{\bkmkend AAAAAAAEVL}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include delimiters and embedded newlines. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

std::string {\b toStyledString} () const {\bkmkstart AAAAAAAEVM}
{\bkmkend AAAAAAAEVM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b const_iterator} {\b begin} () const {\bkmkstart AAAAAAAEVN}
{\bkmkend AAAAAAAEVN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b const_iterator} {\b end} () const {\bkmkstart AAAAAAAEVO}
{\bkmkend AAAAAAAEVO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b iterator} {\b begin} (){\bkmkstart AAAAAAAEVP}
{\bkmkend AAAAAAAEVP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b iterator} {\b end} (){\bkmkstart AAAAAAAEVQ}
{\bkmkend AAAAAAAEVQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setOffsetStart} (size_t start){\bkmkstart AAAAAAAEVR}
{\bkmkend AAAAAAAEVR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setOffsetLimit} (size_t limit){\bkmkstart AAAAAAAEVS}
{\bkmkend AAAAAAAEVS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

size_t {\b getOffsetStart} () const {\bkmkstart AAAAAAAEVT}
{\bkmkend AAAAAAAEVT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

size_t {\b getOffsetLimit} () const {\bkmkstart AAAAAAAEVU}
{\bkmkend AAAAAAAEVU}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const {\b Value} & {\b null} = reinterpret_cast<const {\b Value}&>(kNullRef){\bkmkstart AAAAAAAEVV}
{\bkmkend AAAAAAAEVV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const LargestInt {\b minLargestInt} = LargestInt(~(LargestUInt(-1) / 2)){\bkmkstart AAAAAAAEVW}
{\bkmkend AAAAAAAEVW}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum signed integer value that can be stored in a {\b Json::Value}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const LargestInt {\b maxLargestInt} = LargestInt(LargestUInt(-1) / 2){\bkmkstart AAAAAAAEVX}
{\bkmkend AAAAAAAEVX}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum signed integer value that can be stored in a {\b Json::Value}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const LargestUInt {\b maxLargestUInt} = LargestUInt(-1){\bkmkstart AAAAAAAEVY}
{\bkmkend AAAAAAAEVY}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum unsigned integer value that can be stored in a {\b Json::Value}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const Int {\b minInt} = Int(~(UInt(-1) / 2)){\bkmkstart AAAAAAAEVZ}
{\bkmkend AAAAAAAEVZ}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum signed int value that can be stored in a {\b Json::Value}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const Int {\b maxInt} = Int(UInt(-1) / 2){\bkmkstart AAAAAAAEWA}
{\bkmkend AAAAAAAEWA}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum signed int value that can be stored in a {\b Json::Value}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const UInt {\b maxUInt} = UInt(-1){\bkmkstart AAAAAAAEWB}
{\bkmkend AAAAAAAEWB}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum unsigned int value that can be stored in a {\b Json::Value}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const Int64 {\b minInt64} = Int64(~(UInt64(-1) / 2)){\bkmkstart AAAAAAAEWC}
{\bkmkend AAAAAAAEWC}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum signed 64 bits int value that can be stored in a {\b Json::Value}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const Int64 {\b maxInt64} = Int64(UInt64(-1) / 2){\bkmkstart AAAAAAAEWD}
{\bkmkend AAAAAAAEWD}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum signed 64 bits int value that can be stored in a {\b Json::Value}. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static const UInt64 {\b maxUInt64} = UInt64(-1){\bkmkstart AAAAAAAEWE}
{\bkmkend AAAAAAAEWE}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum unsigned 64 bits int value that can be stored in a {\b Json::Value}. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b ValueIteratorBase}{\bkmkstart AAAAAAAEWF}
{\bkmkend AAAAAAAEWF}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a {\f2 JSON} value. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a discriminated union wrapper that can represents a:{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
signed integer [range: {\b Value::minInt} - {\b Value::maxInt}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned integer (range: 0 - {\b Value::maxUInt})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UTF-8 string\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
'null'\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
an ordered list of {\b Value}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
collection of name/value pairs (javascript object)\par}
The type of the held value is represented by a {\b ValueType} and can be obtained using type().\par
values of an {\b objectValue} or {\b arrayValue} can be accessed using {\b operator[]()} methods. Non const methods will automatically create the a {\b nullValue} element if it does not exist. The sequence of an {\b arrayValue} will be automatically resize and initialized with {\b nullValue}. {\b resize()} can be used to enlarge or truncate an {\b arrayValue}.\par
The {\b get()} methods can be used to obtanis default value in the case the required element does not exist.\par
It is possible to iterate over the list of a {\b objectValue} values using the {\b getMemberNames()} method. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Value\:Json::Value}
{\xe \v Json::Value\:Value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json::Value::Value ({\b ValueType} {\i type} = {\f2 {\b nullValue}})}}
\par
{\bkmkstart AAAAAAAEWG}
{\bkmkend AAAAAAAEWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a default {\b Value} of the given type. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid This is a very useful constructor.\par
To create an empty array, pass arrayValue.\par
To create an empty object, pass objectValue.\par
Another Value can then be set to this one by assignment.\par
}
 This is useful since {\b clear()} and {\b resize()} will not alter types. {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Examples:\par
}
 {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Json::Value null_value; // null\par
Json::Value arr_value(Json::arrayValue); // []\par
Json::Value obj_value(Json::objectValue); // \{\}\par
}
 \par
}{
References Json::arrayValue, Json::booleanValue, Json::intValue, Json::nullValue, Json::objectValue, Json::realValue, Json::stringValue, and Json::uintValue.}\par
{
Referenced by operator[](), and resize().}\par
}
{\xe \v Value\:Json::Value}
{\xe \v Json::Value\:Value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json::Value::Value (const {\b StaticString} & {\i value})}}
\par
{\bkmkstart AAAAAAAEWH}
{\bkmkend AAAAAAAEWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a value from a static string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Like other value string constructor but do not duplicate the string for internal storage. The given string must remain alive after the call to this constructor. Example of usage: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid * Json::Value aValue( StaticString("some text") );\par
* \par
}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v append\:Json::Value}
{\xe \v Json::Value\:append}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} & Json::Value::append (const {\b Value} & {\i value})}}
\par
{\bkmkstart AAAAAAAEWI}
{\bkmkend AAAAAAAEWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Append value to array at the end. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Equivalent to jsonvalue[jsonvalue.size()] = value; \par
}{
References size().}\par
}
{\xe \v clear\:Json::Value}
{\xe \v Json::Value\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Json::Value::clear ()}}
\par
{\bkmkstart AAAAAAAEWJ}
{\bkmkend AAAAAAAEWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove all object members and array elements. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Precondition:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid type() is arrayValue, objectValue, or nullValue \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid type() is unchanged \par
}}{
References Json::arrayValue, Json::nullValue, and Json::objectValue.}\par
{
Referenced by resize().}\par
}
{\xe \v get\:Json::Value}
{\xe \v Json::Value\:get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} Json::Value::get (ArrayIndex {\i index}, const {\b Value} & {\i defaultValue}) const}}
\par
{\bkmkstart AAAAAAAEWK}
{\bkmkend AAAAAAAEWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the array contains at least index+1 elements, returns the element value, otherwise returns defaultValue. \par
}}
{\xe \v getMemberNames\:Json::Value}
{\xe \v Json::Value\:getMemberNames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Value::Members Json::Value::getMemberNames () const}}
\par
{\bkmkstart AAAAAAAEWL}
{\bkmkend AAAAAAAEWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a list of the member names. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If null, return an empty list. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Precondition:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid type() is objectValue or nullValue \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid if type() was nullValue, it remains nullValue \par
}}{
References Json::nullValue, and Json::objectValue.}\par
}
{\xe \v operator[]\:Json::Value}
{\xe \v Json::Value\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} & Json::Value::operator[] (ArrayIndex {\i index})}}
\par
{\bkmkstart AAAAAAAEWM}
{\bkmkend AAAAAAAEWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access an array element (zero based index ). If the array contains less than index element, then null value are inserted in the array so that its size is index+1. (You may need to say 'value[0u]' to get your compiler to distinguish this from the operator[] which takes a string.) \par
}{
References Json::arrayValue, Json::nullValue, and Value().}\par
}
{\xe \v operator[]\:Json::Value}
{\xe \v Json::Value\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} & Json::Value::operator[] (int {\i index})}}
\par
{\bkmkstart AAAAAAAEWN}
{\bkmkend AAAAAAAEWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access an array element (zero based index ). If the array contains less than index element, then null value are inserted in the array so that its size is index+1. (You may need to say 'value[0u]' to get your compiler to distinguish this from the operator[] which takes a string.) \par
}}
{\xe \v operator[]\:Json::Value}
{\xe \v Json::Value\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Value} & Json::Value::operator[] (ArrayIndex {\i index}) const}}
\par
{\bkmkstart AAAAAAAEWO}
{\bkmkend AAAAAAAEWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access an array element (zero based index ) (You may need to say 'value[0u]' to get your compiler to distinguish this from the operator[] which takes a string.) \par
}{
References Json::arrayValue, and Json::nullValue.}\par
}
{\xe \v operator[]\:Json::Value}
{\xe \v Json::Value\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Value} & Json::Value::operator[] (int {\i index}) const}}
\par
{\bkmkstart AAAAAAAEWP}
{\bkmkend AAAAAAAEWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access an array element (zero based index ) (You may need to say 'value[0u]' to get your compiler to distinguish this from the operator[] which takes a string.) \par
}}
{\xe \v operator[]\:Json::Value}
{\xe \v Json::Value\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Value} & Json::Value::operator[] (const char * {\i key}) const}}
\par
{\bkmkstart AAAAAAAEWQ}
{\bkmkend AAAAAAAEWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access an object value by name, returns null if there is no member with that name. \par
}{
References Json::nullValue, and Json::objectValue.}\par
}
{\xe \v operator[]\:Json::Value}
{\xe \v Json::Value\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Value} & Json::Value::operator[] (const std::string & {\i key}) const}}
\par
{\bkmkstart AAAAAAAEWR}
{\bkmkend AAAAAAAEWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access an object value by name, returns null if there is no member with that name. \par
}}
{\xe \v operator[]\:Json::Value}
{\xe \v Json::Value\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} & Json::Value::operator[] (const {\b StaticString} & {\i key})}}
\par
{\bkmkstart AAAAAAAEWS}
{\bkmkend AAAAAAAEWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access an object value by name, create a null member if it does not exist. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the object as no entry for that name, then the member name used to store the new entry is not duplicated. Example of use: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid * Json::Value object;\par
* static const StaticString code("code");\par
* object[code] = 1234;\par
* \par
}
 \par
}}
{\xe \v removeMember\:Json::Value}
{\xe \v Json::Value\:removeMember}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} Json::Value::removeMember (const char * {\i key})}}
\par
{\bkmkstart AAAAAAAEWT}
{\bkmkend AAAAAAAEWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove and return the named member. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Do nothing if it did not exist. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the removed {\b Value}, or null. \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Precondition:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid type() is objectValue or nullValue \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid type() is unchanged \par
}}{
References Json::nullValue, and Json::objectValue.}\par
{
Referenced by removeMember().}\par
}
{\xe \v resize\:Json::Value}
{\xe \v Json::Value\:resize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Json::Value::resize (ArrayIndex {\i size})}}
\par
{\bkmkstart AAAAAAAEWU}
{\bkmkend AAAAAAAEWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resize the array to size elements. New elements are initialized to null. May only be called on nullValue or arrayValue. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Precondition:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid type() is arrayValue or nullValue \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Postcondition:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid type() is arrayValue \par
}}{
References Json::arrayValue, clear(), Json::nullValue, size(), and Value().}\par
}
{\xe \v swap\:Json::Value}
{\xe \v Json::Value\:swap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Json::Value::swap ({\b Value} & {\i other})}}
\par
{\bkmkstart AAAAAAAEWV}
{\bkmkend AAAAAAAEWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Swap values. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Currently, comments are intentionally not swapped, for both logic and efficiency. \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/json/json.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/jsoncpp.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::ValueConstIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v Json::ValueConstIterator}
{\xe \v Json::ValueConstIterator}
{\bkmkstart AAAAAAAEXY}
{\bkmkend AAAAAAAEXY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
const iterator for object and array value. }}\par
{
{\f2 #include <json.h>}}\par
Inheritance diagram for Json::ValueConstIterator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classJson_1_1ValueConstIterator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef const {\b Value} {\b value_type}{\bkmkstart AAAAAAAEXZ}
{\bkmkend AAAAAAAEXZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned int {\b size_t}{\bkmkstart AAAAAAAEYA}
{\bkmkend AAAAAAAEYA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef int {\b difference_type}{\bkmkstart AAAAAAAEYB}
{\bkmkend AAAAAAAEYB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef const {\b Value} & {\b reference}{\bkmkstart AAAAAAAEYC}
{\bkmkend AAAAAAAEYC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef const {\b Value} * {\b pointer}{\bkmkstart AAAAAAAEYD}
{\bkmkend AAAAAAAEYD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b ValueConstIterator} {\b SelfType}{\bkmkstart AAAAAAAEYE}
{\bkmkend AAAAAAAEYE}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SelfType} & {\b operator=} (const {\b ValueIteratorBase} &other){\bkmkstart AAAAAAAEYF}
{\bkmkend AAAAAAAEYF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SelfType} {\b operator++} (int){\bkmkstart AAAAAAAEYG}
{\bkmkend AAAAAAAEYG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SelfType} {\b operator--} (int){\bkmkstart AAAAAAAEYH}
{\bkmkend AAAAAAAEYH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SelfType} & {\b operator--} (){\bkmkstart AAAAAAAEYI}
{\bkmkend AAAAAAAEYI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SelfType} & {\b operator++} (){\bkmkstart AAAAAAAEYJ}
{\bkmkend AAAAAAAEYJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b reference} {\b operator*} () const {\bkmkstart AAAAAAAEYK}
{\bkmkend AAAAAAAEYK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b pointer} {\b operator->} () const {\bkmkstart AAAAAAAEYL}
{\bkmkend AAAAAAAEYL}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b Value}{\bkmkstart AAAAAAAEYM}
{\bkmkend AAAAAAAEYM}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
const iterator for object and array value. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/json/json.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/jsoncpp.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::ValueIterator Class Reference\par \pard\plain 
{\tc\tcl2 \v Json::ValueIterator}
{\xe \v Json::ValueIterator}
{\bkmkstart AAAAAAAEYN}
{\bkmkend AAAAAAAEYN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iterator for object and array value. }}\par
{
{\f2 #include <json.h>}}\par
Inheritance diagram for Json::ValueIterator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classJson_1_1ValueIterator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b Value} {\b value_type}{\bkmkstart AAAAAAAEYO}
{\bkmkend AAAAAAAEYO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned int {\b size_t}{\bkmkstart AAAAAAAEYP}
{\bkmkend AAAAAAAEYP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef int {\b difference_type}{\bkmkstart AAAAAAAEYQ}
{\bkmkend AAAAAAAEYQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b Value} & {\b reference}{\bkmkstart AAAAAAAEYR}
{\bkmkend AAAAAAAEYR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b Value} * {\b pointer}{\bkmkstart AAAAAAAEYS}
{\bkmkend AAAAAAAEYS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b ValueIterator} {\b SelfType}{\bkmkstart AAAAAAAEYT}
{\bkmkend AAAAAAAEYT}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ValueIterator} (const {\b ValueConstIterator} &other){\bkmkstart AAAAAAAEYU}
{\bkmkend AAAAAAAEYU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ValueIterator} (const {\b ValueIterator} &other){\bkmkstart AAAAAAAEYV}
{\bkmkend AAAAAAAEYV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SelfType} & {\b operator=} (const {\b SelfType} &other){\bkmkstart AAAAAAAEYW}
{\bkmkend AAAAAAAEYW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SelfType} {\b operator++} (int){\bkmkstart AAAAAAAEYX}
{\bkmkend AAAAAAAEYX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SelfType} {\b operator--} (int){\bkmkstart AAAAAAAEYY}
{\bkmkend AAAAAAAEYY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SelfType} & {\b operator--} (){\bkmkstart AAAAAAAEYZ}
{\bkmkend AAAAAAAEYZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b SelfType} & {\b operator++} (){\bkmkstart AAAAAAAEZA}
{\bkmkend AAAAAAAEZA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b reference} {\b operator*} () const {\bkmkstart AAAAAAAEZB}
{\bkmkend AAAAAAAEZB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b pointer} {\b operator->} () const {\bkmkstart AAAAAAAEZC}
{\bkmkend AAAAAAAEZC}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

class {\b Value}{\bkmkstart AAAAAAAEZD}
{\bkmkend AAAAAAAEZD}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iterator for object and array value. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/json/json.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/jsoncpp.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::ValueIteratorBase Class Reference\par \pard\plain 
{\tc\tcl2 \v Json::ValueIteratorBase}
{\xe \v Json::ValueIteratorBase}
{\bkmkstart AAAAAAAEXG}
{\bkmkend AAAAAAAEXG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
base class for {\b Value} iterators. }}\par
{
{\f2 #include <json.h>}}\par
Inheritance diagram for Json::ValueIteratorBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classJson_1_1ValueIteratorBase.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef \par
std::bidirectional_iterator_tag {\b iterator_category}{\bkmkstart AAAAAAAEXH}
{\bkmkend AAAAAAAEXH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef unsigned int {\b size_t}{\bkmkstart AAAAAAAEXI}
{\bkmkend AAAAAAAEXI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef int {\b difference_type}{\bkmkstart AAAAAAAEXJ}
{\bkmkend AAAAAAAEXJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef {\b ValueIteratorBase} {\b SelfType}{\bkmkstart AAAAAAAEXK}
{\bkmkend AAAAAAAEXK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ValueIteratorBase} (const Value::ObjectValues::iterator &current){\bkmkstart AAAAAAAEXL}
{\bkmkend AAAAAAAEXL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator==} (const {\b SelfType} &other) const {\bkmkstart AAAAAAAEXM}
{\bkmkend AAAAAAAEXM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b operator!=} (const {\b SelfType} &other) const {\bkmkstart AAAAAAAEXN}
{\bkmkend AAAAAAAEXN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

difference_type {\b operator-} (const {\b SelfType} &other) const {\bkmkstart AAAAAAAEXO}
{\bkmkend AAAAAAAEXO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} {\b key} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

UInt {\b index} () const {\bkmkstart AAAAAAAEXP}
{\bkmkend AAAAAAAEXP}
\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the index of the referenced {\b Value}. -1 if it is not an arrayValue. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b memberName} () const \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Value} & {\b deref} () const {\bkmkstart AAAAAAAEXQ}
{\bkmkend AAAAAAAEXQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b increment} (){\bkmkstart AAAAAAAEXR}
{\bkmkend AAAAAAAEXR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b decrement} (){\bkmkstart AAAAAAAEXS}
{\bkmkend AAAAAAAEXS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

difference_type {\b computeDistance} (const {\b SelfType} &other) const {\bkmkstart AAAAAAAEXT}
{\bkmkend AAAAAAAEXT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

bool {\b isEqual} (const {\b SelfType} &other) const {\bkmkstart AAAAAAAEXU}
{\bkmkend AAAAAAAEXU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b copy} (const {\b SelfType} &other){\bkmkstart AAAAAAAEXV}
{\bkmkend AAAAAAAEXV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
base class for {\b Value} iterators. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v key\:Json::ValueIteratorBase}
{\xe \v Json::ValueIteratorBase\:key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} Json::ValueIteratorBase::key () const}}
\par
{\bkmkstart AAAAAAAEXW}
{\bkmkend AAAAAAAEXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return either the index or the member name of the referenced value as a {\b Value}. \par
}{
References memberName().}\par
}
{\xe \v memberName\:Json::ValueIteratorBase}
{\xe \v Json::ValueIteratorBase\:memberName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * Json::ValueIteratorBase::memberName () const}}
\par
{\bkmkstart AAAAAAAEXX}
{\bkmkend AAAAAAAEXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the member name of the referenced {\b Value}. "" if it is not an objectValue. \par
}{
Referenced by key().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/json/json.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/jsoncpp.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
variable Struct Reference\par \pard\plain 
{\tc\tcl2 \v variable}
{\xe \v variable}
{\bkmkstart AAAAAAAEGH}
{\bkmkend AAAAAAAEGH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const char * {\b table_column}{\bkmkstart AAAAAAAEGI}
{\bkmkend AAAAAAAEGI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const char * {\b table_name}{\bkmkstart AAAAAAAEGJ}
{\bkmkend AAAAAAAEGJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

const char * {\b column_name}{\bkmkstart AAAAAAAEGK}
{\bkmkend AAAAAAAEGK}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/ExpressionItem.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Where_list Struct Reference\par \pard\plain 
{\tc\tcl2 \v Where_list}
{\xe \v Where_list}
{\bkmkstart AAAAAAAEGL}
{\bkmkend AAAAAAAEGL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

nodetype {\b type}{\bkmkstart AAAAAAAEGM}
{\bkmkend AAAAAAAEGM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b wherestring}{\bkmkstart AAAAAAAEGN}
{\bkmkend AAAAAAAEGN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Node} * {\b next}{\bkmkstart AAAAAAAEGO}
{\bkmkend AAAAAAAEGO}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql_node_struct.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json::Writer Class Reference\par \pard\plain 
{\tc\tcl2 \v Json::Writer}
{\xe \v Json::Writer}
{\bkmkstart AAAAAAAEZT}
{\bkmkend AAAAAAAEZT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract class for writers. }}\par
{
{\f2 #include <json.h>}}\par
Inheritance diagram for Json::Writer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classJson_1_1Writer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual std::string {\b write} (const {\b Value} &root)=0{\bkmkstart AAAAAAAEZU}
{\bkmkend AAAAAAAEZU}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract class for writers. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/json/json.h\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Client/jsoncpp.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
yy_buffer_state Struct Reference\par \pard\plain 
{\tc\tcl2 \v yy_buffer_state}
{\xe \v yy_buffer_state}
{\bkmkstart AAAAAAAEGP}
{\bkmkend AAAAAAAEGP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

FILE * {\b yy_input_file}{\bkmkstart AAAAAAAEGQ}
{\bkmkend AAAAAAAEGQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b yy_ch_buf}{\bkmkstart AAAAAAAEGR}
{\bkmkend AAAAAAAEGR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b yy_buf_pos}{\bkmkstart AAAAAAAEGS}
{\bkmkend AAAAAAAEGS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

yy_size_t {\b yy_buf_size}{\bkmkstart AAAAAAAEGT}
{\bkmkend AAAAAAAEGT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

yy_size_t {\b yy_n_chars}{\bkmkstart AAAAAAAEGU}
{\bkmkend AAAAAAAEGU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yy_is_our_buffer}{\bkmkstart AAAAAAAEGV}
{\bkmkend AAAAAAAEGV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yy_is_interactive}{\bkmkstart AAAAAAAEGW}
{\bkmkend AAAAAAAEGW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yy_at_bol}{\bkmkstart AAAAAAAEGX}
{\bkmkend AAAAAAAEGX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b yy_bs_lineno}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b yy_bs_column}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yy_fill_buffer}{\bkmkstart AAAAAAAEGY}
{\bkmkend AAAAAAAEGY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yy_buffer_status}{\bkmkstart AAAAAAAEGZ}
{\bkmkend AAAAAAAEGZ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v yy_bs_column\:yy_buffer_state}
{\xe \v yy_buffer_state\:yy_bs_column}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int yy_buffer_state::yy_bs_column}}
\par
{\bkmkstart AAAAAAAEHA}
{\bkmkend AAAAAAAEHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The column count. \par
}}
{\xe \v yy_bs_lineno\:yy_buffer_state}
{\xe \v yy_buffer_state\:yy_bs_lineno}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int yy_buffer_state::yy_bs_lineno}}
\par
{\bkmkstart AAAAAAAEHB}
{\bkmkend AAAAAAAEHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The line count. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/lex.yy.cpp\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql.lex.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
yy_trans_info Struct Reference\par \pard\plain 
{\tc\tcl2 \v yy_trans_info}
{\xe \v yy_trans_info}
{\bkmkstart AAAAAAAEHC}
{\bkmkend AAAAAAAEHC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

flex_int32_t {\b yy_verify}{\bkmkstart AAAAAAAEHD}
{\bkmkend AAAAAAAEHD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

flex_int32_t {\b yy_nxt}{\bkmkstart AAAAAAAEHE}
{\bkmkend AAAAAAAEHE}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/lex.yy.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
yyGLRStack Struct Reference\par \pard\plain 
{\tc\tcl2 \v yyGLRStack}
{\xe \v yyGLRStack}
{\bkmkstart AAAAAAAEHF}
{\bkmkend AAAAAAAEHF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yyerrState}{\bkmkstart AAAAAAAEHG}
{\bkmkend AAAAAAAEHG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yyerrcnt}{\bkmkstart AAAAAAAEHH}
{\bkmkend AAAAAAAEHH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yyrawchar}{\bkmkstart AAAAAAAEHI}
{\bkmkend AAAAAAAEHI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b YYSTYPE} {\b yyval}{\bkmkstart AAAAAAAEHJ}
{\bkmkend AAAAAAAEHJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

YYJMP_BUF {\b yyexception_buffer}{\bkmkstart AAAAAAAEHK}
{\bkmkend AAAAAAAEHK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b yyGLRStackItem} * {\b yyitems}{\bkmkstart AAAAAAAEHL}
{\bkmkend AAAAAAAEHL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b yyGLRStackItem} * {\b yynextFree}{\bkmkstart AAAAAAAEHM}
{\bkmkend AAAAAAAEHM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

size_t {\b yyspaceLeft}{\bkmkstart AAAAAAAEHN}
{\bkmkend AAAAAAAEHN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b yyGLRState} * {\b yysplitPoint}{\bkmkstart AAAAAAAEHO}
{\bkmkend AAAAAAAEHO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b yyGLRState} * {\b yylastDeleted}{\bkmkstart AAAAAAAEHP}
{\bkmkend AAAAAAAEHP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b yyGLRStateSet} {\b yytops}{\bkmkstart AAAAAAAEHQ}
{\bkmkend AAAAAAAEHQ}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql.tab.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
yyGLRStackItem Union Reference\par \pard\plain 
{\tc\tcl2 \v yyGLRStackItem}
{\xe \v yyGLRStackItem}
{\bkmkstart AAAAAAAEHR}
{\bkmkend AAAAAAAEHR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b yyGLRState} {\b yystate}{\bkmkstart AAAAAAAEHS}
{\bkmkend AAAAAAAEHS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b yySemanticOption} {\b yyoption}{\bkmkstart AAAAAAAEHT}
{\bkmkend AAAAAAAEHT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type of the items in the GLR stack. The yyisState field indicates which item of the union is valid. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this union was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql.tab.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
yyGLRState Struct Reference\par \pard\plain 
{\tc\tcl2 \v yyGLRState}
{\xe \v yyGLRState}
{\bkmkstart AAAAAAAEHU}
{\bkmkend AAAAAAAEHU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
yybool {\b yyisState}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
yybool {\b yyresolved}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
yyStateNum {\b yylrState}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b yyGLRState} * {\b yypred}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b yyposn}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

union \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b yySemanticOption} * {\b yyfirstVal}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b YYSTYPE} {\b yysval}\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b yysemantics}{\bkmkstart AAAAAAAEHV}
{\bkmkend AAAAAAAEHV}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v yyfirstVal\:yyGLRState}
{\xe \v yyGLRState\:yyfirstVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b yySemanticOption}* yyGLRState::yyfirstVal}}
\par
{\bkmkstart AAAAAAAEHW}
{\bkmkend AAAAAAAEHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
First in a chain of alternative reductions producing the non-terminal corresponding to this state, threaded through yynext. \par
}}
{\xe \v yyisState\:yyGLRState}
{\xe \v yyGLRState\:yyisState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
yybool yyGLRState::yyisState}}
\par
{\bkmkstart AAAAAAAEHX}
{\bkmkend AAAAAAAEHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type tag: always true. \par
}}
{\xe \v yylrState\:yyGLRState}
{\xe \v yyGLRState\:yylrState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
yyStateNum yyGLRState::yylrState}}
\par
{\bkmkstart AAAAAAAEHY}
{\bkmkend AAAAAAAEHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of corresponding LALR(1) machine state. \par
}}
{\xe \v yyposn\:yyGLRState}
{\xe \v yyGLRState\:yyposn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t yyGLRState::yyposn}}
\par
{\bkmkstart AAAAAAAEHZ}
{\bkmkend AAAAAAAEHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Source position of the first token produced by my symbol \par
}}
{\xe \v yypred\:yyGLRState}
{\xe \v yyGLRState\:yypred}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b yyGLRState}* yyGLRState::yypred}}
\par
{\bkmkstart AAAAAAAEIA}
{\bkmkend AAAAAAAEIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Preceding state in this stack \par
}}
{\xe \v yyresolved\:yyGLRState}
{\xe \v yyGLRState\:yyresolved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
yybool yyGLRState::yyresolved}}
\par
{\bkmkstart AAAAAAAEIB}
{\bkmkend AAAAAAAEIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type tag for yysemantics. If true, yysval applies, otherwise yyfirstVal applies. \par
}}
{\xe \v yysval\:yyGLRState}
{\xe \v yyGLRState\:yysval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b YYSTYPE} yyGLRState::yysval}}
\par
{\bkmkstart AAAAAAAEIC}
{\bkmkend AAAAAAAEIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Semantic value for this state. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql.tab.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
yyGLRStateSet Struct Reference\par \pard\plain 
{\tc\tcl2 \v yyGLRStateSet}
{\xe \v yyGLRStateSet}
{\bkmkstart AAAAAAAEID}
{\bkmkend AAAAAAAEID}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b yyGLRState} ** {\b yystates}{\bkmkstart AAAAAAAEIE}
{\bkmkend AAAAAAAEIE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
yybool * {\b yylookaheadNeeds}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

size_t {\b yysize}{\bkmkstart AAAAAAAEIF}
{\bkmkend AAAAAAAEIF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

size_t {\b yycapacity}{\bkmkstart AAAAAAAEIG}
{\bkmkend AAAAAAAEIG}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v yylookaheadNeeds\:yyGLRStateSet}
{\xe \v yyGLRStateSet\:yylookaheadNeeds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
yybool* yyGLRStateSet::yylookaheadNeeds}}
\par
{\bkmkstart AAAAAAAEIH}
{\bkmkend AAAAAAAEIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
During nondeterministic operation, yylookaheadNeeds tracks which stacks have actually needed the current lookahead. During deterministic operation, yylookaheadNeeds[0] is not maintained since it would merely duplicate yychar != YYEMPTY. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql.tab.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
yyguts_t Struct Reference\par \pard\plain 
{\tc\tcl2 \v yyguts_t}
{\xe \v yyguts_t}
{\bkmkstart AAAAAAAEII}
{\bkmkend AAAAAAAEII}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

YY_EXTRA_TYPE {\b yyextra_r}{\bkmkstart AAAAAAAEIJ}
{\bkmkend AAAAAAAEIJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

FILE * {\b yyin_r}{\bkmkstart AAAAAAAEIK}
{\bkmkend AAAAAAAEIK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

FILE * {\b yyout_r}{\bkmkstart AAAAAAAEIL}
{\bkmkend AAAAAAAEIL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b yy_buffer_stack_top}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b yy_buffer_stack_max}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b YY_BUFFER_STATE} * {\b yy_buffer_stack}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\b yy_hold_char}{\bkmkstart AAAAAAAEIM}
{\bkmkend AAAAAAAEIM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

yy_size_t {\b yy_n_chars}{\bkmkstart AAAAAAAEIN}
{\bkmkend AAAAAAAEIN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

yy_size_t {\b yyleng_r}{\bkmkstart AAAAAAAEIO}
{\bkmkend AAAAAAAEIO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b yy_c_buf_p}{\bkmkstart AAAAAAAEIP}
{\bkmkend AAAAAAAEIP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yy_init}{\bkmkstart AAAAAAAEIQ}
{\bkmkend AAAAAAAEIQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yy_start}{\bkmkstart AAAAAAAEIR}
{\bkmkend AAAAAAAEIR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yy_did_buffer_switch_on_eof}{\bkmkstart AAAAAAAEIS}
{\bkmkend AAAAAAAEIS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yy_start_stack_ptr}{\bkmkstart AAAAAAAEIT}
{\bkmkend AAAAAAAEIT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yy_start_stack_depth}{\bkmkstart AAAAAAAEIU}
{\bkmkend AAAAAAAEIU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int * {\b yy_start_stack}{\bkmkstart AAAAAAAEIV}
{\bkmkend AAAAAAAEIV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

yy_state_type {\b yy_last_accepting_state}{\bkmkstart AAAAAAAEIW}
{\bkmkend AAAAAAAEIW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b yy_last_accepting_cpos}{\bkmkstart AAAAAAAEIX}
{\bkmkend AAAAAAAEIX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yylineno_r}{\bkmkstart AAAAAAAEIY}
{\bkmkend AAAAAAAEIY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yy_flex_debug_r}{\bkmkstart AAAAAAAEIZ}
{\bkmkend AAAAAAAEIZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b yytext_r}{\bkmkstart AAAAAAAEJA}
{\bkmkend AAAAAAAEJA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yy_more_flag}{\bkmkstart AAAAAAAEJB}
{\bkmkend AAAAAAAEJB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b yy_more_len}{\bkmkstart AAAAAAAEJC}
{\bkmkend AAAAAAAEJC}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b YYSTYPE} * {\b yylval_r}{\bkmkstart AAAAAAAEJD}
{\bkmkend AAAAAAAEJD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v yy_buffer_stack\:yyguts_t}
{\xe \v yyguts_t\:yy_buffer_stack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b YY_BUFFER_STATE}* yyguts_t::yy_buffer_stack}}
\par
{\bkmkstart AAAAAAAEJE}
{\bkmkend AAAAAAAEJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stack as an array. \par
}}
{\xe \v yy_buffer_stack_max\:yyguts_t}
{\xe \v yyguts_t\:yy_buffer_stack_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t yyguts_t::yy_buffer_stack_max}}
\par
{\bkmkstart AAAAAAAEJF}
{\bkmkend AAAAAAAEJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
capacity of stack. \par
}}
{\xe \v yy_buffer_stack_top\:yyguts_t}
{\xe \v yyguts_t\:yy_buffer_stack_top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t yyguts_t::yy_buffer_stack_top}}
\par
{\bkmkstart AAAAAAAEJG}
{\bkmkend AAAAAAAEJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
index of top of stack. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/lex.yy.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
yySemanticOption Struct Reference\par \pard\plain 
{\tc\tcl2 \v yySemanticOption}
{\xe \v yySemanticOption}
{\bkmkstart AAAAAAAEJH}
{\bkmkend AAAAAAAEJH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
yybool {\b yyisState}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
yyRuleNum {\b yyrule}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b yyGLRState} * {\b yystate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b yyrawchar}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b YYSTYPE} {\b yyval}{\bkmkstart AAAAAAAEJI}
{\bkmkend AAAAAAAEJI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b yySemanticOption} * {\b yynext}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v yyisState\:yySemanticOption}
{\xe \v yySemanticOption\:yyisState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
yybool yySemanticOption::yyisState}}
\par
{\bkmkstart AAAAAAAEJJ}
{\bkmkend AAAAAAAEJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type tag: always false. \par
}}
{\xe \v yynext\:yySemanticOption}
{\xe \v yySemanticOption\:yynext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b yySemanticOption}* yySemanticOption::yynext}}
\par
{\bkmkstart AAAAAAAEJK}
{\bkmkend AAAAAAAEJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Next sibling in chain of options. To facilitate merging, options are chained in decreasing order by address. \par
}}
{\xe \v yyrawchar\:yySemanticOption}
{\xe \v yySemanticOption\:yyrawchar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int yySemanticOption::yyrawchar}}
\par
{\bkmkstart AAAAAAAEJL}
{\bkmkend AAAAAAAEJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The lookahead for this reduction. \par
}}
{\xe \v yyrule\:yySemanticOption}
{\xe \v yySemanticOption\:yyrule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
yyRuleNum yySemanticOption::yyrule}}
\par
{\bkmkstart AAAAAAAEJM}
{\bkmkend AAAAAAAEJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rule number for this reduction \par
}}
{\xe \v yystate\:yySemanticOption}
{\xe \v yySemanticOption\:yystate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b yyGLRState}* yySemanticOption::yystate}}
\par
{\bkmkstart AAAAAAAEJN}
{\bkmkend AAAAAAAEJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The last RHS state in the list of states to be reduced. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql.tab.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YYSTYPE Union Reference\par \pard\plain 
{\tc\tcl2 \v YYSTYPE}
{\xe \v YYSTYPE}
{\bkmkstart AAAAAAAEJO}
{\bkmkend AAAAAAAEJO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b intval}{\bkmkstart AAAAAAAEJP}
{\bkmkend AAAAAAAEJP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b floatval}{\bkmkstart AAAAAAAEJQ}
{\bkmkend AAAAAAAEJQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char * {\b strval}{\bkmkstart AAAAAAAEJR}
{\bkmkend AAAAAAAEJR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b subtok}{\bkmkstart AAAAAAAEJS}
{\bkmkend AAAAAAAEJS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

struct {\b Node} * {\b ast_node}{\bkmkstart AAAAAAAEJT}
{\bkmkend AAAAAAAEJT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this union was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Parsetree/sql.tab.hpp\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
common/types/ttmath/ttmathint.h File Reference\par \pard\plain 
{\tc\tcl2 \v common/types/ttmath/ttmathint.h}
{\xe \v common/types/ttmath/ttmathint.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
template class Int<uint> }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ttmathuint.h"}\par
{\f2 #include "boost/unordered_map.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ttmath::Int< value_size >}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Int} implements a big integer value with a sign. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ttmath}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a namespace for the TTMath library }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
template class Int<uint> \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
common/types/ttmath/ttmathmisc.h File Reference\par \pard\plain 
{\tc\tcl2 \v common/types/ttmath/ttmathmisc.h}
{\xe \v common/types/ttmath/ttmathmisc.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
some helpful functions }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ttmath::Misc}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ttmath}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a namespace for the TTMath library }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
some helpful functions \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
common/types/ttmath/ttmathtypes.h File Reference\par \pard\plain 
{\tc\tcl2 \v common/types/ttmath/ttmathtypes.h}
{\xe \v common/types/ttmath/ttmathtypes.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constants used in the library }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdexcept>}\par
{\f2 #include <sstream>}\par
{\f2 #include <vector>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ttmath::Conv}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ttmath::StopCalculating}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ttmath::ExceptionInfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ttmath::ReferenceError}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ttmath::RuntimeError}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ttmath}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a namespace for the TTMath library }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TTMATH_MAJOR_VER}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TTMATH_MINOR_VER}\~ 9{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TTMATH_REVISION_VER}\~ 0{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TTMATH_PRERELEASE_VER}\~ 0{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TTMATH_DEBUG}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TTMATH_PLATFORM32}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TTMATH_NOASM}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TTMATH_BITS_PER_UINT}\~ 32u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TTMATH_UINT_HIGHEST_BIT}\~ 2147483648u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TTMATH_UINT_MAX_VALUE}\~ 4294967295u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TTMATH_BUILTIN_VARIABLES_SIZE}\~ 256u\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TTMATH_BITS}(min_bits)\~ ((min_bits-1)/32 + 1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TTMATH_ARITHMETIC_MAX_LOOP}\~ 10000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TTMATH_USE_KARATSUBA_MULTIPLICATION_FROM_SIZE}\~ 5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TTMATH_GAMMA_BOUNDARY}\~ 2000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TTMATH_REFERENCE_ASSERT}(expression)\~ if( &(expression) == this ) throw ReferenceError();\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TTMATH_ASSERT}(expression)\~ if( !(expression) ) throw RuntimeError();{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TTMATH_LOG}(msg){\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TTMATH_LOGC}(msg, carry){\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TTMATH_VECTOR_LOG}(msg, vector, len){\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TTMATH_VECTOR_LOGC}(msg, carry, vector, len){\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned int {\b ttmath::uint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

typedef signed int {\b ttmath::sint}{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned long long int {\b ttmath::ulint}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ttmath::LibTypeCode} \{ {\b asm_vc_32} = 0, 
{\b asm_gcc_32}, 
{\b asm_vc_64}, 
{\b asm_gcc_64}, 
{\b no_asm_32}, 
{\b no_asm_64}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ttmath::ErrorCode} \{ {\b err_ok} = 0, 
{\b err_nothing_has_read}, 
{\b err_unknown_character}, 
{\b err_unexpected_final_bracket}, 
{\b err_stack_not_clear}, 
{\b err_unknown_variable}, 
{\b err_division_by_zero}, 
{\b err_interrupt}, 
{\b err_overflow}, 
{\b err_unknown_function}, 
{\b err_unknown_operator}, 
{\b err_unexpected_semicolon_operator}, 
{\b err_improper_amount_of_arguments}, 
{\b err_improper_argument}, 
{\b err_unexpected_end}, 
{\b err_internal_error}, 
{\b err_incorrect_name}, 
{\b err_incorrect_value}, 
{\b err_variable_exists}, 
{\b err_variable_loop}, 
{\b err_functions_loop}, 
{\b err_must_be_only_one_value}, 
{\b err_object_exists}, 
{\b err_unknown_object}, 
{\b err_still_calculating}, 
{\b err_in_short_form_used_function}, 
{\b err_percent_from}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constants used in the library \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
As our library is written in header files (templates) we cannot use constants like 'const int' etc. because we should have some source files .cpp to define this variables. Only what we can have are constants defined by #define preprocessor macros.\par
All macros are preceded by TTMATH_ prefix \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v TTMATH_ARITHMETIC_MAX_LOOP\:ttmathtypes.h}
{\xe \v ttmathtypes.h\:TTMATH_ARITHMETIC_MAX_LOOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TTMATH_ARITHMETIC_MAX_LOOP\~ 10000}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this variable defines how many iterations are performed during some kind of calculating when we're making any long formulas (for example Taylor series)\par
it's used in ExpSurrounding0(...), LnSurrounding1(...), Sin0pi05(...), etc.\par
note! there'll not be so many iterations, iterations are stopped when there is no sense to continue calculating (for example when the result still remains unchanged after adding next series and we know that the next series are smaller than previous ones) \par
}}
{\xe \v TTMATH_BITS\:ttmathtypes.h}
{\xe \v ttmathtypes.h\:TTMATH_BITS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TTMATH_BITS( min_bits)\~ ((min_bits-1)/32 + 1)}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this macro returns the number of machine words capable to hold min_bits bits e.g. {\b TTMATH_BITS(128)} returns 4 \par
}}
{\xe \v TTMATH_BITS_PER_UINT\:ttmathtypes.h}
{\xe \v ttmathtypes.h\:TTMATH_BITS_PER_UINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TTMATH_BITS_PER_UINT\~ 32u}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
how many bits there are in the uint type \par
}{
Referenced by ttmath::UInt< value_size >::BitNot2(), ttmath::UInt< value_size >::ClearFirstBits(), ttmath::UInt< value_size >::CompensationToLeft(), ttmath::UInt< value_size >::GetBit(), ttmath::UInt< value_size >::Mul1(), ttmath::UInt< value_size >::Rcl(), ttmath::UInt< value_size >::Rcr(), and ttmath::UInt< value_size >::SetBit().}\par
}
{\xe \v TTMATH_BUILTIN_VARIABLES_SIZE\:ttmathtypes.h}
{\xe \v ttmathtypes.h\:TTMATH_BUILTIN_VARIABLES_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TTMATH_BUILTIN_VARIABLES_SIZE\~ 256u}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the number of words (32bit words on 32bit platform) which are kept in built-in variables for a Big<> type (these variables are defined in ttmathbig.h) \par
}}
{\xe \v TTMATH_DEBUG\:ttmathtypes.h}
{\xe \v ttmathtypes.h\:TTMATH_DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TTMATH_DEBUG}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TTMATH_DEBUG this macro enables further testing during writing your code you don't have to define it in a release mode\par
if this macro is set then macros TTMATH_ASSERT and TTMATH_REFERENCE_ASSERT are set as well and these macros can throw an exception if a condition in it is not fulfilled (look at the definition of TTMATH_ASSERT and TTMATH_REFERENCE_ASSERT)\par
TTMATH_RELEASE if you are confident that your code is perfect you can define TTMATH_RELEASE macro for example by using -D option in gcc gcc -DTTMATH_RELEASE -o myprogram myprogram.cpp or by defining this macro in your code before using any header files of this library\par
if TTMATH_RELEASE is not set then TTMATH_DEBUG is set automatically \par
}}
{\xe \v TTMATH_GAMMA_BOUNDARY\:ttmathtypes.h}
{\xe \v ttmathtypes.h\:TTMATH_GAMMA_BOUNDARY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TTMATH_GAMMA_BOUNDARY\~ 2000}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this is a special value used when calculating the Gamma(x) function if x is greater than this value then the Gamma(x) will be calculated using some kind of series\par
don't use smaller values than about 100 \par
}}
{\xe \v TTMATH_MAJOR_VER\:ttmathtypes.h}
{\xe \v ttmathtypes.h\:TTMATH_MAJOR_VER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TTMATH_MAJOR_VER\~ 0}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the version of the library\par
TTMATH_PRERELEASE_VER is either zero or one if zero that means this is the release version of the library \par
}}
{\xe \v TTMATH_NOASM\:ttmathtypes.h}
{\xe \v ttmathtypes.h\:TTMATH_NOASM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TTMATH_NOASM}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
another compilers than MS VC or GCC by default use no asm version (TTMATH_NOASM) \par
}}
{\xe \v TTMATH_PLATFORM32\:ttmathtypes.h}
{\xe \v ttmathtypes.h\:TTMATH_PLATFORM32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TTMATH_PLATFORM32}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
we're using a 32bit platform \par
}}
{\xe \v TTMATH_REFERENCE_ASSERT\:ttmathtypes.h}
{\xe \v ttmathtypes.h\:TTMATH_REFERENCE_ASSERT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TTMATH_REFERENCE_ASSERT( expression)\~ if( &(expression) == this ) throw ReferenceError();}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
look at the description of macros TTMATH_RELEASE and TTMATH_DEBUG \par
}{
Referenced by ttmath::UInt< value_size >::Div2(), ttmath::UInt< value_size >::Div3(), and ttmath::UInt< value_size >::Mul1().}\par
}
{\xe \v TTMATH_UINT_HIGHEST_BIT\:ttmathtypes.h}
{\xe \v ttmathtypes.h\:TTMATH_UINT_HIGHEST_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TTMATH_UINT_HIGHEST_BIT\~ 2147483648u}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the mask for the highest bit in the unsigned 32bit word (2^31) \par
}{
Referenced by ttmath::Int< value_size >::FromUInt(), ttmath::UInt< value_size >::SetFromTable(), ttmath::Int< value_size >::SetMax(), and ttmath::Int< value_size >::SetMin().}\par
}
{\xe \v TTMATH_UINT_MAX_VALUE\:ttmathtypes.h}
{\xe \v ttmathtypes.h\:TTMATH_UINT_MAX_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TTMATH_UINT_MAX_VALUE\~ 4294967295u}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the max value of the unsigned 32bit word (2^32 - 1) (all bits equal one) \par
}{
Referenced by ttmath::UInt< value_size >::BitNot2(), ttmath::UInt< value_size >::ClearFirstBits(), ttmath::Int< value_size >::FromInt(), ttmath::UInt< value_size >::SetFromTable(), and ttmath::UInt< value_size >::SetMax().}\par
}
{\xe \v TTMATH_USE_KARATSUBA_MULTIPLICATION_FROM_SIZE\:ttmathtypes.h}
{\xe \v ttmathtypes.h\:TTMATH_USE_KARATSUBA_MULTIPLICATION_FROM_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TTMATH_USE_KARATSUBA_MULTIPLICATION_FROM_SIZE\~ 5}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this is a limit when calculating Karatsuba multiplication if the size of a vector is smaller than TTMATH_USE_KARATSUBA_MULTIPLICATION_FROM_SIZE the Karatsuba algorithm will use standard schoolbook multiplication \par
}{
Referenced by ttmath::UInt< value_size >::MulFastestBig().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
common/types/ttmath/ttmathuint.h File Reference\par \pard\plain 
{\tc\tcl2 \v common/types/ttmath/ttmathuint.h}
{\xe \v common/types/ttmath/ttmathuint.h}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
template class UInt<uint> }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <iomanip>}\par
{\f2 #include "ttmathtypes.h"}\par
{\f2 #include "ttmathmisc.h"}\par
{\f2 #include "ttmathuint_x86.h"}\par
{\f2 #include "ttmathuint_x86_64.h"}\par
{\f2 #include "ttmathuint_noasm.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ttmath::UInt< value_size >}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b UInt} implements a big integer value without a sign. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ttmath::UInt< 0 >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ttmath}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a namespace for the TTMath library }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
template class UInt<uint> \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
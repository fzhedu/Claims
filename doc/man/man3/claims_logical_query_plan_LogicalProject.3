.TH "claims::logical_operator::LogicalProject" 3 "Fri Oct 9 2015" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
claims::logical_operator::LogicalProject \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBclaims::logical_operator::LogicalOperator\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLogicalProject\fP (\fBLogicalOperator\fP *child, vector< \fBQNode\fP * > expression_tree)"
.br
.ti -1c
.RI "\fBPlanContext\fP \fBGetPlanContext\fP ()"
.br
.RI "\fIMethod description : construct a \fBPlanContext\fP from child\&. \fP"
.ti -1c
.RI "\fBBlockStreamIteratorBase\fP * \fBGetPhysicalPlan\fP (const unsigned &kBlockSize)"
.br
.RI "\fIMethod description: generate a few physical operations according to this logical operation\&. \fP"
.ti -1c
.RI "virtual bool \fBGetOptimalPhysicalPlan\fP (\fBRequirement\fP requirement, \fBPhysicalPlanDescriptor\fP &physical_plan_descriptor, const unsigned &kBlockSize=4096 *1024)"
.br
.ti -1c
.RI "void \fBPrint\fP (int level=0) const "
.br
.RI "\fIMethod description:Print the schema\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Member Function Documentation"
.PP 
.SS "virtual bool claims::logical_operator::LogicalProject::GetOptimalPhysicalPlan (\fBRequirement\fPrequirement, \fBPhysicalPlanDescriptor\fP &physical_plan_descriptor, const unsigned &block_size = \fC4096 * 1024\fP)\fC [inline]\fP, \fC [virtual]\fP"
get the optimal Physical plan that meets the requirement\&. 
.PP
\fBReturns:\fP
.RS 4
true if find physical plan that meets the requirement and store the physical plan and its corresponding information in physical_plan_descriptor\&. 
.RE
.PP

.PP
Reimplemented from \fBclaims::logical_operator::LogicalOperator\fP\&.
.SS "\fBBlockStreamIteratorBase\fP * claims::logical_operator::LogicalProject::GetPhysicalPlan (const unsigned &kBlockSize)\fC [virtual]\fP"

.PP
Method description: generate a few physical operations according to this logical operation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIblock_size\fP : give the size of block in physical plan 
.RE
.PP
\fBReturns:\fP
.RS 4
the total physical plan include the physical plan generated by child operation 
.RE
.PP

.PP
Implements \fBclaims::logical_operator::LogicalOperator\fP\&.
.PP
References claims::logical_operator::LogicalOperator::GetPhysicalPlan(), GetPlanContext(), and claims::logical_operator::LogicalOperator::GetPlanContext()\&.
.SS "\fBPlanContext\fP claims::logical_operator::LogicalProject::GetPlanContext ()\fC [virtual]\fP"

.PP
Method description : construct a \fBPlanContext\fP from child\&. 
.PP
\fBReturns:\fP
.RS 4
: constructed plan_context 
.RE
.PP
set commnication_cost and partitioner of the \fBPlanContext\fP to be returned from \fBPlanContext\fP of child
.PP
if the expression type is compare,then the new column will be boolean type, else will be it's actual type according to the variable
.PP
if the return type is a String value,then we have to calculate the length of the string else just construct a column having the same type as the return type
.PP
Implements \fBclaims::logical_operator::LogicalOperator\fP\&.
.PP
References claims::logical_operator::LogicalOperator::GetPlanContext()\&.
.PP
Referenced by GetPhysicalPlan()\&.
.SS "void claims::logical_operator::LogicalProject::Print (intlevel = \fC0\fP) const\fC [virtual]\fP"

.PP
Method description:Print the schema\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlevel:initialized\fP to zero 
.RE
.PP

.PP
Implements \fBclaims::logical_operator::LogicalOperator\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.

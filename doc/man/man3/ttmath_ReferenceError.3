.TH "ttmath::ReferenceError" 3 "Fri Oct 9 2015" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ttmath::ReferenceError \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ttmathtypes\&.h>\fP
.PP
Inherits logic_error, and \fBttmath::ExceptionInfo\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBReferenceError\fP (const char *f, int l)"
.br
.ti -1c
.RI "std::string \fBWhere\fP () const "
.br
.in -1c
.SH "Detailed Description"
.PP 
A small class used for reporting 'reference' errors
.PP
In the library is used macro TTMATH_REFERENCE_ASSERT which can throw an exception of this type
.PP
If you compile with gcc you can get a small benefit from using method Where() (it returns std::string) with the name and the line of a file where the macro TTMATH_REFERENCE_ASSERT was used)
.PP
What is the 'reference' error? Some kind of methods use a reference as their argument to another object, and the another object not always can be the same which is calling, e\&.g\&. Big<1,2> foo(10); foo\&.Mul(foo); // this is incorrect above method Mul is making something more with 'this' object and 'this' cannot be passed as the argument because the result will be undefined
.PP
macro TTMATH_REFERENCE_ASSERT helps us to solve the above problem
.PP
note! some methods can use 'this' object as the argument for example this code is correct: UInt<2> foo(10); foo\&.Add(foo); but there are only few methods which can do that 

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
